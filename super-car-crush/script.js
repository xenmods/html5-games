! function(e) {
    var n = {};

    function t(o) {
        if (n[o]) return n[o].exports;
        var r = n[o] = {
            i: o,
            l: !1,
            exports: {}
        };
        return e[o].call(r.exports, r, r.exports, t), r.l = !0, r.exports
    }
    t.m = e, t.c = n, t.d = function(e, n, o) {
        t.o(e, n) || Object.defineProperty(e, n, {
            enumerable: !0,
            get: o
        })
    }, t.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, t.t = function(e, n) {
        if (1 & n && (e = t(e)), 8 & n) return e;
        if (4 & n && "object" == typeof e && e && e.__esModule) return e;
        var o = Object.create(null);
        if (t.r(o), Object.defineProperty(o, "default", {
                enumerable: !0,
                value: e
            }), 2 & n && "string" != typeof e)
            for (var r in e) t.d(o, r, function(n) {
                return e[n]
            }.bind(null, r));
        return o
    }, t.n = function(e) {
        var n = e && e.__esModule ? function() {
            return e.default
        } : function() {
            return e
        };
        return t.d(n, "a", n), n
    }, t.o = function(e, n) {
        return Object.prototype.hasOwnProperty.call(e, n)
    }, t.p = "", t(t.s = 68)
}({
    68: function(e, n, t) {
        var o = new(function() {
            function e() {
                var e = this;
                this.queue = [], this.init = function(n) {
                    return void 0 === n && (n = {}), new Promise((function(t, o) {
                        e.enqueue("init", n, t, o)
                    }))
                }, this.rewardedBreak = function() {
                    return new Promise((function(e) {
                        e(!1)
                    }))
                }, this.noArguments = function(n) {
                    return function() {
                        e.enqueue(n)
                    }
                }, this.oneArgument = function(n) {
                    return function(t) {
                        e.enqueue(n, t)
                    }
                }, this.handleAutoResolvePromise = function() {
                    return new Promise((function(e) {
                        e()
                    }))
                }, this.handleAutoResolvePromiseObj = function() {
                    return new Promise((function(e) {
                        e()
                    }))
                }, this.throwNotLoaded = function() {
                    console.debug("PokiSDK is not loaded yet. Not all methods are available.")
                }
            }
            return e.prototype.enqueue = function(e, n, t, o) {
                var r = {
                    fn: e,
                    options: n,
                    resolveFn: t,
                    rejectFn: o
                };
                this.queue.push(r)
            }, e.prototype.dequeue = function() {
                for (var e = function() {
                        var e = n.queue.shift(),
                            t = e,
                            o = t.fn,
                            r = t.options;
                        "function" == typeof window.PokiSDK[o] ? (null == e ? void 0 : e.resolveFn) || (null == e ? void 0 : e.rejectFn) ? window.PokiSDK[o](r).then((function() {
                            for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];
                            "function" == typeof e.resolveFn && e.resolveFn.apply(e, n)
                        })).catch((function() {
                            for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];
                            "function" == typeof e.rejectFn && e.rejectFn.apply(e, n)
                        })) : void 0 !== (null == e ? void 0 : e.fn) && window.PokiSDK[o](r) : console.error("Cannot execute " + e.fn)
                    }, n = this; this.queue.length > 0;) e()
            }, e
        }());
        window.PokiSDK = {
            init: o.init,
            initWithVideoHB: o.init,
            customEvent: o.throwNotLoaded,
            commercialBreak: function() {
                console.log("PokiSDK Ad: commercialBreak() called");
                // Return a resolved promise as the original function did
                return Promise.resolve();
            },
            rewardedBreak: function() {
                console.log("PokiSDK Ad: rewardedBreak() called");
                // Return a promise that resolves to 'false' to simulate no ad watched
                return Promise.resolve(false);
            },
            displayAd: function(options) {
                console.log("PokiSDK Ad: displayAd() called with options:", options);
            },
            destroyAd: function(options) {
                console.log("PokiSDK Ad: destroyAd() called with options:", options);
            },
            getLeaderboard: o.handleAutoResolvePromiseObj
        }, ["disableProgrammatic", "gameLoadingStart", "gameLoadingFinished", "gameInteractive", "roundStart", "roundEnd", "muteAd"].forEach((function(e) {
            window.PokiSDK[e] = o.noArguments(e)
        })), ["setDebug", "gameplayStart", "gameplayStop", "gameLoadingProgress", "happyTime", "setPlayerAge", "togglePlayerAdvertisingConsent", "toggleNonPersonalized", "setConsentString", "logError", "sendHighscore", "setDebugTouchOverlayController"].forEach((function(e) {
            window.PokiSDK[e] = o.oneArgument(e)
        }));
        var r = function() {
                var e, n = window.pokiSDKVersion;
                n || (n = (e = RegExp("[?&]" + "ab" + "=([^&]*)").exec(window.location.search)) && decodeURIComponent(e[1].replace(/\+/g, " ")) || "v2");
                return "data:@file/javascript;base64,IWZ1bmN0aW9uKGUpe3ZhciBpPXt9O2Z1bmN0aW9uIHIodCl7aWYoaVt0XSlyZXR1cm4gaVt0XS5leHBvcnRzO3ZhciBuPWlbdF09e2k6dCxsOiExLGV4cG9ydHM6e319O3JldHVybiBlW3RdLmNhbGwobi5leHBvcnRzLG4sbi5leHBvcnRzLHIpLG4ubD0hMCxuLmV4cG9ydHN9ci5tPWUsci5jPWksci5kPWZ1bmN0aW9uKHQsbixlKXtyLm8odCxuKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbix7ZW51bWVyYWJsZTohMCxnZXQ6ZX0pfSxyLnI9ZnVuY3Rpb24odCl7InVuZGVmaW5lZCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZToiTW9kdWxlIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KX0sci50PWZ1bmN0aW9uKG4sdCl7aWYoMSZ0JiYobj1yKG4pKSw4JnQpcmV0dXJuIG47aWYoNCZ0JiYib2JqZWN0Ij09dHlwZW9mIG4mJm4mJm4uX19lc01vZHVsZSlyZXR1cm4gbjt2YXIgZT1PYmplY3QuY3JlYXRlKG51bGwpO2lmKHIucihlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiZGVmYXVsdCIse2VudW1lcmFibGU6ITAsdmFsdWU6bn0pLDImdCYmInN0cmluZyIhPXR5cGVvZiBuKWZvcih2YXIgaSBpbiBuKXIuZChlLGksZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19LmJpbmQobnVsbCxpKSk7cmV0dXJuIGV9LHIubj1mdW5jdGlvbih0KXt2YXIgbj10JiZ0Ll9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gdC5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiB0fTtyZXR1cm4gci5kKG4sImEiLG4pLG59LHIubz1mdW5jdGlvbih0LG4pe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxuKX0sci5wPSIiLHIoci5zPTExMCl9KFtmdW5jdGlvbihlLHQsbil7KGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4odCl7cmV0dXJuIHQmJnQuTWF0aD09TWF0aCYmdH1lLmV4cG9ydHM9bigib2JqZWN0Ij09dHlwZW9mIGdsb2JhbFRoaXMmJmdsb2JhbFRoaXMpfHxuKCJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cpfHxuKCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZil8fG4oIm9iamVjdCI9PXR5cGVvZiB0JiZ0KXx8RnVuY3Rpb24oInJldHVybiB0aGlzIikoKX0pLmNhbGwodGhpcyxuKDM3KSl9LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDApLHI9ZSg0Myksbz1lKDMpLGE9ZSg0NCkscz1lKDUxKSxlPWUoODApLGQ9cigid2tzIiksYz1pLlN5bWJvbCx1PWU/YzpjJiZjLndpdGhvdXRTZXR0ZXJ8fGE7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBvKGQsdCl8fChzJiZvKGMsdCk/ZFt0XT1jW3RdOmRbdF09dSgiU3ltYm9sLiIrdCkpLGRbdF19fSxmdW5jdGlvbih0LG4pe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt0cnl7cmV0dXJuISF0KCl9Y2F0Y2godCl7cmV0dXJuITB9fX0sZnVuY3Rpb24odCxuKXt2YXIgZT17fS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5jYWxsKHQsbil9fSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg4KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoIWkodCkpdGhyb3cgVHlwZUVycm9yKFN0cmluZyh0KSsiIGlzIG5vdCBhbiBvYmplY3QiKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsbixlKXt2YXIgYz1lKDApLHU9ZSgyMykuZixsPWUoNyksQT1lKDEyKSxtPWUoMjYpLHA9ZSg3MiksZj1lKDQ4KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXt2YXIgZSxpLHIsbyxhPXQudGFyZ2V0LHM9dC5nbG9iYWwsZD10LnN0YXQ7aWYoZT1zP2M6ZD9jW2FdfHxtKGEse30pOihjW2FdfHx7fSkucHJvdG90eXBlKWZvcihpIGluIG4pe2lmKHI9bltpXSxvPXQubm9UYXJnZXRHZXQ/KG89dShlLGkpKSYmby52YWx1ZTplW2ldLCFmKHM/aTphKyhkPyIuIjoiIyIpK2ksdC5mb3JjZWQpJiZ2b2lkIDAhPT1vKXtpZih0eXBlb2Ygcj09dHlwZW9mIG8pY29udGludWU7cChyLG8pfSh0LnNoYW18fG8mJm8uc2hhbSkmJmwociwic2hhbSIsITApLEEoZSxpLHIsdCl9fX0sZnVuY3Rpb24odCxuLGUpe2U9ZSgyKTt0LmV4cG9ydHM9IWUoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LDEse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pWzFdfSl9LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDYpLHI9ZSg5KSxvPWUoMTkpO3QuZXhwb3J0cz1pP2Z1bmN0aW9uKHQsbixlKXtyZXR1cm4gci5mKHQsbixvKDEsZSkpfTpmdW5jdGlvbih0LG4sZSl7cmV0dXJuIHRbbl09ZSx0fX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiB0P251bGwhPT10OiJmdW5jdGlvbiI9PXR5cGVvZiB0fX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoNikscj1lKDQxKSxvPWUoNCksYT1lKDQwKSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtuLmY9aT9zOmZ1bmN0aW9uKHQsbixlKXtpZihvKHQpLG49YShuLCEwKSxvKGUpLHIpdHJ5e3JldHVybiBzKHQsbixlKX1jYXRjaCh0KXt9aWYoImdldCJpbiBlfHwic2V0ImluIGUpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCIpO3JldHVybiJ2YWx1ZSJpbiBlJiYodFtuXT1lLnZhbHVlKSx0fX0sZnVuY3Rpb24odCxuLGUpe2Z1bmN0aW9uIGkodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDp2b2lkIDB9dmFyIHI9ZSgzMCksbz1lKDApO3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPDI/aShyW3RdKXx8aShvW3RdKTpyW3RdJiZyW3RdW25dfHxvW3RdJiZvW3RdW25dfX0sZnVuY3Rpb24oXyxCLHQpeyhmdW5jdGlvbih0KXt2YXIgbixnLGwsZSxpLGMscix1LG8sYSxzLEE7ZnVuY3Rpb24gaCh0KXtpZigic3RyaW5nIiE9dHlwZW9mIHQpcmV0dXJuW107aWYoIUMocix0KSl7dmFyIG49IiIsZT0iIjt0cnl7ZT1nLmRvY3VtZW50LmRvbWFpbn1jYXRjaCh0KXt9dmFyIGk9LyguKilcOlwvXC8oW146XC9dKykoWzpcZF0qKVwvezAsMX0oW1xzXFNdKikvLmV4ZWModCk7aSYmaVsyXT09PWUmJihuPWZ1bmN0aW9uKHQpe2lmKCFsLnJlbW90ZUZldGNoaW5nKXJldHVybiIiO3RyeXt2YXIgbj1mdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IGcuWE1MSHR0cFJlcXVlc3R9Y2F0Y2godCl7cmV0dXJuIG5ldyBnLkFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIil9fSgpO3JldHVybiBuLm9wZW4oIkdFVCIsdCwhMSksbi5zZW5kKCIiKSxuLnJlc3BvbnNlVGV4dH1jYXRjaCh0KXtyZXR1cm4iIn19KHQpKSxyW3RdPW4/bi5zcGxpdCgiXG4iKTpbXX1yZXR1cm4gclt0XX1mdW5jdGlvbiB3KHQsbil7dmFyIGUsaT0vZnVuY3Rpb24gKFteKF0qKVwoKFteKV0qKVwpLyxyPS9bJyJdPyhbMC05QS1aYS16JF9dKylbJyJdP1xzKls6PV1ccyooZnVuY3Rpb258ZXZhbHxuZXcgRnVuY3Rpb24pLyxvPSIiLGE9aCh0KTtpZighYS5sZW5ndGgpcmV0dXJuIj8iO2Zvcih2YXIgcz0wO3M8MTA7KytzKWlmKCFJKG89YVtuLXNdK28pKXtpZihlPXIuZXhlYyhvKSlyZXR1cm4gZVsxXTtpZihlPWkuZXhlYyhvKSlyZXR1cm4gZVsxXX1yZXR1cm4iPyJ9ZnVuY3Rpb24geSh0LG4pe3ZhciBlPWgodCk7aWYoIWUubGVuZ3RoKXJldHVybiBudWxsO3ZhciBpPVtdLHI9TWF0aC5mbG9vcihsLmxpbmVzT2ZDb250ZXh0LzIpLHQ9citsLmxpbmVzT2ZDb250ZXh0JTIscj1NYXRoLm1heCgwLG4tci0xKSxvPU1hdGgubWluKGUubGVuZ3RoLG4rdC0xKTstLW47Zm9yKHZhciBhPXI7YTxvOysrYSlJKGVbYV0pfHxpLnB1c2goZVthXSk7cmV0dXJuIDA8aS5sZW5ndGg/aTpudWxsfWZ1bmN0aW9uIG0odCl7cmV0dXJuIHQucmVwbGFjZSgvW1wtXFtcXXt9KCkqKz8uLFxcXF4kfCNdL2csIlxcJCYiKX1mdW5jdGlvbiBiKHQpe3JldHVybiBtKHQpLnJlcGxhY2UoIjwiLCIoPzo8fCZsdDspIikucmVwbGFjZSgiPiIsIig/Oj58Jmd0OykiKS5yZXBsYWNlKCImIiwiKD86JnwmYW1wOykiKS5yZXBsYWNlKCciJywnKD86InwmcXVvdDspJykucmVwbGFjZSgvXHMrL2csIlxccysiKX1mdW5jdGlvbiBrKHQsbil7Zm9yKHZhciBlLGkscj0wLG89bi5sZW5ndGg7cjxvOysrcilpZigoZT1oKG5bcl0pKS5sZW5ndGgmJihlPWUuam9pbigiXG4iKSxpPXQuZXhlYyhlKSkpcmV0dXJue3VybDpuW3JdLGxpbmU6ZS5zdWJzdHJpbmcoMCxpLmluZGV4KS5zcGxpdCgiXG4iKS5sZW5ndGgsY29sdW1uOmkuaW5kZXgtZS5sYXN0SW5kZXhPZigiXG4iLGkuaW5kZXgpLTF9O3JldHVybiBudWxsfWZ1bmN0aW9uIHAodCxuLGUpe3ZhciBpLG49aChuKSx0PW5ldyBSZWdFeHAoIlxcYiIrbSh0KSsiXFxiIik7cmV0dXJuLS1lLG4mJm4ubGVuZ3RoPmUmJihpPXQuZXhlYyhuW2VdKSk/aS5pbmRleDpudWxsfWZ1bmN0aW9uIGQodCl7aWYoIXQuc3RhY2spcmV0dXJuIG51bGw7Zm9yKHZhciBuLGUsaT0vXlxzKmF0ICguKj8pID9cKCgoPzpmaWxlfGh0dHBzP3xibG9ifGNocm9tZS1leHRlbnNpb258bmF0aXZlfGV2YWx8d2VicGFja3w8YW5vbnltb3VzPnxcLykuKj8pKD86OihcZCspKT8oPzo6KFxkKykpP1wpP1xzKiQvaSxyPS9eXHMqKC4qPykoPzpcKCguKj8pXCkpPyg/Ol58QCkoKD86ZmlsZXxodHRwcz98YmxvYnxjaHJvbWV8d2VicGFja3xyZXNvdXJjZXxcW25hdGl2ZSkuKj98W15AXSpidW5kbGUpKD86OihcZCspKT8oPzo6KFxkKykpP1xzKiQvaSxvPS9eXHMqYXQgKD86KCg/Olxbb2JqZWN0IG9iamVjdFxdKT8uKykgKT9cKD8oKD86ZmlsZXxtcy1hcHB4fGh0dHBzP3x3ZWJwYWNrfGJsb2IpOi4qPyk6KFxkKykoPzo6KFxkKykpP1wpP1xzKiQvaSxhPS8oXFMrKSBsaW5lIChcZCspKD86ID4gZXZhbCBsaW5lIFxkKykqID4gZXZhbC9pLHM9L1woKFxTKikoPzo6KFxkKykpKD86OihcZCspKVwpLyxkPXQuc3RhY2suc3BsaXQoIlxuIiksYz1bXSx1PS9eKC4qKSBpcyB1bmRlZmluZWQkLy5leGVjKHQubWVzc2FnZSksbD0wLEE9ZC5sZW5ndGg7bDxBOysrbCl7aWYoZT1pLmV4ZWMoZFtsXSkpe3ZhciBtPWVbMl0mJjA9PT1lWzJdLmluZGV4T2YoIm5hdGl2ZSIpO2VbMl0mJjA9PT1lWzJdLmluZGV4T2YoImV2YWwiKSYmKG49cy5leGVjKGVbMl0pKSYmKGVbMl09blsxXSxlWzNdPW5bMl0sZVs0XT1uWzNdKSxtPXt1cmw6bT9udWxsOmVbMl0sZnVuYzplWzFdfHwiPyIsYXJnczptP1tlWzJdXTpbXSxsaW5lOmVbM10/K2VbM106bnVsbCxjb2x1bW46ZVs0XT8rZVs0XTpudWxsfX1lbHNlIGlmKGU9by5leGVjKGRbbF0pKW09e3VybDplWzJdLGZ1bmM6ZVsxXXx8Ij8iLGFyZ3M6W10sbGluZTorZVszXSxjb2x1bW46ZVs0XT8rZVs0XTpudWxsfTtlbHNle2lmKCEoZT1yLmV4ZWMoZFtsXSkpKWNvbnRpbnVlO2VbM10mJi0xPGVbM10uaW5kZXhPZigiID4gZXZhbCIpJiYobj1hLmV4ZWMoZVszXSkpPyhlWzNdPW5bMV0sZVs0XT1uWzJdLGVbNV09bnVsbCk6MCE9PWx8fGVbNV18fEkodC5jb2x1bW5OdW1iZXIpfHwoY1swXS5jb2x1bW49dC5jb2x1bW5OdW1iZXIrMSksbT17dXJsOmVbM10sZnVuYzplWzFdfHwiPyIsYXJnczplWzJdP2VbMl0uc3BsaXQoIiwiKTpbXSxsaW5lOmVbNF0/K2VbNF06bnVsbCxjb2x1bW46ZVs1XT8rZVs1XTpudWxsfX0hbS5mdW5jJiZtLmxpbmUmJihtLmZ1bmM9dyhtLnVybCxtLmxpbmUpKSxtLmNvbnRleHQ9bS5saW5lP3kobS51cmwsbS5saW5lKTpudWxsLGMucHVzaChtKX1yZXR1cm4gYy5sZW5ndGg/KGNbMF0mJmNbMF0ubGluZSYmIWNbMF0uY29sdW1uJiZ1JiYoY1swXS5jb2x1bW49cCh1WzFdLGNbMF0udXJsLGNbMF0ubGluZSkpLHttb2RlOiJzdGFjayIsbmFtZTp0Lm5hbWUsbWVzc2FnZTp0Lm1lc3NhZ2Usc3RhY2s6Y30pOm51bGx9ZnVuY3Rpb24gZih0LG4sZSxpKXtlPXt1cmw6bixsaW5lOmV9O2lmKGUudXJsJiZlLmxpbmUpe3QuaW5jb21wbGV0ZT0hMSxlLmZ1bmN8fChlLmZ1bmM9dyhlLnVybCxlLmxpbmUpKSxlLmNvbnRleHR8fChlLmNvbnRleHQ9eShlLnVybCxlLmxpbmUpKTtpPS8gJyhbXiddKyknIC8uZXhlYyhpKTtpZihpJiYoZS5jb2x1bW49cChpWzFdLGUudXJsLGUubGluZSkpLDA8dC5zdGFjay5sZW5ndGgmJnQuc3RhY2tbMF0udXJsPT09ZS51cmwpe2lmKHQuc3RhY2tbMF0ubGluZT09PWUubGluZSlyZXR1cm4hMTtpZighdC5zdGFja1swXS5saW5lJiZ0LnN0YWNrWzBdLmZ1bmM9PT1lLmZ1bmMpcmV0dXJuIHQuc3RhY2tbMF0ubGluZT1lLmxpbmUsdC5zdGFja1swXS5jb250ZXh0PWUuY29udGV4dCwhMX1yZXR1cm4gdC5zdGFjay51bnNoaWZ0KGUpLHQucGFydGlhbD0hMH1yZXR1cm4hKHQuaW5jb21wbGV0ZT0hMCl9ZnVuY3Rpb24gdih0LG4pe2Zvcih2YXIgZSxpLHIsbyxhPS9mdW5jdGlvblxzKyhbXyRhLXpBLVpceEEwLVx1RkZGRl1bXyRhLXpBLVowLTlceEEwLVx1RkZGRl0qKT9ccypcKC9pLHM9W10sZD17fSxjPSExLHU9di5jYWxsZXI7dSYmIWM7dT11LmNhbGxlcilpZih1IT09UyYmdSE9PWwucmVwb3J0KXtpZihpPXt1cmw6bnVsbCxmdW5jOiI/IixhcmdzOltdLGxpbmU6bnVsbCxjb2x1bW46bnVsbH0sdS5uYW1lP2kuZnVuYz11Lm5hbWU6KGU9YS5leGVjKHUudG9TdHJpbmcoKSkpJiYoaS5mdW5jPWVbMV0pLHZvaWQgMD09PWkuZnVuYyl0cnl7aS5mdW5jPWUuaW5wdXQuc3Vic3RyaW5nKDAsZS5pbnB1dC5pbmRleE9mKCJ7IikpfWNhdGNoKHQpe30ocj1mdW5jdGlvbih0KXtpZighSShnJiZnLmRvY3VtZW50KSl7Zm9yKHZhciBuLGUsaSxyPVtnLmxvY2F0aW9uLmhyZWZdLG89Zy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IiksYT0iIit0LHM9MDtzPG8ubGVuZ3RoOysrcyl7dmFyIGQ9b1tzXTtkLnNyYyYmci5wdXNoKGQuc3JjKX1pZihlPWsoKG49L15mdW5jdGlvbig/OlxzKyhbXHckXSspKT9ccypcKChbXHdccyxdKilcKVxzKlx7XHMqKFxTW1xzXFNdKlxTKVxzKlx9XHMqJC8uZXhlYyhhKSk/KHQ9blsxXT8iXFxzKyIrblsxXToiIixlPW5bMl0uc3BsaXQoIiwiKS5qb2luKCJcXHMqLFxccyoiKSxpPW0oblszXSkucmVwbGFjZSgvOyQvLCI7PyIpLG5ldyBSZWdFeHAoImZ1bmN0aW9uIit0KyJcXHMqXFwoXFxzKiIrZSsiXFxzKlxcKVxccyp7XFxzKiIraSsiXFxzKn0iKSk6bmV3IFJlZ0V4cChtKGEpLnJlcGxhY2UoL1xzKy9nLCJcXHMrIikpLHIpKXJldHVybiBlO2lmKG49L15mdW5jdGlvbiBvbihbXHckXSspXHMqXChldmVudFwpXHMqXHtccyooXFNbXHNcU10qXFMpXHMqXH1ccyokLy5leGVjKGEpKXthPW5bMV07aWYoaT1iKG5bMl0pLGU9ayhuZXcgUmVnRXhwKCJvbiIrYSsiPVtcXCdcIl1cXHMqIitpKyJcXHMqW1xcJ1wiXSIsImkiKSxyWzBdKSlyZXR1cm4gZTtpZihlPWsobmV3IFJlZ0V4cChpKSxyKSlyZXR1cm4gZX1yZXR1cm4gbnVsbH19KHUpKSYmKGkudXJsPXIudXJsLGkubGluZT1yLmxpbmUsIj8iPT09aS5mdW5jJiYoaS5mdW5jPXcoaS51cmwsaS5saW5lKSksKG89LyAnKFteJ10rKScgLy5leGVjKHQubWVzc2FnZXx8dC5kZXNjcmlwdGlvbikpJiYoaS5jb2x1bW49cChvWzFdLHIudXJsLHIubGluZSkpKSxkWyIiK3VdP2M9ITA6ZFsiIit1XT0hMCxzLnB1c2goaSl9biYmcy5zcGxpY2UoMCxuKTtuPXttb2RlOiJjYWxsZXJzIixuYW1lOnQubmFtZSxtZXNzYWdlOnQubWVzc2FnZSxzdGFjazpzfTtyZXR1cm4gZihuLHQuc291cmNlVVJMfHx0LmZpbGVOYW1lLHQubGluZXx8dC5saW5lTnVtYmVyLHQubWVzc2FnZXx8dC5kZXNjcmlwdGlvbiksbn1mdW5jdGlvbiBTKHQsbil7dmFyIGU9bnVsbDtuPW51bGw9PW4/MDorbjt0cnl7aWYoZT1mdW5jdGlvbih0KXt2YXIgbj10LnN0YWNrdHJhY2U7aWYobil7Zm9yKHZhciBlLGk9LyBsaW5lIChcZCspLipzY3JpcHQgKD86aW4gKT8oXFMrKSg/OjogaW4gZnVuY3Rpb24gKFxTKykpPyQvaSxyPS8gbGluZSAoXGQrKSwgY29sdW1uIChcZCspXHMqKD86aW4gKD86PGFub255bW91cyBmdW5jdGlvbjogKFtePl0rKT58KFteXCldKykpXCgoLiopXCkpPyBpbiAoLiopOlxzKiQvaSxvPW4uc3BsaXQoIlxuIiksYT1bXSxzPTA7czxvLmxlbmd0aDtzKz0yKXt2YXIgZD1udWxsO2lmKChlPWkuZXhlYyhvW3NdKSk/ZD17dXJsOmVbMl0sbGluZTorZVsxXSxjb2x1bW46bnVsbCxmdW5jOmVbM10sYXJnczpbXX06KGU9ci5leGVjKG9bc10pKSYmKGQ9e3VybDplWzZdLGxpbmU6K2VbMV0sY29sdW1uOitlWzJdLGZ1bmM6ZVszXXx8ZVs0XSxhcmdzOmVbNV0/ZVs1XS5zcGxpdCgiLCIpOltdfSksZCl7aWYoIWQuZnVuYyYmZC5saW5lJiYoZC5mdW5jPXcoZC51cmwsZC5saW5lKSksZC5saW5lKXRyeXtkLmNvbnRleHQ9eShkLnVybCxkLmxpbmUpfWNhdGNoKHQpe31kLmNvbnRleHR8fChkLmNvbnRleHQ9W29bcysxXV0pLGEucHVzaChkKX19cmV0dXJuIGEubGVuZ3RoP3ttb2RlOiJzdGFja3RyYWNlIixuYW1lOnQubmFtZSxtZXNzYWdlOnQubWVzc2FnZSxzdGFjazphfTpudWxsfX0odCkpcmV0dXJuIGV9Y2F0Y2godCl7fXRyeXtpZihlPWQodCkpcmV0dXJuIGV9Y2F0Y2godCl7fXRyeXtpZihlPWZ1bmN0aW9uKHQpe3ZhciBuPXQubWVzc2FnZS5zcGxpdCgiXG4iKTtpZihuLmxlbmd0aDw0KXJldHVybiBudWxsO3ZhciBlLGk9L15ccypMaW5lIChcZCspIG9mIGxpbmtlZCBzY3JpcHQgKCg/OmZpbGV8aHR0cHM/fGJsb2IpXFMrKSg/OjogaW4gZnVuY3Rpb24gKFxTKykpP1xzKiQvaSxyPS9eXHMqTGluZSAoXGQrKSBvZiBpbmxpbmUjKFxkKykgc2NyaXB0IGluICgoPzpmaWxlfGh0dHBzP3xibG9iKVxTKykoPzo6IGluIGZ1bmN0aW9uIChcUyspKT9ccyokL2ksbz0vXlxzKkxpbmUgKFxkKykgb2YgZnVuY3Rpb24gc2NyaXB0XHMqJC9pLGE9W10scz1nJiZnLmRvY3VtZW50JiZnLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKSxkPVtdO2ZvcihlIGluIHMpQyhzLGUpJiYhc1tlXS5zcmMmJmQucHVzaChzW2VdKTtmb3IodmFyIGM9MjtjPG4ubGVuZ3RoO2MrPTIpe3ZhciB1LGwsQSxtLHAsZj1udWxsOyhwPWkuZXhlYyhuW2NdKSk/Zj17dXJsOnBbMl0sZnVuYzpwWzNdLGFyZ3M6W10sbGluZTorcFsxXSxjb2x1bW46bnVsbH06KHA9ci5leGVjKG5bY10pKT8oZj17dXJsOnBbM10sZnVuYzpwWzRdLGFyZ3M6W10sbGluZTorcFsxXSxjb2x1bW46bnVsbH0sdT0rcFsxXSwoQT1kW3BbMl0tMV0pJiYoIShsPWgoZi51cmwpKXx8MDw9KEE9KGw9bC5qb2luKCJcbiIpKS5pbmRleE9mKEEuaW5uZXJUZXh0KSkmJihmLmxpbmU9dStsLnN1YnN0cmluZygwLEEpLnNwbGl0KCJcbiIpLmxlbmd0aCkpKToocD1vLmV4ZWMobltjXSkpJiYoZj17dXJsOm09Zy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoLyMuKiQvLCIiKSxmdW5jOiIiLGFyZ3M6W10sbGluZToobT1rKG5ldyBSZWdFeHAoYihuW2MrMV0pKSxbbV0pKT9tLmxpbmU6cFsxXSxjb2x1bW46bnVsbH0pLGYmJihmLmZ1bmN8fChmLmZ1bmM9dyhmLnVybCxmLmxpbmUpKSxwPShtPXkoZi51cmwsZi5saW5lKSk/bVtNYXRoLmZsb29yKG0ubGVuZ3RoLzIpXTpudWxsLG0mJnAucmVwbGFjZSgvXlxzKi8sIiIpPT09bltjKzFdLnJlcGxhY2UoL15ccyovLCIiKT9mLmNvbnRleHQ9bTpmLmNvbnRleHQ9W25bYysxXV0sYS5wdXNoKGYpKX1yZXR1cm4gYS5sZW5ndGg/e21vZGU6Im11bHRpbGluZSIsbmFtZTp0Lm5hbWUsbWVzc2FnZTpuWzBdLHN0YWNrOmF9Om51bGx9KHQpKXJldHVybiBlfWNhdGNoKHQpe310cnl7aWYoZT12KHQsbisxKSlyZXR1cm4gZX1jYXRjaCh0KXt9cmV0dXJue25hbWU6dC5uYW1lLG1lc3NhZ2U6dC5tZXNzYWdlLG1vZGU6ImZhaWxlZCJ9fWZ1bmN0aW9uIEUodCxuLGUpe3ZhciBpPW51bGw7aWYoIW58fGwuY29sbGVjdFdpbmRvd0Vycm9ycyl7Zm9yKHZhciByIGluIGEpaWYoQyhhLHIpKXRyeXthW3JdKHQsbixlKX1jYXRjaCh0KXtpPXR9aWYoaSl0aHJvdyBpfX1mdW5jdGlvbiB4KHQsbixlLGkscil7dmFyIG8sYSxzLGQ7cmV0dXJuIEE/KGwuY29tcHV0ZVN0YWNrVHJhY2UuYXVnbWVudFN0YWNrVHJhY2VXaXRoSW5pdGlhbEVsZW1lbnQoQSxuLGUsdCksVCgpKTpyP0UobC5jb21wdXRlU3RhY2tUcmFjZShyKSwhMCxyKTooYT17dXJsOm4sbGluZTplLGNvbHVtbjppfSxzPXQsIltvYmplY3QgU3RyaW5nXSIhPT17fS50b1N0cmluZy5jYWxsKHQpfHwoZD10Lm1hdGNoKGMpKSYmKG89ZFsxXSxzPWRbMl0pLGEuZnVuYz1sLmNvbXB1dGVTdGFja1RyYWNlLmd1ZXNzRnVuY3Rpb25OYW1lKGEudXJsLGEubGluZSksYS5jb250ZXh0PWwuY29tcHV0ZVN0YWNrVHJhY2UuZ2F0aGVyQ29udGV4dChhLnVybCxhLmxpbmUpLEUoe25hbWU6byxtZXNzYWdlOnMsbW9kZToib25lcnJvciIsc3RhY2s6W2FdfSwhMCxudWxsKSksISF1JiZ1LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBUKCl7dmFyIHQ9QSxuPXM7cz1BPW51bGwsRSh0LCExLG4pfWZ1bmN0aW9uIHoodCl7aWYoQSl7aWYocz09PXQpcmV0dXJuO1QoKX12YXIgbj1sLmNvbXB1dGVTdGFja1RyYWNlKHQpO3Rocm93IEE9bixzPXQsc2V0VGltZW91dChmdW5jdGlvbigpe3M9PT10JiZUKCl9LG4uaW5jb21wbGV0ZT8yZTM6MCksdH1mdW5jdGlvbiBDKHQsbil7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pfWZ1bmN0aW9uIEkodCl7cmV0dXJuIHZvaWQgMD09PXR9KGc9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OnQpJiYobD17fSxlPWcuVHJhY2VLaXQsaT1bXS5zbGljZSxjPS9eKD86W1V1XW5jYXVnaHQgKD86ZXhjZXB0aW9uOiApPyk/KD86KCg/OkV2YWx8SW50ZXJuYWx8UmFuZ2V8UmVmZXJlbmNlfFN5bnRheHxUeXBlfFVSSXwpRXJyb3IpOiApPyguKikkLyxsLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gZy5UcmFjZUtpdD1lLGx9LGwud3JhcD1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWNhdGNoKHQpe3Rocm93IGwucmVwb3J0KHQpLHR9fX0sbC5yZXBvcnQ9KGE9W10sQT1zPW51bGwsei5zdWJzY3JpYmU9ZnVuY3Rpb24odCl7ITAhPT1vJiYodT1nLm9uZXJyb3IsZy5vbmVycm9yPXgsbz0hMCksYS5wdXNoKHQpfSx6LnVuc3Vic2NyaWJlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbj1hLmxlbmd0aC0xOzA8PW47LS1uKWFbbl09PT10JiZhLnNwbGljZShuLDEpOzA9PT1hLmxlbmd0aCYmKGcub25lcnJvcj11LG89ITEpfSx6KSxsLmNvbXB1dGVTdGFja1RyYWNlPShyPXt9LFMuYXVnbWVudFN0YWNrVHJhY2VXaXRoSW5pdGlhbEVsZW1lbnQ9ZixTLmNvbXB1dGVTdGFja1RyYWNlRnJvbVN0YWNrUHJvcD1kLFMuZ3Vlc3NGdW5jdGlvbk5hbWU9dyxTLmdhdGhlckNvbnRleHQ9eSxTLm9mQ2FsbGVyPWZ1bmN0aW9uKG4pe249MSsobnVsbD09bj8wOituKTt0cnl7dGhyb3cgbmV3IEVycm9yfWNhdGNoKHQpe3JldHVybiBTKHQsbisxKX19LFMuZ2V0U291cmNlPWgsUyksbC5leHRlbmRUb0FzeW5jaHJvbm91c0NhbGxiYWNrcz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dmFyIGU9Z1t0XTtnW3RdPWZ1bmN0aW9uKCl7dmFyIHQ9aS5jYWxsKGFyZ3VtZW50cyksbj10WzBdO3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBuJiYodFswXT1sLndyYXAobikpLGUuYXBwbHk/ZS5hcHBseSh0aGlzLHQpOmUodFswXSx0WzFdKX19dCgic2V0VGltZW91dCIpLHQoInNldEludGVydmFsIil9LGwucmVtb3RlRmV0Y2hpbmd8fChsLnJlbW90ZUZldGNoaW5nPSEwKSxsLmNvbGxlY3RXaW5kb3dFcnJvcnN8fChsLmNvbGxlY3RXaW5kb3dFcnJvcnM9ITApLCghbC5saW5lc09mQ29udGV4dHx8bC5saW5lc09mQ29udGV4dDwxKSYmKGwubGluZXNPZkNvbnRleHQ9MTEpLG49W10sdm9pZCAwPT09KHQ9ImZ1bmN0aW9uIj09dHlwZW9mKHQ9bCk/dC5hcHBseShCLG4pOnQpfHwoXy5leHBvcnRzPXQpKX0pLmNhbGwodGhpcyx0KDM3KSl9LGZ1bmN0aW9uKHQsbixlKXt2YXIgYT1lKDApLHM9ZSg3KSxkPWUoMyksYz1lKDI2KSxpPWUoMjcpLGU9ZSgxNSkscj1lLmdldCx1PWUuZW5mb3JjZSxsPVN0cmluZyhTdHJpbmcpLnNwbGl0KCJTdHJpbmciKTsodC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlLGkpe3ZhciByPSEhaSYmISFpLnVuc2FmZSxvPSEhaSYmISFpLmVudW1lcmFibGUsaT0hIWkmJiEhaS5ub1RhcmdldEdldDsiZnVuY3Rpb24iPT10eXBlb2YgZSYmKCJzdHJpbmciIT10eXBlb2Ygbnx8ZChlLCJuYW1lIil8fHMoZSwibmFtZSIsbiksdShlKS5zb3VyY2U9bC5qb2luKCJzdHJpbmciPT10eXBlb2Ygbj9uOiIiKSksdCE9PWE/KHI/IWkmJnRbbl0mJihvPSEwKTpkZWxldGUgdFtuXSxvP3Rbbl09ZTpzKHQsbixlKSk6bz90W25dPWU6YyhuLGUpfSkoRnVuY3Rpb24ucHJvdG90eXBlLCJ0b1N0cmluZyIsZnVuY3Rpb24oKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdGhpcyYmcih0aGlzKS5zb3VyY2V8fGkodGhpcyl9KX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgVHlwZUVycm9yKFN0cmluZyh0KSsiIGlzIG5vdCBhIGZ1bmN0aW9uIik7cmV0dXJuIHR9fSxmdW5jdGlvbih0LG4pe3ZhciBlPXt9LnRvU3RyaW5nO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZS5jYWxsKHQpLnNsaWNlKDgsLTEpfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpLHIsbyxhLHMsZCxjLHUsbD1lKDcxKSxBPWUoMCksbT1lKDgpLHA9ZSg3KSxmPWUoMyksZz1lKDI4KSxlPWUoMjkpLEE9QS5XZWFrTWFwO2M9bD8oaT1uZXcgQSxyPWkuZ2V0LG89aS5oYXMsYT1pLnNldCxzPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGEuY2FsbChpLHQsbiksbn0sZD1mdW5jdGlvbih0KXtyZXR1cm4gci5jYWxsKGksdCl8fHt9fSxmdW5jdGlvbih0KXtyZXR1cm4gby5jYWxsKGksdCl9KTooZVt1PWcoInN0YXRlIildPSEwLHM9ZnVuY3Rpb24odCxuKXtyZXR1cm4gcCh0LHUsbiksbn0sZD1mdW5jdGlvbih0KXtyZXR1cm4gZih0LHUpP3RbdV06e319LGZ1bmN0aW9uKHQpe3JldHVybiBmKHQsdSl9KSx0LmV4cG9ydHM9e3NldDpzLGdldDpkLGhhczpjLGVuZm9yY2U6ZnVuY3Rpb24odCl7cmV0dXJuIGModCk/ZCh0KTpzKHQse30pfSxnZXR0ZXJGb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBuO2lmKCFtKHQpfHwobj1kKHQpKS50eXBlIT09ZSl0aHJvdyBUeXBlRXJyb3IoIkluY29tcGF0aWJsZSByZWNlaXZlciwgIitlKyIgcmVxdWlyZWQiKTtyZXR1cm4gbn19fX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9ITF9LGZ1bmN0aW9uKHQsbil7dC5leHBvcnRzPXt9fSxmdW5jdGlvbih0LG4sZSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkodCl7dmFyIGUsaTt0aGlzLnByb21pc2U9bmV3IHQoZnVuY3Rpb24odCxuKXtpZih2b2lkIDAhPT1lfHx2b2lkIDAhPT1pKXRocm93IFR5cGVFcnJvcigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTtlPXQsaT1ufSksdGhpcy5yZXNvbHZlPXIoZSksdGhpcy5yZWplY3Q9cihpKX12YXIgcj1lKDEzKTt0LmV4cG9ydHMuZj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkodCl9fSxmdW5jdGlvbih0LG4pe3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3JldHVybntlbnVtZXJhYmxlOiEoMSZ0KSxjb25maWd1cmFibGU6ISgyJnQpLHdyaXRhYmxlOiEoNCZ0KSx2YWx1ZTpufX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDM5KSxyPWUoMjQpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaShyKHQpKX19LGZ1bmN0aW9uKHQsbixlKXtmdW5jdGlvbiBBKHQsbil7dGhpcy5zdG9wcGVkPXQsdGhpcy5yZXN1bHQ9bn12YXIgbT1lKDQpLHA9ZSg5NiksZj1lKDQ2KSxnPWUoNTgpLGg9ZSg5Nyksdz1lKDk4KTsodC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlLGkscil7dmFyIG8sYSxzLGQsYyx1LGw9ZyhuLGUsaT8yOjEpO2lmKHIpbz10O2Vsc2V7aWYoImZ1bmN0aW9uIiE9dHlwZW9mKHI9aCh0KSkpdGhyb3cgVHlwZUVycm9yKCJUYXJnZXQgaXMgbm90IGl0ZXJhYmxlIik7aWYocChyKSl7Zm9yKGE9MCxzPWYodC5sZW5ndGgpO2E8czthKyspaWYoKGQ9aT9sKG0odT10W2FdKVswXSx1WzFdKTpsKHRbYV0pKSYmZCBpbnN0YW5jZW9mIEEpcmV0dXJuIGQ7cmV0dXJuIG5ldyBBKCExKX1vPXIuY2FsbCh0KX1mb3IoYz1vLm5leHQ7ISh1PWMuY2FsbChvKSkuZG9uZTspaWYoIm9iamVjdCI9PXR5cGVvZihkPXcobyxsLHUudmFsdWUsaSkpJiZkJiZkIGluc3RhbmNlb2YgQSlyZXR1cm4gZDtyZXR1cm4gbmV3IEEoITEpfSkuc3RvcD1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IEEoITAsdCl9fSxmdW5jdGlvbih0LG4pe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt0cnl7cmV0dXJue2Vycm9yOiExLHZhbHVlOnQoKX19Y2F0Y2godCl7cmV0dXJue2Vycm9yOiEwLHZhbHVlOnR9fX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDYpLHI9ZSgzOCksbz1lKDE5KSxhPWUoMjApLHM9ZSg0MCksZD1lKDMpLGM9ZSg0MSksdT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO24uZj1pP3U6ZnVuY3Rpb24odCxuKXtpZih0PWEodCksbj1zKG4sITApLGMpdHJ5e3JldHVybiB1KHQsbil9Y2F0Y2godCl7fWlmKGQodCxuKSlyZXR1cm4gbyghci5mLmNhbGwodCxuKSx0W25dKX19LGZ1bmN0aW9uKHQsbil7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXQpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAiK3QpO3JldHVybiB0fX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMCksZT1lKDgpLHI9aS5kb2N1bWVudCxvPWUocikmJmUoci5jcmVhdGVFbGVtZW50KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG8/ci5jcmVhdGVFbGVtZW50KHQpOnt9fX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMCkscj1lKDcpO3QuZXhwb3J0cz1mdW5jdGlvbihuLGUpe3RyeXtyKGksbixlKX1jYXRjaCh0KXtpW25dPWV9cmV0dXJuIGV9fSxmdW5jdGlvbih0LG4sZSl7dmFyIGU9ZSg0MiksaT1GdW5jdGlvbi50b1N0cmluZzsiZnVuY3Rpb24iIT10eXBlb2YgZS5pbnNwZWN0U291cmNlJiYoZS5pbnNwZWN0U291cmNlPWZ1bmN0aW9uKHQpe3JldHVybiBpLmNhbGwodCl9KSx0LmV4cG9ydHM9ZS5pbnNwZWN0U291cmNlfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg0Mykscj1lKDQ0KSxvPWkoImtleXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG9bdF18fChvW3RdPXIodCkpfX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9e319LGZ1bmN0aW9uKHQsbixlKXtlPWUoMCk7dC5leHBvcnRzPWV9LGZ1bmN0aW9uKHQsbil7dmFyIGU9TWF0aC5jZWlsLGk9TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGlzTmFOKHQ9K3QpPzA6KDA8dD9pOmUpKHQpfX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9WyJjb25zdHJ1Y3RvciIsImhhc093blByb3BlcnR5IiwiaXNQcm90b3R5cGVPZiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9Mb2NhbGVTdHJpbmciLCJ0b1N0cmluZyIsInZhbHVlT2YiXX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPXt9O2lbZSgxKSgidG9TdHJpbmdUYWciKV09InoiLHQuZXhwb3J0cz0iW29iamVjdCB6XSI9PT1TdHJpbmcoaSl9LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDMpLHI9ZSg1MCksbz1lKDI4KSxlPWUoODUpLGE9bygiSUVfUFJPVE8iKSxzPU9iamVjdC5wcm90b3R5cGU7dC5leHBvcnRzPWU/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0PXIodCksaSh0LGEpP3RbYV06ImZ1bmN0aW9uIj09dHlwZW9mIHQuY29uc3RydWN0b3ImJnQgaW5zdGFuY2VvZiB0LmNvbnN0cnVjdG9yP3QuY29uc3RydWN0b3IucHJvdG90eXBlOnQgaW5zdGFuY2VvZiBPYmplY3Q/czpudWxsfX0sZnVuY3Rpb24odCxuLGUpe2Z1bmN0aW9uIGkoKXt9ZnVuY3Rpb24gcih0KXtyZXR1cm4iPHNjcmlwdD4iK3QrIjxcL3NjcmlwdD4ifXZhciBvLGE9ZSg0KSxzPWUoODYpLGQ9ZSgzMiksYz1lKDI5KSx1PWUoNTUpLGw9ZSgyNSksQT1lKDI4KSgiSUVfUFJPVE8iKSxtPWZ1bmN0aW9uKCl7dHJ5e289ZG9jdW1lbnQuZG9tYWluJiZuZXcgQWN0aXZlWE9iamVjdCgiaHRtbGZpbGUiKX1jYXRjaCh0KXt9dmFyIHQsbjttPW8/ZnVuY3Rpb24odCl7dC53cml0ZShyKCIiKSksdC5jbG9zZSgpO3ZhciBuPXQucGFyZW50V2luZG93Lk9iamVjdDtyZXR1cm4gdD1udWxsLG59KG8pOigobj1sKCJpZnJhbWUiKSkuc3R5bGUuZGlzcGxheT0ibm9uZSIsdS5hcHBlbmRDaGlsZChuKSxuLnNyYz1TdHJpbmcoImphdmFzY3JpcHQ6IiksKHQ9bi5jb250ZW50V2luZG93LmRvY3VtZW50KS5vcGVuKCksdC53cml0ZShyKCJkb2N1bWVudC5GPU9iamVjdCIpKSx0LmNsb3NlKCksdC5GKTtmb3IodmFyIGU9ZC5sZW5ndGg7ZS0tOylkZWxldGUgbS5wcm90b3R5cGVbZFtlXV07cmV0dXJuIG0oKX07Y1tBXT0hMCx0LmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24odCxuKXt2YXIgZTtyZXR1cm4gbnVsbCE9PXQ/KGkucHJvdG90eXBlPWEodCksZT1uZXcgaSxpLnByb3RvdHlwZT1udWxsLGVbQV09dCk6ZT1tKCksdm9pZCAwPT09bj9lOnMoZSxuKX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDkpLmYscj1lKDMpLG89ZSgxKSgidG9TdHJpbmdUYWciKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuLGUpe3QmJiFyKHQ9ZT90OnQucHJvdG90eXBlLG8pJiZpKHQsbyx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOm59KX19LGZ1bmN0aW9uKHQsbil7dmFyIGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKTt0cnl7ZT1lfHxuZXcgRnVuY3Rpb24oInJldHVybiB0aGlzIikoKX1jYXRjaCh0KXsib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmKGU9d2luZG93KX10LmV4cG9ydHM9ZX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Isbz1yJiYhaS5jYWxsKHsxOjJ9LDEpO24uZj1vP2Z1bmN0aW9uKHQpe3Q9cih0aGlzLHQpO3JldHVybiEhdCYmdC5lbnVtZXJhYmxlfTppfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgyKSxyPWUoMTQpLG89IiIuc3BsaXQ7dC5leHBvcnRzPWkoZnVuY3Rpb24oKXtyZXR1cm4hT2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCl9KT9mdW5jdGlvbih0KXtyZXR1cm4iU3RyaW5nIj09cih0KT9vLmNhbGwodCwiIik6T2JqZWN0KHQpfTpPYmplY3R9LGZ1bmN0aW9uKHQsbixlKXt2YXIgcj1lKDgpO3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe2lmKCFyKHQpKXJldHVybiB0O3ZhciBlLGk7aWYobiYmImZ1bmN0aW9uIj09dHlwZW9mKGU9dC50b1N0cmluZykmJiFyKGk9ZS5jYWxsKHQpKSlyZXR1cm4gaTtpZigiZnVuY3Rpb24iPT10eXBlb2YoZT10LnZhbHVlT2YpJiYhcihpPWUuY2FsbCh0KSkpcmV0dXJuIGk7aWYoIW4mJiJmdW5jdGlvbiI9PXR5cGVvZihlPXQudG9TdHJpbmcpJiYhcihpPWUuY2FsbCh0KSkpcmV0dXJuIGk7dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDYpLHI9ZSgyKSxvPWUoMjUpO3QuZXhwb3J0cz0haSYmIXIoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KG8oImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgwKSxlPWUoMjYpLGU9aVsiX19jb3JlLWpzX3NoYXJlZF9fIl18fGUoIl9fY29yZS1qc19zaGFyZWRfXyIse30pO3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgxNikscj1lKDQyKTsodC5leHBvcnRzPWZ1bmN0aW9uKHQsbil7cmV0dXJuIHJbdF18fChyW3RdPXZvaWQgMCE9PW4/bjp7fSl9KSgidmVyc2lvbnMiLFtdKS5wdXNoKHt2ZXJzaW9uOiIzLjYuNSIsbW9kZTppPyJwdXJlIjoiZ2xvYmFsIixjb3B5cmlnaHQ6IsKpIDIwMjAgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSkifSl9LGZ1bmN0aW9uKHQsbil7dmFyIGU9MCxpPU1hdGgucmFuZG9tKCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiJTeW1ib2woIitTdHJpbmcodm9pZCAwPT09dD8iIjp0KSsiKV8iKygrK2UraSkudG9TdHJpbmcoMzYpfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBhPWUoMykscz1lKDIwKSxkPWUoNzUpLmluZGV4T2YsYz1lKDI5KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXt2YXIgZSxpPXModCkscj0wLG89W107Zm9yKGUgaW4gaSkhYShjLGUpJiZhKGksZSkmJm8ucHVzaChlKTtmb3IoO24ubGVuZ3RoPnI7KWEoaSxlPW5bcisrXSkmJih+ZChvLGUpfHxvLnB1c2goZSkpO3JldHVybiBvfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMzEpLHI9TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiAwPHQ/cihpKHQpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSxmdW5jdGlvbih0LG4pe24uZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgyKSxyPS8jfFwucHJvdG90eXBlXC4vLGU9ZnVuY3Rpb24odCxuKXt0PWFbbyh0KV07cmV0dXJuIHQ9PWR8fHQhPXMmJigiZnVuY3Rpb24iPT10eXBlb2Ygbj9pKG4pOiEhbil9LG89ZS5ub3JtYWxpemU9ZnVuY3Rpb24odCl7cmV0dXJuIFN0cmluZyh0KS5yZXBsYWNlKHIsIi4iKS50b0xvd2VyQ2FzZSgpfSxhPWUuZGF0YT17fSxzPWUuTkFUSVZFPSJOIixkPWUuUE9MWUZJTEw9IlAiO3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg0NSkscj1lKDMyKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKHQpe3JldHVybiBpKHQscil9fSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgyNCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QoaSh0KSl9fSxmdW5jdGlvbih0LG4sZSl7ZT1lKDIpO3QuZXhwb3J0cz0hIU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMmJiFlKGZ1bmN0aW9uKCl7cmV0dXJuIVN0cmluZyhTeW1ib2woKSl9KX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMzMpLHI9ZSgxNCksbz1lKDEpKCJ0b1N0cmluZ1RhZyIpLGE9IkFyZ3VtZW50cyI9PXIoZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKTt0LmV4cG9ydHM9aT9yOmZ1bmN0aW9uKHQpe3ZhciBuO3JldHVybiB2b2lkIDA9PT10PyJVbmRlZmluZWQiOm51bGw9PT10PyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHQ9ZnVuY3Rpb24odCxuKXt0cnl7cmV0dXJuIHRbbl19Y2F0Y2godCl7fX0obj1PYmplY3QodCksbykpP3Q6YT9yKG4pOiJPYmplY3QiPT0odD1yKG4pKSYmImZ1bmN0aW9uIj09dHlwZW9mIG4uY2FsbGVlPyJBcmd1bWVudHMiOnR9fSxmdW5jdGlvbih0LG4sZSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGYoKXtyZXR1cm4gdGhpc312YXIgZz1lKDUpLGg9ZSg4NCksdz1lKDM0KSx5PWUoNTYpLGI9ZSgzNiksaz1lKDcpLHY9ZSgxMiksaT1lKDEpLFM9ZSgxNiksRT1lKDE3KSxlPWUoNTQpLHg9ZS5JdGVyYXRvclByb3RvdHlwZSxUPWUuQlVHR1lfU0FGQVJJX0lURVJBVE9SUyx6PWkoIml0ZXJhdG9yIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlLGkscixvLGEpe2goZSxuLGkpO2Z1bmN0aW9uIHModCl7aWYodD09PXImJnApcmV0dXJuIHA7aWYoIVQmJnQgaW4gQSlyZXR1cm4gQVt0XTtzd2l0Y2godCl7Y2FzZSJrZXlzIjpjYXNlInZhbHVlcyI6Y2FzZSJlbnRyaWVzIjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGUodGhpcyx0KX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBlKHRoaXMpfX12YXIgZCxjLHU9bisiIEl0ZXJhdG9yIixsPSExLEE9dC5wcm90b3R5cGUsbT1BW3pdfHxBWyJAQGl0ZXJhdG9yIl18fHImJkFbcl0scD0hVCYmbXx8cyhyKSxpPSJBcnJheSI9PW4mJkEuZW50cmllc3x8bTtpZihpJiYodD13KGkuY2FsbChuZXcgdCkpLHghPT1PYmplY3QucHJvdG90eXBlJiZ0Lm5leHQmJihTfHx3KHQpPT09eHx8KHk/eSh0LHgpOiJmdW5jdGlvbiIhPXR5cGVvZiB0W3pdJiZrKHQseixmKSksYih0LHUsITAsITApLFMmJihFW3VdPWYpKSksInZhbHVlcyI9PXImJm0mJiJ2YWx1ZXMiIT09bS5uYW1lJiYobD0hMCxwPWZ1bmN0aW9uKCl7cmV0dXJuIG0uY2FsbCh0aGlzKX0pLFMmJiFhfHxBW3pdPT09cHx8ayhBLHoscCksRVtuXT1wLHIpaWYoZD17dmFsdWVzOnMoInZhbHVlcyIpLGtleXM6bz9wOnMoImtleXMiKSxlbnRyaWVzOnMoImVudHJpZXMiKX0sYSlmb3IoYyBpbiBkKSFUJiYhbCYmYyBpbiBBfHx2KEEsYyxkW2NdKTtlbHNlIGcoe3RhcmdldDpuLHByb3RvOiEwLGZvcmNlZDpUfHxsfSxkKTtyZXR1cm4gZH19LGZ1bmN0aW9uKHQsbixlKXsidXNlIHN0cmljdCI7dmFyIGkscj1lKDM0KSxvPWUoNyksYT1lKDMpLHM9ZSgxKSxkPWUoMTYpLGM9cygiaXRlcmF0b3IiKSxlPSExO1tdLmtleXMmJigibmV4dCJpbihzPVtdLmtleXMoKSk/KHM9cihyKHMpKSkhPT1PYmplY3QucHJvdG90eXBlJiYoaT1zKTplPSEwKSxudWxsPT1pJiYoaT17fSksZHx8YShpLGMpfHxvKGksYyxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksdC5leHBvcnRzPXtJdGVyYXRvclByb3RvdHlwZTppLEJVR0dZX1NBRkFSSV9JVEVSQVRPUlM6ZX19LGZ1bmN0aW9uKHQsbixlKXtlPWUoMTApO3QuZXhwb3J0cz1lKCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIpfSxmdW5jdGlvbih0LG4sZSl7dmFyIHI9ZSg0KSxvPWUoODcpO3QuZXhwb3J0cz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24oKXt2YXIgZSxpPSExLHQ9e307dHJ5eyhlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0KS5jYWxsKHQsW10pLGk9dCBpbnN0YW5jZW9mIEFycmF5fWNhdGNoKGUpe31yZXR1cm4gZnVuY3Rpb24odCxuKXtyZXR1cm4gcih0KSxvKG4pLGk/ZS5jYWxsKHQsbik6dC5fX3Byb3RvX189bix0fX0oKTp2b2lkIDApfSxmdW5jdGlvbih0LG4sZSl7ZT1lKDApO3QuZXhwb3J0cz1lLlByb21pc2V9LGZ1bmN0aW9uKHQsbixlKXt2YXIgbz1lKDEzKTt0LmV4cG9ydHM9ZnVuY3Rpb24oaSxyLHQpe2lmKG8oaSksdm9pZCAwPT09cilyZXR1cm4gaTtzd2l0Y2godCl7Y2FzZSAwOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBpLmNhbGwocil9O2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGkuY2FsbChyLHQpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHQsbil7cmV0dXJuIGkuY2FsbChyLHQsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24odCxuLGUpe3JldHVybiBpLmNhbGwocix0LG4sZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBpLmFwcGx5KHIsYXJndW1lbnRzKX19fSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg0KSxyPWUoMTMpLG89ZSgxKSgic3BlY2llcyIpO3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3ZhciBlLHQ9aSh0KS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09dHx8bnVsbD09KGU9aSh0KVtvXSk/bjpyKGUpfX0sZnVuY3Rpb24odCxuLGUpe2Z1bmN0aW9uIGkodCl7dmFyIG47ay5oYXNPd25Qcm9wZXJ0eSh0KSYmKG49a1t0XSxkZWxldGUga1t0XSxuKCkpfWZ1bmN0aW9uIHIodCl7cmV0dXJuIGZ1bmN0aW9uKCl7aSh0KX19ZnVuY3Rpb24gbyh0KXtpKHQuZGF0YSl9dmFyIGEscz1lKDApLGQ9ZSgyKSxjPWUoMTQpLHU9ZSg1OCksbD1lKDU1KSxBPWUoMjUpLG09ZSg2MSkscD1zLmxvY2F0aW9uLGY9cy5zZXRJbW1lZGlhdGUsZz1zLmNsZWFySW1tZWRpYXRlLGg9cy5wcm9jZXNzLHc9cy5NZXNzYWdlQ2hhbm5lbCx5PXMuRGlzcGF0Y2gsYj0wLGs9e30sZT1mdW5jdGlvbih0KXtzLnBvc3RNZXNzYWdlKHQrIiIscC5wcm90b2NvbCsiLy8iK3AuaG9zdCl9O2YmJmd8fChmPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbj1bXSxlPTE7ZTxhcmd1bWVudHMubGVuZ3RoOyluLnB1c2goYXJndW1lbnRzW2UrK10pO3JldHVybiBrWysrYl09ZnVuY3Rpb24oKXsoImZ1bmN0aW9uIj09dHlwZW9mIHQ/dDpGdW5jdGlvbih0KSkuYXBwbHkodm9pZCAwLG4pfSxhKGIpLGJ9LGc9ZnVuY3Rpb24odCl7ZGVsZXRlIGtbdF19LCJwcm9jZXNzIj09YyhoKT9hPWZ1bmN0aW9uKHQpe2gubmV4dFRpY2socih0KSl9OnkmJnkubm93P2E9ZnVuY3Rpb24odCl7eS5ub3cocih0KSl9OncmJiFtPyh3PShtPW5ldyB3KS5wb3J0MixtLnBvcnQxLm9ubWVzc2FnZT1vLGE9dSh3LnBvc3RNZXNzYWdlLHcsMSkpOiFzLmFkZEV2ZW50TGlzdGVuZXJ8fCJmdW5jdGlvbiIhPXR5cGVvZiBwb3N0TWVzc2FnZXx8cy5pbXBvcnRTY3JpcHRzfHxkKGUpfHwiZmlsZToiPT09cC5wcm90b2NvbD9hPSJvbnJlYWR5c3RhdGVjaGFuZ2UiaW4gQSgic2NyaXB0Iik/ZnVuY3Rpb24odCl7bC5hcHBlbmRDaGlsZChBKCJzY3JpcHQiKSkub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7bC5yZW1vdmVDaGlsZCh0aGlzKSxpKHQpfX06ZnVuY3Rpb24odCl7c2V0VGltZW91dChyKHQpLDApfTooYT1lLHMuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbywhMSkpKSx0LmV4cG9ydHM9e3NldDpmLGNsZWFyOmd9fSxmdW5jdGlvbih0LG4sZSl7ZT1lKDYyKTt0LmV4cG9ydHM9LyhpcGhvbmV8aXBvZHxpcGFkKS4qYXBwbGV3ZWJraXQvaS50ZXN0KGUpfSxmdW5jdGlvbih0LG4sZSl7ZT1lKDEwKTt0LmV4cG9ydHM9ZSgibmF2aWdhdG9yIiwidXNlckFnZW50Iil8fCIifSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg0KSxyPWUoOCksbz1lKDE4KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXtpZihpKHQpLHIobikmJm4uY29uc3RydWN0b3I9PT10KXJldHVybiBuO3Q9by5mKHQpO3JldHVybigwLHQucmVzb2x2ZSkobiksdC5wcm9taXNlfX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKDUpLGM9ZSgxMykscj1lKDE4KSxvPWUoMjIpLHU9ZSgyMSk7aSh7dGFyZ2V0OiJQcm9taXNlIixzdGF0OiEwfSx7YWxsU2V0dGxlZDpmdW5jdGlvbih0KXt2YXIgcz10aGlzLG49ci5mKHMpLGQ9bi5yZXNvbHZlLGU9bi5yZWplY3QsaT1vKGZ1bmN0aW9uKCl7dmFyIGk9YyhzLnJlc29sdmUpLHI9W10sbz0wLGE9MTt1KHQsZnVuY3Rpb24odCl7dmFyIG49bysrLGU9ITE7ci5wdXNoKHZvaWQgMCksYSsrLGkuY2FsbChzLHQpLnRoZW4oZnVuY3Rpb24odCl7ZXx8KGU9ITAscltuXT17c3RhdHVzOiJmdWxmaWxsZWQiLHZhbHVlOnR9LC0tYXx8ZChyKSl9LGZ1bmN0aW9uKHQpe2V8fChlPSEwLHJbbl09e3N0YXR1czoicmVqZWN0ZWQiLHJlYXNvbjp0fSwtLWF8fGQocikpfSl9KSwtLWF8fGQocil9KTtyZXR1cm4gaS5lcnJvciYmZShpLnZhbHVlKSxuLnByb21pc2V9fSl9LGZ1bmN0aW9uKHQsbixlKXtlPWUoNjkpO3QuZXhwb3J0cz1lfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg3OCk7ZSgxMDQpLGUoMTA1KSxlKDEwNiksZSgxMDcpLHQuZXhwb3J0cz1pfSxmdW5jdGlvbih0KXt0LmV4cG9ydHM9SlNPTi5wYXJzZSgneyJhIjoiIn0nKX0sLGZ1bmN0aW9uKHQsbixlKXtlKDcwKTtlPWUoMzApO3QuZXhwb3J0cz1lLk9iamVjdC5hc3NpZ259LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDUpLGU9ZSg3Nyk7aSh7dGFyZ2V0OiJPYmplY3QiLHN0YXQ6ITAsZm9yY2VkOk9iamVjdC5hc3NpZ24hPT1lfSx7YXNzaWduOmV9KX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMCksZT1lKDI3KSxpPWkuV2Vha01hcDt0LmV4cG9ydHM9ImZ1bmN0aW9uIj09dHlwZW9mIGkmJi9uYXRpdmUgY29kZS8udGVzdChlKGkpKX0sZnVuY3Rpb24odCxuLGUpe3ZhciBzPWUoMyksZD1lKDczKSxjPWUoMjMpLHU9ZSg5KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9ZChuKSxpPXUuZixyPWMuZixvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBhPWVbb107cyh0LGEpfHxpKHQsYSxyKG4sYSkpfX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDEwKSxyPWUoNzQpLG89ZSg0NyksYT1lKDQpO3QuZXhwb3J0cz1pKCJSZWZsZWN0Iiwib3duS2V5cyIpfHxmdW5jdGlvbih0KXt2YXIgbj1yLmYoYSh0KSksZT1vLmY7cmV0dXJuIGU/bi5jb25jYXQoZSh0KSk6bn19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDQ1KSxyPWUoMzIpLmNvbmNhdCgibGVuZ3RoIiwicHJvdG90eXBlIik7bi5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbih0KXtyZXR1cm4gaSh0LHIpfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBkPWUoMjApLGM9ZSg0NiksdT1lKDc2KSxlPWZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbih0LG4sZSl7dmFyIGkscj1kKHQpLG89YyhyLmxlbmd0aCksYT11KGUsbyk7aWYocyYmbiE9bil7Zm9yKDthPG87KWlmKChpPXJbYSsrXSkhPWkpcmV0dXJuITB9ZWxzZSBmb3IoO2E8bzthKyspaWYoKHN8fGEgaW4gcikmJnJbYV09PT1uKXJldHVybiBzfHxhfHwwO3JldHVybiFzJiYtMX19O3QuZXhwb3J0cz17aW5jbHVkZXM6ZSghMCksaW5kZXhPZjplKCExKX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDMxKSxyPU1hdGgubWF4LG89TWF0aC5taW47dC5leHBvcnRzPWZ1bmN0aW9uKHQsbil7dD1pKHQpO3JldHVybiB0PDA/cih0K24sMCk6byh0LG4pfX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgQT1lKDYpLGk9ZSgyKSxtPWUoNDkpLHA9ZSg0NyksZj1lKDM4KSxnPWUoNTApLGg9ZSgzOSkscj1PYmplY3QuYXNzaWduLG89T2JqZWN0LmRlZmluZVByb3BlcnR5O3QuZXhwb3J0cz0hcnx8aShmdW5jdGlvbigpe2lmKEEmJjEhPT1yKHtiOjF9LHIobyh7fSwiYSIse2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7byh0aGlzLCJiIix7dmFsdWU6MyxlbnVtZXJhYmxlOiExfSl9fSkse2I6Mn0pKS5iKXJldHVybiEwO3ZhciB0PXt9LG49e30sZT1TeW1ib2woKTtyZXR1cm4gdFtlXT03LCJhYmNkZWZnaGlqa2xtbm9wcXJzdCIuc3BsaXQoIiIpLmZvckVhY2goZnVuY3Rpb24odCl7blt0XT10fSksNyE9cih7fSx0KVtlXXx8ImFiY2RlZmdoaWprbG1ub3BxcnN0IiE9bShyKHt9LG4pKS5qb2luKCIiKX0pP2Z1bmN0aW9uKHQsbil7Zm9yKHZhciBlPWcodCksaT1hcmd1bWVudHMubGVuZ3RoLHI9MSxvPXAuZixhPWYuZjtyPGk7KWZvcih2YXIgcyxkPWgoYXJndW1lbnRzW3IrK10pLGM9bz9tKGQpLmNvbmNhdChvKGQpKTptKGQpLHU9Yy5sZW5ndGgsbD0wO2w8dTspcz1jW2wrK10sQSYmIWEuY2FsbChkLHMpfHwoZVtzXT1kW3NdKTtyZXR1cm4gZX06cn0sZnVuY3Rpb24odCxuLGUpe2UoNzkpLGUoODIpLGUoODgpLGUoOTIpLGUoNjQpLGUoMTAzKTtlPWUoMzApO3QuZXhwb3J0cz1lLlByb21pc2V9LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDMzKSxyPWUoMTIpLGU9ZSg4MSk7aXx8cihPYmplY3QucHJvdG90eXBlLCJ0b1N0cmluZyIsZSx7dW5zYWZlOiEwfSl9LGZ1bmN0aW9uKHQsbixlKXtlPWUoNTEpO3QuZXhwb3J0cz1lJiYhU3ltYm9sLnNoYW0mJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yfSxmdW5jdGlvbih0LG4sZSl7InVzZSBzdHJpY3QiO3ZhciBpPWUoMzMpLHI9ZSg1Mik7dC5leHBvcnRzPWk/e30udG9TdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4iW29iamVjdCAiK3IodGhpcykrIl0ifX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKDgzKS5jaGFyQXQscj1lKDE1KSxlPWUoNTMpLG89ci5zZXQsYT1yLmdldHRlckZvcigiU3RyaW5nIEl0ZXJhdG9yIik7ZShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24odCl7byh0aGlzLHt0eXBlOiJTdHJpbmcgSXRlcmF0b3IiLHN0cmluZzpTdHJpbmcodCksaW5kZXg6MH0pfSxmdW5jdGlvbigpe3ZhciB0PWEodGhpcyksbj10LnN0cmluZyxlPXQuaW5kZXg7cmV0dXJuIGU+PW4ubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9aShuLGUpLHQuaW5kZXgrPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSxmdW5jdGlvbih0LG4sZSl7dmFyIGE9ZSgzMSkscz1lKDI0KSxlPWZ1bmN0aW9uKG8pe3JldHVybiBmdW5jdGlvbih0LG4pe3ZhciBlLGk9U3RyaW5nKHModCkpLHI9YShuKSx0PWkubGVuZ3RoO3JldHVybiByPDB8fHQ8PXI/bz8iIjp2b2lkIDA6KG49aS5jaGFyQ29kZUF0KHIpKTw1NTI5Nnx8NTYzMTk8bnx8cisxPT09dHx8KGU9aS5jaGFyQ29kZUF0KHIrMSkpPDU2MzIwfHw1NzM0MzxlP28/aS5jaGFyQXQocik6bjpvP2kuc2xpY2UocixyKzIpOmUtNTYzMjArKG4tNTUyOTY8PDEwKSs2NTUzNn19O3QuZXhwb3J0cz17Y29kZUF0OmUoITEpLGNoYXJBdDplKCEwKX19LGZ1bmN0aW9uKHQsbixlKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSgpe3JldHVybiB0aGlzfXZhciByPWUoNTQpLkl0ZXJhdG9yUHJvdG90eXBlLG89ZSgzNSksYT1lKDE5KSxzPWUoMzYpLGQ9ZSgxNyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlKXtuKz0iIEl0ZXJhdG9yIjtyZXR1cm4gdC5wcm90b3R5cGU9byhyLHtuZXh0OmEoMSxlKX0pLHModCxuLCExLCEwKSxkW25dPWksdH19LGZ1bmN0aW9uKHQsbixlKXtlPWUoMik7dC5leHBvcnRzPSFlKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gdC5wcm90b3R5cGUuY29uc3RydWN0b3I9bnVsbCxPYmplY3QuZ2V0UHJvdG90eXBlT2YobmV3IHQpIT09dC5wcm90b3R5cGV9KX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoNiksYT1lKDkpLHM9ZSg0KSxkPWUoNDkpO3QuZXhwb3J0cz1pP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKHQsbil7cyh0KTtmb3IodmFyIGUsaT1kKG4pLHI9aS5sZW5ndGgsbz0wO288cjspYS5mKHQsZT1pW28rK10sbltlXSk7cmV0dXJuIHR9fSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSg4KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYoIWkodCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcigiQ2FuJ3Qgc2V0ICIrU3RyaW5nKHQpKyIgYXMgYSBwcm90b3R5cGUiKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaSxyPWUoMCksbz1lKDg5KSxhPWUoOTApLHM9ZSg3KSxlPWUoMSksZD1lKCJpdGVyYXRvciIpLGM9ZSgidG9TdHJpbmdUYWciKSx1PWEudmFsdWVzO2ZvcihpIGluIG8pe3ZhciBsPXJbaV0sQT1sJiZsLnByb3RvdHlwZTtpZihBKXtpZihBW2RdIT09dSl0cnl7cyhBLGQsdSl9Y2F0Y2godCl7QVtkXT11fWlmKEFbY118fHMoQSxjLGkpLG9baV0pZm9yKHZhciBtIGluIGEpaWYoQVttXSE9PWFbbV0pdHJ5e3MoQSxtLGFbbV0pfWNhdGNoKHQpe0FbbV09YVttXX19fX0sZnVuY3Rpb24odCxuKXt0LmV4cG9ydHM9e0NTU1J1bGVMaXN0OjAsQ1NTU3R5bGVEZWNsYXJhdGlvbjowLENTU1ZhbHVlTGlzdDowLENsaWVudFJlY3RMaXN0OjAsRE9NUmVjdExpc3Q6MCxET01TdHJpbmdMaXN0OjAsRE9NVG9rZW5MaXN0OjEsRGF0YVRyYW5zZmVySXRlbUxpc3Q6MCxGaWxlTGlzdDowLEhUTUxBbGxDb2xsZWN0aW9uOjAsSFRNTENvbGxlY3Rpb246MCxIVE1MRm9ybUVsZW1lbnQ6MCxIVE1MU2VsZWN0RWxlbWVudDowLE1lZGlhTGlzdDowLE1pbWVUeXBlQXJyYXk6MCxOYW1lZE5vZGVNYXA6MCxOb2RlTGlzdDoxLFBhaW50UmVxdWVzdExpc3Q6MCxQbHVnaW46MCxQbHVnaW5BcnJheTowLFNWR0xlbmd0aExpc3Q6MCxTVkdOdW1iZXJMaXN0OjAsU1ZHUGF0aFNlZ0xpc3Q6MCxTVkdQb2ludExpc3Q6MCxTVkdTdHJpbmdMaXN0OjAsU1ZHVHJhbnNmb3JtTGlzdDowLFNvdXJjZUJ1ZmZlckxpc3Q6MCxTdHlsZVNoZWV0TGlzdDowLFRleHRUcmFja0N1ZUxpc3Q6MCxUZXh0VHJhY2tMaXN0OjAsVG91Y2hMaXN0OjB9fSxmdW5jdGlvbih0LG4sZSl7InVzZSBzdHJpY3QiO3ZhciBpPWUoMjApLHI9ZSg5MSksbz1lKDE3KSxhPWUoMTUpLGU9ZSg1Mykscz1hLnNldCxkPWEuZ2V0dGVyRm9yKCJBcnJheSBJdGVyYXRvciIpO3QuZXhwb3J0cz1lKEFycmF5LCJBcnJheSIsZnVuY3Rpb24odCxuKXtzKHRoaXMse3R5cGU6IkFycmF5IEl0ZXJhdG9yIix0YXJnZXQ6aSh0KSxpbmRleDowLGtpbmQ6bn0pfSxmdW5jdGlvbigpe3ZhciB0PWQodGhpcyksbj10LnRhcmdldCxlPXQua2luZCxpPXQuaW5kZXgrKztyZXR1cm4hbnx8aT49bi5sZW5ndGg/e3ZhbHVlOnQudGFyZ2V0PXZvaWQgMCxkb25lOiEwfToia2V5cyI9PWU/e3ZhbHVlOmksZG9uZTohMX06InZhbHVlcyI9PWU/e3ZhbHVlOm5baV0sZG9uZTohMX06e3ZhbHVlOltpLG5baV1dLGRvbmU6ITF9fSwidmFsdWVzIiksby5Bcmd1bWVudHM9by5BcnJheSxyKCJrZXlzIikscigidmFsdWVzIikscigiZW50cmllcyIpfSxmdW5jdGlvbih0LG4sZSl7dmFyIGk9ZSgxKSxyPWUoMzUpLGU9ZSg5KSxvPWkoInVuc2NvcGFibGVzIiksYT1BcnJheS5wcm90b3R5cGU7bnVsbD09YVtvXSYmZS5mKGEsbyx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnIobnVsbCl9KSx0LmV4cG9ydHM9ZnVuY3Rpb24odCl7YVtvXVt0XT0hMH19LGZ1bmN0aW9uKHQsbixlKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZih0KXt2YXIgbjtyZXR1cm4hKCFrKHQpfHwiZnVuY3Rpb24iIT10eXBlb2Yobj10LnRoZW4pKSYmbn1mdW5jdGlvbiBvKGwsQSxtKXt2YXIgcDtBLm5vdGlmaWVkfHwoQS5ub3RpZmllZD0hMCxwPUEucmVhY3Rpb25zLF8oZnVuY3Rpb24oKXtmb3IodmFyIHQ9QS52YWx1ZSxuPTE9PUEuc3RhdGUsZT0wO3AubGVuZ3RoPmU7KXt2YXIgaSxyLG8sYT1wW2UrK10scz1uP2Eub2s6YS5mYWlsLGQ9YS5yZXNvbHZlLGM9YS5yZWplY3QsdT1hLmRvbWFpbjt0cnl7cz8obnx8KDI9PT1BLnJlamVjdGlvbiYmbnQobCxBKSxBLnJlamVjdGlvbj0xKSwhMD09PXM/aT10Oih1JiZ1LmVudGVyKCksaT1zKHQpLHUmJih1LmV4aXQoKSxvPSEwKSksaT09PWEucHJvbWlzZT9jKFEoIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KHI9ZihpKSk/ci5jYWxsKGksZCxjKTpkKGkpKTpjKHQpfWNhdGNoKHQpe3UmJiFvJiZ1LmV4aXQoKSxjKHQpfX1BLnJlYWN0aW9ucz1bXSxBLm5vdGlmaWVkPSExLG0mJiFBLnJlamVjdGlvbiYmJChsLEEpfSkpfWZ1bmN0aW9uIHIodCxuLGUpe3ZhciBpO1k/KChpPUguY3JlYXRlRXZlbnQoIkV2ZW50IikpLnByb21pc2U9bixpLnJlYXNvbj1lLGkuaW5pdEV2ZW50KHQsITEsITApLG0uZGlzcGF0Y2hFdmVudChpKSk6aT17cHJvbWlzZTpuLHJlYXNvbjplfSwobj1tWyJvbiIrdF0pP24oaSk6InVuaGFuZGxlZHJlamVjdGlvbiI9PT10JiZQKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLGUpfWZ1bmN0aW9uIGEobixlLGkscil7cmV0dXJuIGZ1bmN0aW9uKHQpe24oZSxpLHQscil9fWZ1bmN0aW9uIHModCxuLGUsaSl7bi5kb25lfHwobi5kb25lPSEwLGkmJihuPWkpLG4udmFsdWU9ZSxuLnN0YXRlPTIsbyh0LG4sITApKX12YXIgaSxkLGMsdSxsPWUoNSksQT1lKDE2KSxtPWUoMCkscD1lKDEwKSxnPWUoNTcpLGg9ZSgxMiksdz1lKDkzKSx5PWUoMzYpLGI9ZSg5NCksaz1lKDgpLHY9ZSgxMyksUz1lKDk1KSxFPWUoMTQpLHg9ZSgyNyksVD1lKDIxKSx6PWUoOTkpLEM9ZSg1OSksST1lKDYwKS5zZXQsXz1lKDEwMCksQj1lKDYzKSxQPWUoMTAxKSxEPWUoMTgpLEw9ZSgyMiksTz1lKDE1KSxqPWUoNDgpLFI9ZSgxKSxNPWUoMTAyKSxaPVIoInNwZWNpZXMiKSxHPSJQcm9taXNlIixOPU8uZ2V0LEY9Ty5zZXQsWD1PLmdldHRlckZvcihHKSxVPWcsUT1tLlR5cGVFcnJvcixIPW0uZG9jdW1lbnQsVz1tLnByb2Nlc3MsVj1wKCJmZXRjaCIpLHE9RC5mLEs9cSxKPSJwcm9jZXNzIj09RShXKSxZPSEhKEgmJkguY3JlYXRlRXZlbnQmJm0uZGlzcGF0Y2hFdmVudCksaj1qKEcsZnVuY3Rpb24oKXtpZih4KFUpPT09U3RyaW5nKFUpKXtpZig2Nj09PU0pcmV0dXJuITA7aWYoIUomJiJmdW5jdGlvbiIhPXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpcmV0dXJuITB9aWYoQSYmIVUucHJvdG90eXBlLmZpbmFsbHkpcmV0dXJuITA7aWYoNTE8PU0mJi9uYXRpdmUgY29kZS8udGVzdChVKSlyZXR1cm4hMTtmdW5jdGlvbiB0KHQpe3QoZnVuY3Rpb24oKXt9LGZ1bmN0aW9uKCl7fSl9dmFyIG49VS5yZXNvbHZlKDEpO3JldHVybihuLmNvbnN0cnVjdG9yPXt9KVtaXT10LCEobi50aGVuKGZ1bmN0aW9uKCl7fSlpbnN0YW5jZW9mIHQpfSksej1qfHwheihmdW5jdGlvbih0KXtVLmFsbCh0KS5jYXRjaChmdW5jdGlvbigpe30pfSksJD1mdW5jdGlvbihlLGkpe0kuY2FsbChtLGZ1bmN0aW9uKCl7dmFyIHQsbj1pLnZhbHVlO2lmKHR0KGkpJiYodD1MKGZ1bmN0aW9uKCl7Sj9XLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbixlKTpyKCJ1bmhhbmRsZWRyZWplY3Rpb24iLGUsbil9KSxpLnJlamVjdGlvbj1KfHx0dChpKT8yOjEsdC5lcnJvcikpdGhyb3cgdC52YWx1ZX0pfSx0dD1mdW5jdGlvbih0KXtyZXR1cm4gMSE9PXQucmVqZWN0aW9uJiYhdC5wYXJlbnR9LG50PWZ1bmN0aW9uKHQsbil7SS5jYWxsKG0sZnVuY3Rpb24oKXtKP1cuZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsdCk6cigicmVqZWN0aW9uaGFuZGxlZCIsdCxuLnZhbHVlKX0pfSxldD1mdW5jdGlvbihlLGksdCxuKXtpZighaS5kb25lKXtpLmRvbmU9ITAsbiYmKGk9bik7dHJ5e2lmKGU9PT10KXRocm93IFEoIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7dmFyIHI9Zih0KTtyP18oZnVuY3Rpb24oKXt2YXIgbj17ZG9uZTohMX07dHJ5e3IuY2FsbCh0LGEoZXQsZSxuLGkpLGEocyxlLG4saSkpfWNhdGNoKHQpe3MoZSxuLHQsaSl9fSk6KGkudmFsdWU9dCxpLnN0YXRlPTEsbyhlLGksITEpKX1jYXRjaCh0KXtzKGUse2RvbmU6ITF9LHQsaSl9fX07aiYmKFU9ZnVuY3Rpb24odCl7Uyh0aGlzLFUsRyksdih0KSxpLmNhbGwodGhpcyk7dmFyIG49Tih0aGlzKTt0cnl7dChhKGV0LHRoaXMsbiksYShzLHRoaXMsbikpfWNhdGNoKHQpe3ModGhpcyxuLHQpfX0sKGk9ZnVuY3Rpb24odCl7Rih0aGlzLHt0eXBlOkcsZG9uZTohMSxub3RpZmllZDohMSxwYXJlbnQ6ITEscmVhY3Rpb25zOltdLHJlamVjdGlvbjohMSxzdGF0ZTowLHZhbHVlOnZvaWQgMH0pfSkucHJvdG90eXBlPXcoVS5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24odCxuKXt2YXIgZT1YKHRoaXMpLGk9cShDKHRoaXMsVSkpO3JldHVybiBpLm9rPSJmdW5jdGlvbiIhPXR5cGVvZiB0fHx0LGkuZmFpbD0iZnVuY3Rpb24iPT10eXBlb2YgbiYmbixpLmRvbWFpbj1KP1cuZG9tYWluOnZvaWQgMCxlLnBhcmVudD0hMCxlLnJlYWN0aW9ucy5wdXNoKGkpLDAhPWUuc3RhdGUmJm8odGhpcyxlLCExKSxpLnByb21pc2V9LGNhdGNoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLHQpfX0pLGQ9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgaSxuPU4odCk7dGhpcy5wcm9taXNlPXQsdGhpcy5yZXNvbHZlPWEoZXQsdCxuKSx0aGlzLnJlamVjdD1hKHMsdCxuKX0sRC5mPXE9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1VfHx0PT09Yz9uZXcgZDpLKHQpfSxBfHwiZnVuY3Rpb24iIT10eXBlb2YgZ3x8KHU9Zy5wcm90b3R5cGUudGhlbixoKGcucHJvdG90eXBlLCJ0aGVuIixmdW5jdGlvbih0LG4pe3ZhciBlPXRoaXM7cmV0dXJuIG5ldyBVKGZ1bmN0aW9uKHQsbil7dS5jYWxsKGUsdCxuKX0pLnRoZW4odCxuKX0se3Vuc2FmZTohMH0pLCJmdW5jdGlvbiI9PXR5cGVvZiBWJiZsKHtnbG9iYWw6ITAsZW51bWVyYWJsZTohMCxmb3JjZWQ6ITB9LHtmZXRjaDpmdW5jdGlvbih0KXtyZXR1cm4gQihVLFYuYXBwbHkobSxhcmd1bWVudHMpKX19KSkpLGwoe2dsb2JhbDohMCx3cmFwOiEwLGZvcmNlZDpqfSx7UHJvbWlzZTpVfSkseShVLEcsITEsITApLGIoRyksYz1wKEcpLGwoe3RhcmdldDpHLHN0YXQ6ITAsZm9yY2VkOmp9LHtyZWplY3Q6ZnVuY3Rpb24odCl7dmFyIG49cSh0aGlzKTtyZXR1cm4gbi5yZWplY3QuY2FsbCh2b2lkIDAsdCksbi5wcm9taXNlfX0pLGwoe3RhcmdldDpHLHN0YXQ6ITAsZm9yY2VkOkF8fGp9LHtyZXNvbHZlOmZ1bmN0aW9uKHQpe3JldHVybiBCKEEmJnRoaXM9PT1jP1U6dGhpcyx0KX19KSxsKHt0YXJnZXQ6RyxzdGF0OiEwLGZvcmNlZDp6fSx7YWxsOmZ1bmN0aW9uKHQpe3ZhciBzPXRoaXMsbj1xKHMpLGQ9bi5yZXNvbHZlLGM9bi5yZWplY3QsZT1MKGZ1bmN0aW9uKCl7dmFyIGk9dihzLnJlc29sdmUpLHI9W10sbz0wLGE9MTtUKHQsZnVuY3Rpb24odCl7dmFyIG49bysrLGU9ITE7ci5wdXNoKHZvaWQgMCksYSsrLGkuY2FsbChzLHQpLnRoZW4oZnVuY3Rpb24odCl7ZXx8KGU9ITAscltuXT10LC0tYXx8ZChyKSl9LGMpfSksLS1hfHxkKHIpfSk7cmV0dXJuIGUuZXJyb3ImJmMoZS52YWx1ZSksbi5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsaT1xKGUpLHI9aS5yZWplY3Qsbj1MKGZ1bmN0aW9uKCl7dmFyIG49dihlLnJlc29sdmUpO1QodCxmdW5jdGlvbih0KXtuLmNhbGwoZSx0KS50aGVuKGkucmVzb2x2ZSxyKX0pfSk7cmV0dXJuIG4uZXJyb3ImJnIobi52YWx1ZSksaS5wcm9taXNlfX0pfSxmdW5jdGlvbih0LG4sZSl7dmFyIHI9ZSgxMik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlKXtmb3IodmFyIGkgaW4gbilyKHQsaSxuW2ldLGUpO3JldHVybiB0fX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKDEwKSxyPWUoOSksbz1lKDEpLGE9ZSg2KSxzPW8oInNwZWNpZXMiKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIG49aSh0KSx0PXIuZjthJiZuJiYhbltzXSYmdChuLHMse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LGZ1bmN0aW9uKHQsbil7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlKXtpZighKHQgaW5zdGFuY2VvZiBuKSl0aHJvdyBUeXBlRXJyb3IoIkluY29ycmVjdCAiKyhlP2UrIiAiOiIiKSsiaW52b2NhdGlvbiIpO3JldHVybiB0fX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpPWUoMSkscj1lKDE3KSxvPWkoIml0ZXJhdG9yIiksYT1BcnJheS5wcm90b3R5cGU7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDAhPT10JiYoci5BcnJheT09PXR8fGFbb109PT10KX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDUyKSxyPWUoMTcpLG89ZSgxKSgiaXRlcmF0b3IiKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYobnVsbCE9dClyZXR1cm4gdFtvXXx8dFsiQEBpdGVyYXRvciJdfHxyW2kodCldfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBvPWUoNCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsbixlLGkpe3RyeXtyZXR1cm4gaT9uKG8oZSlbMF0sZVsxXSk6bihlKX1jYXRjaChuKXt2YXIgcj10LnJldHVybjt0aHJvdyB2b2lkIDAhPT1yJiZvKHIuY2FsbCh0KSksbn19fSxmdW5jdGlvbih0LG4sZSl7dmFyIHI9ZSgxKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT0wLGE9e25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTohIWkrK319LHJldHVybjpmdW5jdGlvbigpe289ITB9fTthW3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9LEFycmF5LmZyb20oYSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaCh0KXt9dC5leHBvcnRzPWZ1bmN0aW9uKHQsbil7aWYoIW4mJiFvKXJldHVybiExO3ZhciBlPSExO3RyeXt2YXIgaT17fTtpW3JdPWZ1bmN0aW9uKCl7cmV0dXJue25leHQ6ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTplPSEwfX19fSx0KGkpfWNhdGNoKHQpe31yZXR1cm4gZX19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaSxyLG8sYSxzLGQsYyx1LGw9ZSgwKSxBPWUoMjMpLmYsbT1lKDE0KSxwPWUoNjApLnNldCxmPWUoNjEpLGc9bC5NdXRhdGlvbk9ic2VydmVyfHxsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIsaD1sLnByb2Nlc3MsZT1sLlByb21pc2Usdz0icHJvY2VzcyI9PW0oaCksQT1BKGwsInF1ZXVlTWljcm90YXNrIiksQT1BJiZBLnZhbHVlO0F8fChpPWZ1bmN0aW9uKCl7dmFyIHQsbjtmb3IodyYmKHQ9aC5kb21haW4pJiZ0LmV4aXQoKTtyOyl7bj1yLmZuLHI9ci5uZXh0O3RyeXtuKCl9Y2F0Y2godCl7dGhyb3cgcj9hKCk6bz12b2lkIDAsdH19bz12b2lkIDAsdCYmdC5lbnRlcigpfSxhPXc/ZnVuY3Rpb24oKXtoLm5leHRUaWNrKGkpfTpnJiYhZj8ocz0hMCxkPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKSxuZXcgZyhpKS5vYnNlcnZlKGQse2NoYXJhY3RlckRhdGE6ITB9KSxmdW5jdGlvbigpe2QuZGF0YT1zPSFzfSk6ZSYmZS5yZXNvbHZlPyhjPWUucmVzb2x2ZSh2b2lkIDApLHU9Yy50aGVuLGZ1bmN0aW9uKCl7dS5jYWxsKGMsaSl9KTpmdW5jdGlvbigpe3AuY2FsbChsLGkpfSksdC5leHBvcnRzPUF8fGZ1bmN0aW9uKHQpe3Q9e2ZuOnQsbmV4dDp2b2lkIDB9O28mJihvLm5leHQ9dCkscnx8KHI9dCxhKCkpLG89dH19LGZ1bmN0aW9uKHQsbixlKXt2YXIgaT1lKDApO3QuZXhwb3J0cz1mdW5jdGlvbih0LG4pe3ZhciBlPWkuY29uc29sZTtlJiZlLmVycm9yJiYoMT09PWFyZ3VtZW50cy5sZW5ndGg/ZS5lcnJvcih0KTplLmVycm9yKHQsbikpfX0sZnVuY3Rpb24odCxuLGUpe3ZhciBpLHIsbz1lKDApLGU9ZSg2Miksbz1vLnByb2Nlc3Msbz1vJiZvLnZlcnNpb25zLG89byYmby52ODtvP3I9KGk9by5zcGxpdCgiLiIpKVswXStpWzFdOmUmJighKGk9ZS5tYXRjaCgvRWRnZVwvKFxkKykvKSl8fDc0PD1pWzFdKSYmKGk9ZS5tYXRjaCgvQ2hyb21lXC8oXGQrKS8pKSYmKHI9aVsxXSksdC5leHBvcnRzPXImJityfSxmdW5jdGlvbih0LG4sZSl7InVzZSBzdHJpY3QiO3ZhciBpPWUoNSkscj1lKDE2KSxvPWUoNTcpLGE9ZSgyKSxzPWUoMTApLGQ9ZSg1OSksYz1lKDYzKSxlPWUoMTIpO2koe3RhcmdldDoiUHJvbWlzZSIscHJvdG86ITAscmVhbDohMCxmb3JjZWQ6ISFvJiZhKGZ1bmN0aW9uKCl7by5wcm90b3R5cGUuZmluYWxseS5jYWxsKHt0aGVuOmZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24oKXt9KX0pfSx7ZmluYWxseTpmdW5jdGlvbihuKXt2YXIgZT1kKHRoaXMscygiUHJvbWlzZSIpKSx0PSJmdW5jdGlvbiI9PXR5cGVvZiBuO3JldHVybiB0aGlzLnRoZW4odD9mdW5jdGlvbih0KXtyZXR1cm4gYyhlLG4oKSkudGhlbihmdW5jdGlvbigpe3JldHVybiB0fSl9Om4sdD9mdW5jdGlvbih0KXtyZXR1cm4gYyhlLG4oKSkudGhlbihmdW5jdGlvbigpe3Rocm93IHR9KX06bil9fSkscnx8ImZ1bmN0aW9uIiE9dHlwZW9mIG98fG8ucHJvdG90eXBlLmZpbmFsbHl8fGUoby5wcm90b3R5cGUsImZpbmFsbHkiLHMoIlByb21pc2UiKS5wcm90b3R5cGUuZmluYWxseSl9LGZ1bmN0aW9uKHQsbixlKXsidXNlIHN0cmljdCI7dmFyIGk9ZSg1KSxyPWUoNiksbz1lKDM0KSxhPWUoNTYpLHM9ZSgzNSksZD1lKDkpLGM9ZSgxOSksdT1lKDIxKSxsPWUoNyksZT1lKDE1KSxBPWUuc2V0LG09ZS5nZXR0ZXJGb3IoIkFnZ3JlZ2F0ZUVycm9yIikscD1mdW5jdGlvbih0LG4pe3ZhciBlPXRoaXM7aWYoIShlIGluc3RhbmNlb2YgcCkpcmV0dXJuIG5ldyBwKHQsbik7YSYmKGU9YShuZXcgRXJyb3IobiksbyhlKSkpO3ZhciBpPVtdO3JldHVybiB1KHQsaS5wdXNoLGkpLHI/QShlLHtlcnJvcnM6aSx0eXBlOiJBZ2dyZWdhdGVFcnJvciJ9KTplLmVycm9ycz1pLHZvaWQgMCE9PW4mJmwoZSwibWVzc2FnZSIsU3RyaW5nKG4pKSxlfTtwLnByb3RvdHlwZT1zKEVycm9yLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6Yyg1LHApLG1lc3NhZ2U6Yyg1LCIiKSxuYW1lOmMoNSwiQWdncmVnYXRlRXJyb3IiKX0pLHImJmQuZihwLnByb3RvdHlwZSwiZXJyb3JzIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG0odGhpcykuZXJyb3JzfSxjb25maWd1cmFibGU6ITB9KSxpKHtnbG9iYWw6ITB9LHtBZ2dyZWdhdGVFcnJvcjpwfSl9LGZ1bmN0aW9uKHQsbixlKXtlKDY0KX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKDUpLHI9ZSgxOCksbz1lKDIyKTtpKHt0YXJnZXQ6IlByb21pc2UiLHN0YXQ6ITB9LHt0cnk6ZnVuY3Rpb24odCl7dmFyIG49ci5mKHRoaXMpLHQ9byh0KTtyZXR1cm4odC5lcnJvcj9uLnJlamVjdDpuLnJlc29sdmUpKHQudmFsdWUpLG4ucHJvbWlzZX19KX0sZnVuY3Rpb24odCxuLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKDUpLGw9ZSgxMyksQT1lKDEwKSxyPWUoMTgpLG89ZSgyMiksbT1lKDIxKTtpKHt0YXJnZXQ6IlByb21pc2UiLHN0YXQ6ITB9LHthbnk6ZnVuY3Rpb24odCl7dmFyIGQ9dGhpcyxuPXIuZihkKSxjPW4ucmVzb2x2ZSx1PW4ucmVqZWN0LGU9byhmdW5jdGlvbigpe3ZhciBpPWwoZC5yZXNvbHZlKSxyPVtdLG89MCxhPTEscz0hMTttKHQsZnVuY3Rpb24odCl7dmFyIG49bysrLGU9ITE7ci5wdXNoKHZvaWQgMCksYSsrLGkuY2FsbChkLHQpLnRoZW4oZnVuY3Rpb24odCl7ZXx8c3x8KHM9ITAsYyh0KSl9LGZ1bmN0aW9uKHQpe2V8fHN8fChlPSEwLHJbbl09dCwtLWF8fHUobmV3KEEoIkFnZ3JlZ2F0ZUVycm9yIikpKHIsIk5vIG9uZSBwcm9taXNlIHJlc29sdmVkIikpKX0pfSksLS1hfHx1KG5ldyhBKCJBZ2dyZWdhdGVFcnJvciIpKShyLCJObyBvbmUgcHJvbWlzZSByZXNvbHZlZCIpKX0pO3JldHVybiBlLmVycm9yJiZ1KGUudmFsdWUpLG4ucHJvbWlzZX19KX0sZnVuY3Rpb24odCxuKXshZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBuLGUsYSxpLHIsbyxzLGQsYyx1O2Z1bmN0aW9uIGwodCl7aWYoInN0cmluZyIhPXR5cGVvZiB0JiYodD1TdHJpbmcodCkpLC9bXmEtejAtOVwtIyQlJicqKy5cXl9gfH5dL2kudGVzdCh0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGNoYXJhY3RlciBpbiBoZWFkZXIgZmllbGQgbmFtZSIpO3JldHVybiB0LnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gQSh0KXtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIHQmJih0PVN0cmluZyh0KSksdH1mdW5jdGlvbiBtKG4pe3ZhciB0PXtuZXh0OmZ1bmN0aW9uKCl7dmFyIHQ9bi5zaGlmdCgpO3JldHVybntkb25lOnZvaWQgMD09PXQsdmFsdWU6dH19fTtyZXR1cm4gZSYmKHRbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0fSksdH1mdW5jdGlvbiBwKG4pe3RoaXMubWFwPXt9LG4gaW5zdGFuY2VvZiBwP24uZm9yRWFjaChmdW5jdGlvbih0LG4pe3RoaXMuYXBwZW5kKG4sdCl9LHRoaXMpOkFycmF5LmlzQXJyYXkobik/bi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3RoaXMuYXBwZW5kKHRbMF0sdFsxXSl9LHRoaXMpOm4mJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG4pLmZvckVhY2goZnVuY3Rpb24odCl7dGhpcy5hcHBlbmQodCxuW3RdKX0sdGhpcyl9ZnVuY3Rpb24gZih0KXtpZih0LmJvZHlVc2VkKXJldHVybiBQcm9taXNlLnJlamVjdChuZXcgVHlwZUVycm9yKCJBbHJlYWR5IHJlYWQiKSk7dC5ib2R5VXNlZD0hMH1mdW5jdGlvbiBnKGUpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0LG4pe2Uub25sb2FkPWZ1bmN0aW9uKCl7dChlLnJlc3VsdCl9LGUub25lcnJvcj1mdW5jdGlvbigpe24oZS5lcnJvcil9fSl9ZnVuY3Rpb24gaCh0KXt2YXIgbj1uZXcgRmlsZVJlYWRlcixlPWcobik7cmV0dXJuIG4ucmVhZEFzQXJyYXlCdWZmZXIodCksZX1mdW5jdGlvbiB3KHQpe2lmKHQuc2xpY2UpcmV0dXJuIHQuc2xpY2UoMCk7dmFyIG49bmV3IFVpbnQ4QXJyYXkodC5ieXRlTGVuZ3RoKTtyZXR1cm4gbi5zZXQobmV3IFVpbnQ4QXJyYXkodCkpLG4uYnVmZmVyfWZ1bmN0aW9uIHkoKXtyZXR1cm4gdGhpcy5ib2R5VXNlZD0hMSx0aGlzLl9pbml0Qm9keT1mdW5jdGlvbih0KXtpZih0aGlzLl9ib2R5SW5pdD10KWlmKCJzdHJpbmciPT10eXBlb2YgdCl0aGlzLl9ib2R5VGV4dD10O2Vsc2UgaWYoYSYmQmxvYi5wcm90b3R5cGUuaXNQcm90b3R5cGVPZih0KSl0aGlzLl9ib2R5QmxvYj10O2Vsc2UgaWYoaSYmRm9ybURhdGEucHJvdG90eXBlLmlzUHJvdG90eXBlT2YodCkpdGhpcy5fYm9keUZvcm1EYXRhPXQ7ZWxzZSBpZihuJiZVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlLmlzUHJvdG90eXBlT2YodCkpdGhpcy5fYm9keVRleHQ9dC50b1N0cmluZygpO2Vsc2UgaWYociYmYSYmcyh0KSl0aGlzLl9ib2R5QXJyYXlCdWZmZXI9dyh0LmJ1ZmZlciksdGhpcy5fYm9keUluaXQ9bmV3IEJsb2IoW3RoaXMuX2JvZHlBcnJheUJ1ZmZlcl0pO2Vsc2V7aWYoIXJ8fCFBcnJheUJ1ZmZlci5wcm90b3R5cGUuaXNQcm90b3R5cGVPZih0KSYmIWQodCkpdGhyb3cgbmV3IEVycm9yKCJ1bnN1cHBvcnRlZCBCb2R5SW5pdCB0eXBlIik7dGhpcy5fYm9keUFycmF5QnVmZmVyPXcodCl9ZWxzZSB0aGlzLl9ib2R5VGV4dD0iIjt0aGlzLmhlYWRlcnMuZ2V0KCJjb250ZW50LXR5cGUiKXx8KCJzdHJpbmciPT10eXBlb2YgdD90aGlzLmhlYWRlcnMuc2V0KCJjb250ZW50LXR5cGUiLCJ0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgiKTp0aGlzLl9ib2R5QmxvYiYmdGhpcy5fYm9keUJsb2IudHlwZT90aGlzLmhlYWRlcnMuc2V0KCJjb250ZW50LXR5cGUiLHRoaXMuX2JvZHlCbG9iLnR5cGUpOm4mJlVSTFNlYXJjaFBhcmFtcy5wcm90b3R5cGUuaXNQcm90b3R5cGVPZih0KSYmdGhpcy5oZWFkZXJzLnNldCgiY29udGVudC10eXBlIiwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLTgiKSl9LGEmJih0aGlzLmJsb2I9ZnVuY3Rpb24oKXt2YXIgdD1mKHRoaXMpO2lmKHQpcmV0dXJuIHQ7aWYodGhpcy5fYm9keUJsb2IpcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9ib2R5QmxvYik7aWYodGhpcy5fYm9keUFycmF5QnVmZmVyKXJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEJsb2IoW3RoaXMuX2JvZHlBcnJheUJ1ZmZlcl0pKTtpZih0aGlzLl9ib2R5Rm9ybURhdGEpdGhyb3cgbmV3IEVycm9yKCJjb3VsZCBub3QgcmVhZCBGb3JtRGF0YSBib2R5IGFzIGJsb2IiKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBCbG9iKFt0aGlzLl9ib2R5VGV4dF0pKX0sdGhpcy5hcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9ib2R5QXJyYXlCdWZmZXI/Zih0aGlzKXx8UHJvbWlzZS5yZXNvbHZlKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcik6dGhpcy5ibG9iKCkudGhlbihoKX0pLHRoaXMudGV4dD1mdW5jdGlvbigpe3ZhciB0LG4sZT1mKHRoaXMpO2lmKGUpcmV0dXJuIGU7aWYodGhpcy5fYm9keUJsb2IpcmV0dXJuIHQ9dGhpcy5fYm9keUJsb2IsZT1nKG49bmV3IEZpbGVSZWFkZXIpLG4ucmVhZEFzVGV4dCh0KSxlO2lmKHRoaXMuX2JvZHlBcnJheUJ1ZmZlcilyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZ1bmN0aW9uKHQpe2Zvcih2YXIgbj1uZXcgVWludDhBcnJheSh0KSxlPW5ldyBBcnJheShuLmxlbmd0aCksaT0wO2k8bi5sZW5ndGg7aSsrKWVbaV09U3RyaW5nLmZyb21DaGFyQ29kZShuW2ldKTtyZXR1cm4gZS5qb2luKCIiKX0odGhpcy5fYm9keUFycmF5QnVmZmVyKSk7aWYodGhpcy5fYm9keUZvcm1EYXRhKXRocm93IG5ldyBFcnJvcigiY291bGQgbm90IHJlYWQgRm9ybURhdGEgYm9keSBhcyB0ZXh0Iik7cmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9ib2R5VGV4dCl9LGkmJih0aGlzLmZvcm1EYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGV4dCgpLnRoZW4oayl9KSx0aGlzLmpzb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50ZXh0KCkudGhlbihKU09OLnBhcnNlKX0sdGhpc31mdW5jdGlvbiBiKHQsbil7dmFyIGUsaT0obj1ufHx7fSkuYm9keTtpZih0IGluc3RhbmNlb2YgYil7aWYodC5ib2R5VXNlZCl0aHJvdyBuZXcgVHlwZUVycm9yKCJBbHJlYWR5IHJlYWQiKTt0aGlzLnVybD10LnVybCx0aGlzLmNyZWRlbnRpYWxzPXQuY3JlZGVudGlhbHMsbi5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBwKHQuaGVhZGVycykpLHRoaXMubWV0aG9kPXQubWV0aG9kLHRoaXMubW9kZT10Lm1vZGUsaXx8bnVsbD09dC5fYm9keUluaXR8fChpPXQuX2JvZHlJbml0LHQuYm9keVVzZWQ9ITApfWVsc2UgdGhpcy51cmw9U3RyaW5nKHQpO2lmKHRoaXMuY3JlZGVudGlhbHM9bi5jcmVkZW50aWFsc3x8dGhpcy5jcmVkZW50aWFsc3x8Im9taXQiLCFuLmhlYWRlcnMmJnRoaXMuaGVhZGVyc3x8KHRoaXMuaGVhZGVycz1uZXcgcChuLmhlYWRlcnMpKSx0aGlzLm1ldGhvZD0odD0oZT1uLm1ldGhvZHx8dGhpcy5tZXRob2R8fCJHRVQiKS50b1VwcGVyQ2FzZSgpLC0xPGMuaW5kZXhPZih0KT90OmUpLHRoaXMubW9kZT1uLm1vZGV8fHRoaXMubW9kZXx8bnVsbCx0aGlzLnJlZmVycmVyPW51bGwsKCJHRVQiPT09dGhpcy5tZXRob2R8fCJIRUFEIj09PXRoaXMubWV0aG9kKSYmaSl0aHJvdyBuZXcgVHlwZUVycm9yKCJCb2R5IG5vdCBhbGxvd2VkIGZvciBHRVQgb3IgSEVBRCByZXF1ZXN0cyIpO3RoaXMuX2luaXRCb2R5KGkpfWZ1bmN0aW9uIGsodCl7dmFyIGU9bmV3IEZvcm1EYXRhO3JldHVybiB0LnRyaW0oKS5zcGxpdCgiJiIpLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG47dCYmKHQ9KG49dC5zcGxpdCgiPSIpKS5zaGlmdCgpLnJlcGxhY2UoL1wrL2csIiAiKSxuPW4uam9pbigiPSIpLnJlcGxhY2UoL1wrL2csIiAiKSxlLmFwcGVuZChkZWNvZGVVUklDb21wb25lbnQodCksZGVjb2RlVVJJQ29tcG9uZW50KG4pKSl9KSxlfWZ1bmN0aW9uIHYodCxuKXtuPW58fHt9LHRoaXMudHlwZT0iZGVmYXVsdCIsdGhpcy5zdGF0dXM9dm9pZCAwPT09bi5zdGF0dXM/MjAwOm4uc3RhdHVzLHRoaXMub2s9MjAwPD10aGlzLnN0YXR1cyYmdGhpcy5zdGF0dXM8MzAwLHRoaXMuc3RhdHVzVGV4dD0ic3RhdHVzVGV4dCJpbiBuP24uc3RhdHVzVGV4dDoiT0siLHRoaXMuaGVhZGVycz1uZXcgcChuLmhlYWRlcnMpLHRoaXMudXJsPW4udXJsfHwiIix0aGlzLl9pbml0Qm9keSh0KX10LmZldGNofHwobj0iVVJMU2VhcmNoUGFyYW1zImluIHQsZT0iU3ltYm9sImluIHQmJiJpdGVyYXRvciJpbiBTeW1ib2wsYT0iRmlsZVJlYWRlciJpbiB0JiYiQmxvYiJpbiB0JiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IEJsb2IsITB9Y2F0Y2godCl7cmV0dXJuITF9fSgpLGk9IkZvcm1EYXRhImluIHQsKHI9IkFycmF5QnVmZmVyImluIHQpJiYobz1bIltvYmplY3QgSW50OEFycmF5XSIsIltvYmplY3QgVWludDhBcnJheV0iLCJbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XSIsIltvYmplY3QgSW50MTZBcnJheV0iLCJbb2JqZWN0IFVpbnQxNkFycmF5XSIsIltvYmplY3QgSW50MzJBcnJheV0iLCJbb2JqZWN0IFVpbnQzMkFycmF5XSIsIltvYmplY3QgRmxvYXQzMkFycmF5XSIsIltvYmplY3QgRmxvYXQ2NEFycmF5XSJdLHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJkRhdGFWaWV3LnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKHQpfSxkPUFycmF5QnVmZmVyLmlzVmlld3x8ZnVuY3Rpb24odCl7cmV0dXJuIHQmJi0xPG8uaW5kZXhPZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpfSkscC5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uKHQsbil7dD1sKHQpLG49QShuKTt2YXIgZT10aGlzLm1hcFt0XTt0aGlzLm1hcFt0XT1lP2UrIiwiK246bn0scC5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe2RlbGV0ZSB0aGlzLm1hcFtsKHQpXX0scC5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0PWwodCksdGhpcy5oYXModCk/dGhpcy5tYXBbdF06bnVsbH0scC5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm1hcC5oYXNPd25Qcm9wZXJ0eShsKHQpKX0scC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsbil7dGhpcy5tYXBbbCh0KV09QShuKX0scC5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbih0LG4pe2Zvcih2YXIgZSBpbiB0aGlzLm1hcCl0aGlzLm1hcC5oYXNPd25Qcm9wZXJ0eShlKSYmdC5jYWxsKG4sdGhpcy5tYXBbZV0sZSx0aGlzKX0scC5wcm90b3R5cGUua2V5cz1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24odCxuKXtlLnB1c2gobil9KSxtKGUpfSxwLnByb3RvdHlwZS52YWx1ZXM9ZnVuY3Rpb24oKXt2YXIgbj1bXTtyZXR1cm4gdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe24ucHVzaCh0KX0pLG0obil9LHAucHJvdG90eXBlLmVudHJpZXM9ZnVuY3Rpb24oKXt2YXIgZT1bXTtyZXR1cm4gdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKHQsbil7ZS5wdXNoKFtuLHRdKX0pLG0oZSl9LGUmJihwLnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdPXAucHJvdG90eXBlLmVudHJpZXMpLGM9WyJERUxFVEUiLCJHRVQiLCJIRUFEIiwiT1BUSU9OUyIsIlBPU1QiLCJQVVQiXSxiLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgYih0aGlzLHtib2R5OnRoaXMuX2JvZHlJbml0fSl9LHkuY2FsbChiLnByb3RvdHlwZSkseS5jYWxsKHYucHJvdG90eXBlKSx2LnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgdih0aGlzLl9ib2R5SW5pdCx7c3RhdHVzOnRoaXMuc3RhdHVzLHN0YXR1c1RleHQ6dGhpcy5zdGF0dXNUZXh0LGhlYWRlcnM6bmV3IHAodGhpcy5oZWFkZXJzKSx1cmw6dGhpcy51cmx9KX0sdi5lcnJvcj1mdW5jdGlvbigpe3ZhciB0PW5ldyB2KG51bGwse3N0YXR1czowLHN0YXR1c1RleHQ6IiJ9KTtyZXR1cm4gdC50eXBlPSJlcnJvciIsdH0sdT1bMzAxLDMwMiwzMDMsMzA3LDMwOF0sdi5yZWRpcmVjdD1mdW5jdGlvbih0LG4pe2lmKC0xPT09dS5pbmRleE9mKG4pKXRocm93IG5ldyBSYW5nZUVycm9yKCJJbnZhbGlkIHN0YXR1cyBjb2RlIik7cmV0dXJuIG5ldyB2KG51bGwse3N0YXR1czpuLGhlYWRlcnM6e2xvY2F0aW9uOnR9fSl9LHQuSGVhZGVycz1wLHQuUmVxdWVzdD1iLHQuUmVzcG9uc2U9dix0LmZldGNoPWZ1bmN0aW9uKGUsbyl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGksdCl7dmFyIG49bmV3IGIoZSxvKSxyPW5ldyBYTUxIdHRwUmVxdWVzdDtyLm9ubG9hZD1mdW5jdGlvbigpe3ZhciBlLHQ9e3N0YXR1czpyLnN0YXR1cyxzdGF0dXNUZXh0OnIuc3RhdHVzVGV4dCxoZWFkZXJzOihuPXIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCl8fCIiLGU9bmV3IHAsbi5yZXBsYWNlKC9ccj9cbltcdCBdKy9nLCIgIikuc3BsaXQoL1xyP1xuLykuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgbj10LnNwbGl0KCI6IiksdD1uLnNoaWZ0KCkudHJpbSgpO3QmJihuPW4uam9pbigiOiIpLnRyaW0oKSxlLmFwcGVuZCh0LG4pKX0pLGUpfTt0LnVybD0icmVzcG9uc2VVUkwiaW4gcj9yLnJlc3BvbnNlVVJMOnQuaGVhZGVycy5nZXQoIlgtUmVxdWVzdC1VUkwiKTt2YXIgbj0icmVzcG9uc2UiaW4gcj9yLnJlc3BvbnNlOnIucmVzcG9uc2VUZXh0O2kobmV3IHYobix0KSl9LHIub25lcnJvcj1mdW5jdGlvbigpe3QobmV3IFR5cGVFcnJvcigiTmV0d29yayByZXF1ZXN0IGZhaWxlZCIpKX0sci5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXt0KG5ldyBUeXBlRXJyb3IoIk5ldHdvcmsgcmVxdWVzdCBmYWlsZWQiKSl9LHIub3BlbihuLm1ldGhvZCxuLnVybCwhMCksImluY2x1ZGUiPT09bi5jcmVkZW50aWFscz9yLndpdGhDcmVkZW50aWFscz0hMDoib21pdCI9PT1uLmNyZWRlbnRpYWxzJiYoci53aXRoQ3JlZGVudGlhbHM9ITEpLCJyZXNwb25zZVR5cGUiaW4gciYmYSYmKHIucmVzcG9uc2VUeXBlPSJibG9iIiksbi5oZWFkZXJzLmZvckVhY2goZnVuY3Rpb24odCxuKXtyLnNldFJlcXVlc3RIZWFkZXIobix0KX0pLHIuc2VuZCh2b2lkIDA9PT1uLl9ib2R5SW5pdD9udWxsOm4uX2JvZHlJbml0KX0pfSx0LmZldGNoLnBvbHlmaWxsPSEwKX0oInVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmP3NlbGY6dGhpcyl9LGZ1bmN0aW9uKHQsbil7ImRvY3VtZW50ImluIHdpbmRvdy5zZWxmJiYoImNsYXNzTGlzdCJpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJfIikmJighZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TfHwiY2xhc3NMaXN0ImluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCJnIikpfHxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7aWYoIkVsZW1lbnQiaW4gdCl7dmFyIG49dC5FbGVtZW50LnByb3RvdHlwZSxlPU9iamVjdCxvPVN0cmluZy5wcm90b3R5cGUudHJpbXx8ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXBsYWNlKC9eXHMrfFxzKyQvZywiIil9LGk9QXJyYXkucHJvdG90eXBlLmluZGV4T2Z8fGZ1bmN0aW9uKHQpe2Zvcih2YXIgbj0wLGU9dGhpcy5sZW5ndGg7bjxlO24rKylpZihuIGluIHRoaXMmJnRoaXNbbl09PT10KXJldHVybiBuO3JldHVybi0xfSxyPWZ1bmN0aW9uKHQsbil7dGhpcy5uYW1lPXQsdGhpcy5jb2RlPURPTUV4Y2VwdGlvblt0XSx0aGlzLm1lc3NhZ2U9bn0sYT1mdW5jdGlvbih0LG4pe2lmKCIiPT09bil0aHJvdyBuZXcgcigiU1lOVEFYX0VSUiIsIkFuIGludmFsaWQgb3IgaWxsZWdhbCBzdHJpbmcgd2FzIHNwZWNpZmllZCIpO2lmKC9ccy8udGVzdChuKSl0aHJvdyBuZXcgcigiSU5WQUxJRF9DSEFSQUNURVJfRVJSIiwiU3RyaW5nIGNvbnRhaW5zIGFuIGludmFsaWQgY2hhcmFjdGVyIik7cmV0dXJuIGkuY2FsbCh0LG4pfSxzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbj1vLmNhbGwodC5nZXRBdHRyaWJ1dGUoImNsYXNzIil8fCIiKSxlPW4/bi5zcGxpdCgvXHMrLyk6W10saT0wLHI9ZS5sZW5ndGg7aTxyO2krKyl0aGlzLnB1c2goZVtpXSk7dGhpcy5fdXBkYXRlQ2xhc3NOYW1lPWZ1bmN0aW9uKCl7dC5zZXRBdHRyaWJ1dGUoImNsYXNzIix0aGlzLnRvU3RyaW5nKCkpfX0sZD1zLnByb3RvdHlwZT1bXSxjPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzKHRoaXMpfTtpZihyLnByb3RvdHlwZT1FcnJvci5wcm90b3R5cGUsZC5pdGVtPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfHxudWxsfSxkLmNvbnRhaW5zPWZ1bmN0aW9uKHQpe3JldHVybi0xIT09YSh0aGlzLHQrPSIiKX0sZC5hZGQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQsbj1hcmd1bWVudHMsZT0wLGk9bi5sZW5ndGgscj0hMTstMT09PWEodGhpcyx0PW5bZV0rIiIpJiYodGhpcy5wdXNoKHQpLHI9ITApLCsrZTxpOyk7ciYmdGhpcy5fdXBkYXRlQ2xhc3NOYW1lKCl9LGQucmVtb3ZlPWZ1bmN0aW9uKCl7dmFyIHQsbixlPWFyZ3VtZW50cyxpPTAscj1lLmxlbmd0aCxvPSExO2Rve2ZvcihuPWEodGhpcyx0PWVbaV0rIiIpOy0xIT09bjspdGhpcy5zcGxpY2UobiwxKSxvPSEwLG49YSh0aGlzLHQpfXdoaWxlKCsraTxyKTtvJiZ0aGlzLl91cGRhdGVDbGFzc05hbWUoKX0sZC50b2dnbGU9ZnVuY3Rpb24odCxuKXt0Kz0iIjt2YXIgZT10aGlzLmNvbnRhaW5zKHQpLGk9ZT8hMCE9PW4mJiJyZW1vdmUiOiExIT09biYmImFkZCI7cmV0dXJuIGkmJnRoaXNbaV0odCksITA9PT1ufHwhMT09PW4/bjohZX0sZC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmpvaW4oIiAiKX0sZS5kZWZpbmVQcm9wZXJ0eSl7dmFyIHU9e2dldDpjLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfTt0cnl7ZS5kZWZpbmVQcm9wZXJ0eShuLCJjbGFzc0xpc3QiLHUpfWNhdGNoKHQpe3ZvaWQgMCE9PXQubnVtYmVyJiYtMjE0NjgyMzI1MiE9PXQubnVtYmVyfHwodS5lbnVtZXJhYmxlPSExLGUuZGVmaW5lUHJvcGVydHkobiwiY2xhc3NMaXN0Iix1KSl9fWVsc2UgZS5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyYmbi5fX2RlZmluZUdldHRlcl9fKCJjbGFzc0xpc3QiLGMpfX0od2luZG93LnNlbGYpLGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO3ZhciB0LGUsbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJfIik7bi5jbGFzc0xpc3QuYWRkKCJjMSIsImMyIiksbi5jbGFzc0xpc3QuY29udGFpbnMoImMyIil8fCgodD1mdW5jdGlvbih0KXt2YXIgaT1ET01Ub2tlbkxpc3QucHJvdG90eXBlW3RdO0RPTVRva2VuTGlzdC5wcm90b3R5cGVbdF09ZnVuY3Rpb24odCl7Zm9yKHZhciBuPWFyZ3VtZW50cy5sZW5ndGgsZT0wO2U8bjtlKyspdD1hcmd1bWVudHNbZV0saS5jYWxsKHRoaXMsdCl9fSkoImFkZCIpLHQoInJlbW92ZSIpKSxuLmNsYXNzTGlzdC50b2dnbGUoImMzIiwhMSksbi5jbGFzc0xpc3QuY29udGFpbnMoImMzIikmJihlPURPTVRva2VuTGlzdC5wcm90b3R5cGUudG9nZ2xlLERPTVRva2VuTGlzdC5wcm90b3R5cGUudG9nZ2xlPWZ1bmN0aW9uKHQsbil7cmV0dXJuIDEgaW4gYXJndW1lbnRzJiYhdGhpcy5jb250YWlucyh0KT09IW4/bjplLmNhbGwodGhpcyx0KX0pLG49bnVsbH0oKSl9LGZ1bmN0aW9uKHQsbixlKXsidXNlIHN0cmljdCI7ZS5yKG4pO3ZhciBpPWUoNjUpLHI9ZS5uKGkpLG89ZSg2Niksbj1lLm4obyk7ZSgxMDgpLGUoMTA5KSx2b2lkIDA9PT1PYmplY3QuYXNzaWduJiYoT2JqZWN0LmFzc2lnbj1yLmEpLCJ1bmRlZmluZWQiPT10eXBlb2YgUHJvbWlzZSYmKHdpbmRvdy5Qcm9taXNlPW4uYSk7ZnVuY3Rpb24gcyhuLGUpe3ZhciBpPSExO3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2VbdF09PT1uJiYoaT0hMCl9KSxpfWZ1bmN0aW9uIGEodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBBcnJheT90Olt0XX1mdW5jdGlvbiBBKCl7cmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5ocmVmfWZ1bmN0aW9uIGcoKXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIG5hdmlnYXRvciYmLyg/OnBob25lfHdpbmRvd3NccytwaG9uZXxpcG9kfGJsYWNrYmVycnl8KD86YW5kcm9pZHxiYlxkK3xtZWVnb3xzaWxrfGdvb2dsZWJvdCkgLis/IG1vYmlsZXxwYWxtfHdpbmRvd3NccytjZXxvcGVyYVxzbWluaXxhdmFudGdvfG1vYmlsZXNhZmFyaXxkb2NvbW8pL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX1mdW5jdGlvbiBoKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBuYXZpZ2F0b3ImJi8oPzppcGFkfHBsYXlib29rfCg/OmFuZHJvaWR8YmJcZCt8bWVlZ298c2lsaykoPyEgLis/IG1vYmlsZSkpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX1mdW5jdGlvbiBkKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBuYXZpZ2F0b3ImJi9NU0lFIFxcZHxUcmlkZW50LipydjovaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfWZ1bmN0aW9uIHcoKXt2YXIgbzt3aW5kb3cuX190Y2ZhcGl8fChvPXt9LHdpbmRvdy5fX3RjZmFwaT1mdW5jdGlvbih0LG4sZSxpKXtpZighbHQuR2V0SXNQb2tpSUZyYW1lKCkmJiFmdW5jdGlvbigpe3RyeXtyZXR1cm4gd2luZG93LnNlbGYhPT13aW5kb3cudG9wfWNhdGNoKHQpe3JldHVybiEwfX0oKSlyZXR1cm4gZSh7bXNnOiJDTVAgbm90IGZvdW5kIn0sITEpLHZvaWQgY29uc29sZS5lcnJvcigiQSBUQ0Z2MiBjb21wbGlhbnQgQ01QIHNob3VsZCBiZSBhZGRlZCB0byB0aGlzIGdhbWUiKTt2YXIgcj1NYXRoLnJhbmRvbSgpLG49e19fdGNmYXBpQ2FsbDp7Y29tbWFuZDp0LHBhcmFtZXRlcjppLHZlcnNpb246bixjYWxsSWQ6cn19O29bcl09ZSx3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKG4sIioiKX0sd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGZ1bmN0aW9uKHQpe3ZhciBuPXt9O3RyeXtuPSJzdHJpbmciPT10eXBlb2YgdC5kYXRhP0pTT04ucGFyc2UodC5kYXRhKTp0LmRhdGF9Y2F0Y2godCl7fXZhciBlPW4uX190Y2ZhcGlSZXR1cm47ZSYmImZ1bmN0aW9uIj09dHlwZW9mIG9bZS5jYWxsSWRdJiYob1tlLmNhbGxJZF0oZS5yZXR1cm5WYWx1ZSxlLnN1Y2Nlc3MpLG9bZS5jYWxsSWRdPW51bGwpfSwhMSkpLHdpbmRvdy5wYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCl7d2luZG93LnBianMuc2V0Q29uZmlnKHtjb25zZW50TWFuYWdlbWVudDp7Z2Rwcjp7Y21wQXBpOiJpYWIiLHRpbWVvdXQ6OGUzLGRlZmF1bHRHZHByU2NvcGU6ITB9fX0pfSl9dmFyIGM9ZSgxMSksdT1lLm4oYykseT17cmVhZHk6InBva2lBcHBSZWFkeSIsYWRibG9ja2VkOiJwb2tpQXBwQWRibG9ja2VkIixhZHM6e2NvbXBsZXRlZDoicG9raUFkc0NvbXBsZXRlZCIsZXJyb3I6InBva2lBZHNFcnJvciIsaW1wcmVzc2lvbjoicG9raUFkc0ltcHJlc3Npb24iLGR1cmF0aW9uQ2hhbmdlOiJwb2tpQWRzRHVyYXRpb25DaGFuZ2UiLGxpbWl0OiJwb2tpQWRzTGltaXQiLHJlYWR5OiJwb2tpQWRzUmVhZHkiLHJlcXVlc3RlZDoicG9raUFkc1JlcXVlc3RlZCIscHJlYmlkUmVxdWVzdGVkOiJwb2tpQWRzUHJlYmlkUmVxdWVzdGVkIixza2lwcGVkOiJwb2tpQWRzU2tpcHBlZCIsc3RhcnRlZDoicG9raUFkc1N0YXJ0ZWQiLHN0b3BwZWQ6InBva2lBZHNTdG9wcGVkIixidXN5OiJwb2tpQWRzQnVzeSIscG9zaXRpb246e3ByZXJvbGw6IlBQIixtaWRyb2xsOiJQTSIscmV3YXJkZWQ6IlBSIixkaXNwbGF5OiJEUCJ9LHZpZGVvOntjbGlja2VkOiJwb2tpVmlkZW9BZHNDbGlja2VkIixmaXJzdFF1YXJ0aWxlOiJwb2tpVmlkZW9BZHNGaXJzdFF1YXJ0aWxlIixtaWRQb2ludDoicG9raVZpZGVvQWRzTWlkUG9pbnQiLHRoaXJkUXVhcnRpbGU6InBva2lWaWRlb0Fkc1RoaXJkUXVhcnRpbGUiLGVycm9yOiJwb2tpVmlkZW9BZHNFcnJvciIsbG9hZGVyRXJyb3I6InBva2lWaWRlb0Fkc0xvYWRlckVycm9yIixwYXVzZWQ6InBva2lWaWRlb0Fkc1BhdXNlVHJpZ2dlcmVkIixyZXN1bWVkOiJwb2tpVmlkZW9BZHNSZXN1bWVkVHJpZ2dlcmVkIixwcm9ncmVzczoicG9raVZpZGVvQWRzUHJvZ3Jlc3MiLGJ1ZmZlcmluZzoicG9raVZpZGVvQWRzQnVmZmVyaW5nIn19LGluZm86e21lc3NhZ2VzOnt0aW1lTGltaXQ6IlRoZSBhZC1yZXF1ZXN0IHdhcyBub3QgcHJvY2Vzc2VkLCBiZWNhdXNlIG9mIGEgdGltZSBjb25zdHJhaW50IixwcmVyb2xsTGltaXQ6IlRoZSBhZC1yZXF1ZXN0IHdhcyBjYW5jZWxsZWQsIGJlY2F1c2Ugd2UncmUgbm90IGFsbG93ZWQgdG8gc2hvdyBhIHByZXJvbGwifX0sbWVzc2FnZTp7ZXZlbnQ6InBva2lNZXNzYWdlRXZlbnQiLHNka0RldGFpbHM6InBva2lNZXNzYWdlU2RrRGV0YWlscyIsdG9nZ2xlUHJvZ3JhbW1hdGljQWRzOiJwb2tpTWVzc2FnZVRvZ2dsZVByb2dyYW1tYXRpY0FkcyJ9LHRyYWNraW5nOntjdXN0b206InBva2lUcmFja2luZ0N1c3RvbSIsc2V0UGxheWVyQWdlOiJwb2tpVHJhY2tpbmdTZXRQbGF5ZXJBZ2UiLHRvZ2dsZVBsYXllckFkdmVydGlzaW5nQ29uc2VudDoicG9raVRyYWNraW5nVG9nZ2xlUGxheWVyQWR2ZXJ0aXNpbmdDb25zZW50IixkZWJ1Z1RydWVJblByb2R1Y3Rpb246InBva2lNZXNzYWdlRGVidWdUcnVlUHJvZHVjdGlvbiIsc2NyZWVuOntnYW1lcGxheVN0YXJ0OiJwb2tpVHJhY2tpbmdTY3JlZW5HYW1lcGxheVN0YXJ0IixnYW1lcGxheVN0b3A6InBva2lUcmFja2luZ1NjcmVlbkdhbWVwbGF5U3RvcCIsZ2FtZUxvYWRpbmdTdGFydGVkOiJwb2tpVHJhY2tpbmdTY3JlZW5HYW1lTG9hZGluZ1N0YXJ0ZWQiLGdhbWVMb2FkaW5nUHJvZ3Jlc3M6InBva2lUcmFja2luZ1NjcmVlbkdhbWVMb2FkaW5nUHJvZ3Jlc3MiLGdhbWVMb2FkaW5nRmluaXNoZWQ6InBva2lUcmFja2luZ1NjcmVlbkdhbWVMb2FkaW5nRmluaXNoZWQiLGNvbW1lcmNpYWxCcmVhazoicG9raVRyYWNraW5nU2NyZWVuQ29tbWVyY2lhbEJyZWFrIixyZXdhcmRlZEJyZWFrOiJwb2tpVHJhY2tpbmdTY3JlZW5SZXdhcmRlZEJyZWFrIixoYXBweVRpbWU6InBva2lUcmFja2luZ1NjcmVlbkhhcHB5VGltZSIsZmlyc3RSb3VuZDoicG9raVRyYWNraW5nU2NyZWVuRmlyc3RSb3VuZCIscm91bmRTdGFydDoicG9raVRyYWNraW5nU2NyZWVuUm91bmRTdGFydCIscm91bmRFbmQ6InBva2lUcmFja2luZ1NjcmVlblJvdW5kRW5kIixnYW1lSW50ZXJhY3RpdmU6InBva2lUcmFja2luZ1NjcmVlbkdhbWVJbnRlcmFjdGl2ZSIsZGlzcGxheUFkOiJwb2tpVHJhY2tpbmdTY3JlZW5EaXNwbGF5QWRSZXF1ZXN0IixkZXN0cm95QWQ6InBva2lUcmFja2luZ1NjcmVlbkRpc3BsYXlBZERlc3Ryb3kifSxzZGs6e3N0YXR1czp7aW5pdGlhbGl6ZWQ6InBva2lUcmFja2luZ1Nka1N0YXR1c0luaXRpYWxpemVkIixmYWlsZWQ6InBva2lUcmFja2luZ1Nka1N0YXR1c0ZhaWxlZCJ9fSxhZHM6e3N0YXR1czp7YnVzeToicG9raVRyYWNraW5nQWRzU3RhdHVzQnVzeSIsY29tcGxldGVkOiJwb2tpVHJhY2tpbmdBZHNTdGF0dXNDb21wbGV0ZWQiLGVycm9yOiJwb2tpVHJhY2tpbmdBZHNTdGF0dXNFcnJvciIsZGlzcGxheUVycm9yOiJwb2tpVHJhY2tpbmdBZHNTdGF0dXNEaXNwbGF5RXJyb3IiLGltcHJlc3Npb246InBva2lUcmFja2luZ0Fkc1N0YXR1c0ltcHJlc3Npb24iLGxpbWl0OiJwb2tpVHJhY2tpbmdBZHNTdGF0dXNMaW1pdCIscmVhZHk6InBva2lUcmFja2luZ0Fkc1N0YXR1c1JlYWR5IixyZXF1ZXN0ZWQ6InBva2lUcmFja2luZ0Fkc1N0YXR1c1JlcXVlc3RlZCIscHJlYmlkUmVxdWVzdGVkOiJwb2tpVHJhY2tpbmdBZHNTdGF0dXNQcmViaWRSZXF1ZXN0ZWQiLHNraXBwZWQ6InBva2lUcmFja2luZ0Fkc1N0YXR1c1NraXBwZWQiLHN0YXJ0ZWQ6InBva2lUcmFja2luZ0Fkc1N0YXR1c1N0YXJ0ZWQiLGJ1ZmZlcmluZzoicG9raVRyYWNraW5nQWRzU3RhdHVzQnVmZmVyaW5nIn0sdmlkZW86e2NsaWNrZWQ6InBva2lUcmFja2luZ0Fkc1ZpZGVvQ2xpY2tlZCIsZXJyb3I6InBva2lUcmFja2luZ0Fkc1ZpZGVvRXJyb3IiLGxvYWRlckVycm9yOiJwb2tpVHJhY2tpbmdBZHNWaWRlb0xvYWRlckVycm9yIn0sZGlzcGxheTp7cmVxdWVzdGVkOiJwb2tpVHJhY2tpbmdTY3JlZW5EaXNwbGF5QWRSZXF1ZXN0ZWQiLGltcHJlc3Npb246InBva2lUcmFja2luZ1NjcmVlbkRpc3BsYXlBZEltcHJlc3Npb24iLHZpZXdhYmxlOiJwb2tpVHJhY2tpbmdTY3JlZW5EaXNwbGF5QWRWaWV3YWJsZSJ9fX19LGw9ZnVuY3Rpb24oKXtyZXR1cm4obD1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIG4sZT0xLGk9YXJndW1lbnRzLmxlbmd0aDtlPGk7ZSsrKWZvcih2YXIgciBpbiBuPWFyZ3VtZW50c1tlXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKHRbcl09bltyXSk7cmV0dXJuIHR9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGI9KEQuY2xlYXJFdmVudExpc3RlbmVycz1mdW5jdGlvbigpe3RoaXMubGlzdGVuZXJzPXt9fSxELnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24odCxuKXshT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMubGlzdGVuZXJzLHQpfHwtMSE9PShuPXRoaXMubGlzdGVuZXJzW3RdLmluZGV4T2YobikpJiZ0aGlzLmxpc3RlbmVyc1t0XS5zcGxpY2UobiwxKX0sRC5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKG4sZSx0KXt2YXIgaSxyPXRoaXM7dm9pZCAwPT09dCYmKHQ9ITEpLHQ9ISF0LE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmxpc3RlbmVycyxuKXx8KHRoaXMubGlzdGVuZXJzW25dPVtdKSx0PyhpPWZ1bmN0aW9uKHQpe3IucmVtb3ZlRXZlbnRMaXN0ZW5lci5iaW5kKHIpKG4saSksZSh0KX0sdGhpcy5saXN0ZW5lcnNbbl0ucHVzaChpKSk6dGhpcy5saXN0ZW5lcnNbbl0ucHVzaChlKX0sRC5kaXNwYXRjaEV2ZW50PWZ1bmN0aW9uKHQsbil7dm9pZCAwPT09biYmKG49e30pLCF0aGlzLmRlYnVnfHx3aW5kb3cucHJvY2VzcyYmd2luZG93LnByb2Nlc3MuZW52JiYidGVzdCI9PT13aW5kb3cucHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fGNvbnNvbGUuaW5mbyh0LG4pO2Zvcih2YXIgZT1PYmplY3Qua2V5cyh0aGlzLmxpc3RlbmVycyksaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgcj1lW2ldO2lmKHQ9PT1yKWZvcih2YXIgbz10aGlzLmxpc3RlbmVyc1tyXSxhPTA7YTxvLmxlbmd0aDthKyspb1thXShsKGwoe30sdGhpcy5kYXRhQW5ub3RhdGlvbnMpLG4pKX19LEQuc2V0RGVidWc9ZnVuY3Rpb24odCl7dGhpcy5kZWJ1Zz10fSxELnNldERhdGFBbm5vdGF0aW9ucz1mdW5jdGlvbih0KXt0aGlzLmRhdGFBbm5vdGF0aW9ucz1sKGwoe30sdGhpcy5kYXRhQW5ub3RhdGlvbnMpLHQpfSxELmdldERhdGFBbm5vdGF0aW9ucz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGFBbm5vdGF0aW9uc30sRC5jbGVhckFubm90YXRpb25zPWZ1bmN0aW9uKCl7dGhpcy5kYXRhQW5ub3RhdGlvbnM9e319LEQubGlzdGVuZXJzPXt9LEQuZGVidWc9ITEsRC5kYXRhQW5ub3RhdGlvbnM9e30sRCksbT0oUC5zZW5kTWVzc2FnZT1mdW5jdGlvbih0LG4pe3ZvaWQgMD09PW4mJihuPXt9KTt2YXIgZT13aW5kb3cucGFyZW50O2lmKCFzKHQseS5tZXNzYWdlKSl7dmFyIGk9T2JqZWN0LmtleXMoeS5tZXNzYWdlKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuInBva2kubWVzc2FnZS4iK3R9KTt0aHJvdyBuZXcgVHlwZUVycm9yKCJBcmd1bWVudCAndHlwZScgbXVzdCBiZSBvbmUgb2YgIitpLmpvaW4oIiwgIikpfWUucG9zdE1lc3NhZ2Uoe3R5cGU6dCxjb250ZW50Om59LCIqIil9LFApLHA9ZnVuY3Rpb24obil7dmFyIGU9bmV3IEFycmF5O3JldHVybiBPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKHQpeyJvYmplY3QiPT10eXBlb2Ygblt0XT9lPWUuY29uY2F0KHAoblt0XSkpOmUucHVzaChuW3RdKX0pLGV9LGY9cCh5LnRyYWNraW5nKSxrPShCLnNldERlYnVnPWZ1bmN0aW9uKHQpe3RoaXMuZGVidWc9dH0sQi50cmFjaz1mdW5jdGlvbih0LG4pe2lmKHZvaWQgMD09PW4mJihuPXt9KSwtMT09PWYuaW5kZXhPZih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkICdldmVudCcsIG11c3QgYmUgb25lIG9mICIrZi5qb2luKCIsICIpKTtpZigib2JqZWN0IiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBkYXRhLCBtdXN0IGJlIGFuIG9iamVjdCIpO2lmKHRoaXMuZGVidWcpe2lmKHdpbmRvdy5wcm9jZXNzJiZ3aW5kb3cucHJvY2Vzcy5lbnYmJiJ0ZXN0Ij09PXdpbmRvdy5wcm9jZXNzLmVudi5OT0RFX0VOVilyZXR1cm47T2JqZWN0LmtleXMobikubGVuZ3RoP2NvbnNvbGUuaW5mbygiJWNQT0tJX1RSQUNLRVI6ICVjVHJhY2tlZCBldmVudCAnIit0KyInIHdpdGggZGF0YToiLCJmb250LXdlaWdodDogYm9sZCIsIiIsbik6Y29uc29sZS5pbmZvKCIlY1BPS0lfVFJBQ0tFUjogJWNUcmFja2VkIGV2ZW50ICciK3QrIiciLCJmb250LXdlaWdodDogYm9sZCIsIiIpfW0uc2VuZE1lc3NhZ2UoeS5tZXNzYWdlLmV2ZW50LHtldmVudDp0LGRhdGE6bn0pfSxCLnNldHVwRGVmYXVsdEV2ZW50cz1mdW5jdGlvbigpe3ZhciB0LGU9KCh0PXt9KVt5LnJlYWR5XT15LnRyYWNraW5nLnNkay5zdGF0dXMuaW5pdGlhbGl6ZWQsdFt5LmFkYmxvY2tlZF09eS50cmFja2luZy5zZGsuc3RhdHVzLmZhaWxlZCx0W3kuYWRzLmJ1c3ldPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5idXN5LHRbeS5hZHMuY29tcGxldGVkXT15LnRyYWNraW5nLmFkcy5zdGF0dXMuY29tcGxldGVkLHRbeS5hZHMuZXJyb3JdPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5lcnJvcix0W3kuYWRzLmRpc3BsYXlFcnJvcl09eS50cmFja2luZy5hZHMuc3RhdHVzLmRpc3BsYXlFcnJvcix0W3kuYWRzLmltcHJlc3Npb25dPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5pbXByZXNzaW9uLHRbeS5hZHMubGltaXRdPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5saW1pdCx0W3kuYWRzLnJlYWR5XT15LnRyYWNraW5nLmFkcy5zdGF0dXMucmVhZHksdFt5LmFkcy5yZXF1ZXN0ZWRdPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5yZXF1ZXN0ZWQsdFt5LmFkcy5wcmViaWRSZXF1ZXN0ZWRdPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5wcmViaWRSZXF1ZXN0ZWQsdFt5LmFkcy5za2lwcGVkXT15LnRyYWNraW5nLmFkcy5zdGF0dXMuc2tpcHBlZCx0W3kuYWRzLnN0YXJ0ZWRdPXkudHJhY2tpbmcuYWRzLnN0YXR1cy5zdGFydGVkLHRbeS5hZHMudmlkZW8uY2xpY2tlZF09eS50cmFja2luZy5hZHMudmlkZW8uY2xpY2tlZCx0W3kuYWRzLnZpZGVvLmVycm9yXT15LnRyYWNraW5nLmFkcy52aWRlby5lcnJvcix0W3kuYWRzLnZpZGVvLmxvYWRlckVycm9yXT15LnRyYWNraW5nLmFkcy52aWRlby5sb2FkZXJFcnJvcix0W3kuYWRzLnZpZGVvLmJ1ZmZlcmluZ109eS50cmFja2luZy5hZHMuc3RhdHVzLmJ1ZmZlcmluZyx0W3kudHJhY2tpbmcuc2NyZWVuLmdhbWVwbGF5U3RhcnRdPXkudHJhY2tpbmcuc2NyZWVuLmdhbWVwbGF5U3RhcnQsdFt5LnRyYWNraW5nLnNjcmVlbi5nYW1lcGxheVN0b3BdPXkudHJhY2tpbmcuc2NyZWVuLmdhbWVwbGF5U3RvcCx0W3kudHJhY2tpbmcuc2NyZWVuLmxvYWRpbmdQcm9ncmVzc109eS50cmFja2luZy5zY3JlZW4ubG9hZGluZ1Byb2dyZXNzLHRbeS50cmFja2luZy5zY3JlZW4uY29tbWVyY2lhbEJyZWFrXT15LnRyYWNraW5nLnNjcmVlbi5jb21tZXJjaWFsQnJlYWssdFt5LnRyYWNraW5nLnNjcmVlbi5yZXdhcmRlZEJyZWFrXT15LnRyYWNraW5nLnNjcmVlbi5yZXdhcmRlZEJyZWFrLHRbeS50cmFja2luZy5zY3JlZW4uaGFwcHlUaW1lXT15LnRyYWNraW5nLnNjcmVlbi5oYXBweVRpbWUsdCk7T2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihuKXtiLmFkZEV2ZW50TGlzdGVuZXIobixmdW5jdGlvbih0KXtCLnRyYWNrKGVbbl0sdCl9KX0pfSxCLmRlYnVnPSExLEIpLHY9e2FkVGFnVXJsOiIvL3B1YmFkcy5nLmRvdWJsZWNsaWNrLm5ldC9nYW1wYWQvYWRzP3N6PTY0MHgzNjB8NjQweDQ4MCZpdT0vMTA1MzU1MS9QdWItUG9raS1HZW5lcmljJmNpdV9zenMmaW1wbD1zJmdkZnBfcmVxPTEmZW52PXZwJm91dHB1dD14bWxfdmFzdDImdW52aWV3ZWRfcG9zaXRpb25fc3RhcnQ9MSZ1cmw9e3VybH0mZGVzY3JpcHRpb25fdXJsPXtkZXNjcmlwdGlvblVybH0mY29ycmVsYXRvcj17dGltZXN0YW1wfSIsYWRUaW1pbmc6e3ByZXJvbGw6ITEsdGltZUJldHdlZW5BZHM6MTJlNCx0aW1lUGVyVHJ5OjdlMyxzdGFydEFkc0FmdGVyOjEyZTR9LHdhdGVyZmFsbFJldHJpZXM6Mixjb3VudHJ5OiJOTCJ9LFM9KF8ucHJvdG90eXBlLnNldFRpbWluZ3M9ZnVuY3Rpb24odCl7dmFyIG49di5hZFRpbWluZyxlPXQucHJlcm9sbCxpPXZvaWQgMD09PWU/bi5wcmVyb2xsOmUscj10LnRpbWVQZXJUcnksZT12b2lkIDA9PT1yP24udGltZVBlclRyeTpyLHI9dC50aW1lQmV0d2VlbkFkcyxyPXZvaWQgMD09PXI/bi50aW1lQmV0d2VlbkFkczpyLHQ9dC5zdGFydEFkc0FmdGVyLHQ9dm9pZCAwPT09dD9uLnN0YXJ0QWRzQWZ0ZXI6dDt0aGlzLnRpbWluZ3M9e3ByZXJvbGw6ITEhPT1pLHRpbWVQZXJUcnk6YShlKSx0aW1lQmV0d2VlbkFkczpyLHN0YXJ0QWRzQWZ0ZXI6dH19LF8ucHJvdG90eXBlLnN0YXJ0VGltZUJldHdlZW5BZHNUaW1lcj1mdW5jdGlvbigpe3RoaXMuc3RhcnRUaW1lcigidGltZUJldHdlZW5BZHMiKX0sXy5wcm90b3R5cGUuc3RhcnRTdGFydEFkc0FmdGVyVGltZXI9ZnVuY3Rpb24oKXt0aGlzLnN0YXJ0VGltZXIoInN0YXJ0QWRzQWZ0ZXIiKX0sXy5wcm90b3R5cGUucmVxdWVzdFBvc3NpYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMudGltZXJzLnRpbWVCZXR3ZWVuQWRzJiYhdGhpcy50aW1lcnMuc3RhcnRBZHNBZnRlcn0sXy5wcm90b3R5cGUuc3RhcnRXYXRlcmZhbGxUaW1lcj1mdW5jdGlvbih0KXt0aGlzLnN0YXJ0VGltZXIoInRpbWVQZXJUcnkiLHQpfSxfLnByb3RvdHlwZS5zdG9wV2F0ZXJmYWxsVGltZXI9ZnVuY3Rpb24oKXt0aGlzLnN0b3BUaW1lcigidGltZVBlclRyeSIpfSxfLnByb3RvdHlwZS5uZXh0V2F0ZXJmYWxsVGltZXI9ZnVuY3Rpb24oKXt0aGlzLm5leHRUaW1pbmcoInRpbWVQZXJUcnkiKX0sXy5wcm90b3R5cGUucmVzZXRXYXRlcmZhbGxUaW1lcklkeD1mdW5jdGlvbigpe3RoaXMucmVzZXRUaW1pbmdJZHgoInRpbWVQZXJUcnkiKX0sXy5wcm90b3R5cGUuc3RvcFRpbWVyPWZ1bmN0aW9uKHQpe3RoaXMudGltZXJzW3RdJiYoY2xlYXJUaW1lb3V0KHRoaXMudGltZXJzW3RdKSx0aGlzLnRpbWVyc1t0XT12b2lkIDApfSxfLnByb3RvdHlwZS5zdGFydFRpbWVyPWZ1bmN0aW9uKHQsbil7dmFyIGU9dGhpczt2b2lkIDA9PT1uJiYobj1mdW5jdGlvbigpe30pLHRoaXMuZ2V0VGltaW5nKHQpPD0wP24oKToodGhpcy50aW1lcnNbdF0mJmNsZWFyVGltZW91dCh0aGlzLnRpbWVyc1t0XSksdGhpcy50aW1lcnNbdF09c2V0VGltZW91dChmdW5jdGlvbigpe2Uuc3RvcFRpbWVyKHQpLG4oKX0sdGhpcy5nZXRUaW1pbmcodCkpKX0sXy5wcm90b3R5cGUuZ2V0VGltaW5nPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMudGltaW5nc1t0XTtyZXR1cm4gbiBpbnN0YW5jZW9mIEFycmF5P25bdGhpcy50aW1pbmdJZHhbdF1dOm59LF8ucHJvdG90eXBlLm5leHRUaW1pbmc9ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dGhpcy50aW1pbmdJZHhbdF0pdGhyb3cgbmV3IEVycm9yKCJBZFRpbWluZ3MgRXJyb3I6ICIrdCsiIGRvZXMgbm90IGhhdmUgbXVsdGlwbGUgdGltZXJzIik7dGhpcy50aW1pbmdJZHhbdF09KHRoaXMudGltaW5nSWR4W3RdKzEpJXRoaXMudGltaW5nc1t0XS5sZW5ndGh9LF8ucHJvdG90eXBlLnJlc2V0VGltaW5nSWR4PWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXRoaXMudGltaW5nSWR4W3RdKXRocm93IG5ldyBFcnJvcigiQWRUaW1pbmdzIEVycm9yOiAiK3QrIiBkb2VzIG5vdCBoYXZlIG11bHRpcGxlIHRpbWVycyIpO3RoaXMudGltaW5nSWR4W3RdPTB9LF8ucHJvdG90eXBlLnByZXJvbGxQb3NzaWJsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRpbWluZ3MucHJlcm9sbH0sXyksRT1mdW5jdGlvbih0LG4pe2lmKCJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93KXJldHVybiIiO3Q9dC5yZXBsYWNlKC9bXFtdLywiXFxbIikucmVwbGFjZSgvW1xdXS8sIlxcXSIpO249bmV3IFJlZ0V4cCgiW1xcPyZdIit0KyI9KFteJiNdKikiKS5leGVjKG58fHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO3JldHVybiBudWxsPT09bj8iIjpkZWNvZGVVUklDb21wb25lbnQoblsxXS5yZXBsYWNlKC9cKy9nLCIgIikpfSx4PXsxOiJlTmpEdzFBVlRyIiwyOiJIa3VRSmFXbkJhIiwzOiJBZlJLQ2x2ZFlrIiw0OiJEYjd1WWJzbmxXIiw1OiJVcHJkWUtlNzRyIiw2OiJlSEZEakQ1bnByIiw3OiJtbTFqU0ZKakxsIiw4OiJ0SjQ0dnBMcHVNIiw5OiJtRjVBU2FnYTRBIiwxMDoicktWOHJNd2l3ayIsMTE6IlN2SzhCSDVxUzUiLDEyOiJxamNhVkdwOEhzIiwxMzoieXN4SWNtdDN0VyIsMTQ6ImZ6NmFLOXdNUWUiLDE1OiJSVTZlYklGTHc5IiwxNjoicjlHNHRWTVl3NyIsMTc6IlNnY0RhNUI4czEiLDE4OiI5d0ROTW5DaHY2IiwxOToiRE5aWDhYZEpYViIsMjA6IjM5bzRZVXlaVFgiLDIxOiI1c2IySEZwejVhIiwyMjoicGdYekNKWmlwRSIsMjM6Ik9hbmk4RUFHSTkiLDI0OiJJekNlaDdkN3ZXIiwyNToiSTV2Uk50am9NciIsMjY6IktweVN2RzdsdXEiLDI3OiJkSzQySjRySTE0IiwyODoiSHVZb3J3M2ZSZyIsMjk6Im1mODRjR1ljMWgiLDMwOiJJMnY2c1FLWFZEIiwzMToibEJ6U2RWR1k4RiIsMzI6ImhLWWdrOVdiOHEiLDMzOiJ4UEJyOEU1NGVFIiwzNDoiWnZJSzJXS0M3RyIsMzU6IjdraVlpM3psSVgiLDM2OiJWcHlnWU1URGdtIiwzNzoibWlzOU10NG5wNCIsMzg6IjQ1MUtKSW9FSWgiLDQxOiJGcW1qcDlIaXQzIiw0MjoibFMyWEdnMDU4TCIsNDM6IjN1RmYyUGxJQ3kiLDQ2OiJ2b2VJcTV1UnZsIiw0NzoiMjFPeWJiaUlkYyIsNDg6IjlpM1J3UEh6V1ciLDQ5OiJDTVZvTXZ2RW11Iiw1MDoiSW9RcmhSYjN3VSJ9LFQ9ZnVuY3Rpb24oKXtyZXR1cm4oVD1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIG4sZT0xLGk9YXJndW1lbnRzLmxlbmd0aDtlPGk7ZSsrKWZvcih2YXIgciBpbiBuPWFyZ3VtZW50c1tlXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKHRbcl09bltyXSk7cmV0dXJuIHR9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGk9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxuPTAsZT1hcmd1bWVudHMubGVuZ3RoO248ZTtuKyspdCs9YXJndW1lbnRzW25dLmxlbmd0aDtmb3IodmFyIGk9QXJyYXkodCkscj0wLG49MDtuPGU7bisrKWZvcih2YXIgbz1hcmd1bWVudHNbbl0sYT0wLHM9by5sZW5ndGg7YTxzO2ErKyxyKyspaVtyXT1vW2FdO3JldHVybiBpfSxyPShvPXBhcnNlSW50KEUoInNpdGVfaWQiKSwxMCl8fDAscj1kKCl8fGcoKXx8aCgpP1sidmlkZW8vbXA0Il06WyJ2aWRlby9tcDQiLCJ2aWRlby93ZWJtIiwidmlkZW8vb2dnIl0se2JpZHM6W3tiaWRkZXI6ImFwcG5leHVzIixwYXJhbXM6VChUKHtwbGFjZW1lbnRJZDoxMzE4NDI1MCxtYXhkdXJhdGlvbjoxNX0sbj17YWxsb3dTbWFsbGVyU2l6ZXM6ITAsZnJhbWV3b3JrczpbMl0saDo0ODAsdzo2NDAsdmlkZW86e3BsYXliYWNrX21ldGhvZDpbImF1dG9fcGxheV9zb3VuZF9vbiIsImF1dG9fcGxheV9zb3VuZF9vZmYiLCJhdXRvX3BsYXlfc291bmRfdW5rbm93biJdfX0pLHt2aWRlbzpUKFQoe30sbi52aWRlbykse3NraXBwYWJsZTohMH0pfSl9LHtiaWRkZXI6ImFwcG5leHVzIixwYXJhbXM6VChUKHtwbGFjZW1lbnRJZDoxMzE4NDMwOSxtYXhkdXJhdGlvbjoxNX0sbikse3ZpZGVvOlQoVCh7fSxuLnZpZGVvKSx7c2tpcHBhYmxlOiExLG1heGR1cmF0aW9uOjE1fSl9KX0se2JpZGRlcjoib3BlbngiLHBhcmFtczp7dW5pdDoiNTQwMTA1MTk2IixkZWxEb21haW46InBva2ktZC5vcGVueC5uZXQiLG9wZW5ydGI6e2ltcDpbe3ZpZGVvOnttaW1lczpbci5qb2luKCIsIildLHByb3RvY29sczpbMiwzLDUsNiw3LDhdLG1heGR1cmF0aW9uOjE1LHNraXA6MSxza2lwYWZ0ZXI6NSx3OjY0MCxoOjQ4MH19XX19fSx7YmlkZGVyOiJvcGVueCIscGFyYW1zOnt1bml0OiI1NDA3MTkwNjUiLGRlbERvbWFpbjoicG9raS1kLm9wZW54Lm5ldCIsb3BlbnJ0Yjp7aW1wOlt7dmlkZW86e21pbWVzOltyLmpvaW4oIiwiKV0scHJvdG9jb2xzOlsyLDMsNSw2LDcsOF0sbWF4ZHVyYXRpb246MTUsc2tpcDowLHc6NjQwLGg6NDgwfX1dfX19LHtiaWRkZXI6ImRpc3RyaWN0bSIscGFyYW1zOlQoVCh7cGxhY2VtZW50SWQ6MTI5MDY3ODksbWF4ZHVyYXRpb246MTV9LG4pLHt2aWRlbzpUKFQoe30sbi52aWRlbykse3NraXBwYWJsZTohMSxtYXhkdXJhdGlvbjoxNX0pfSl9LHtiaWRkZXI6InNwb3R4IixwYXJhbXM6e2NoYW5uZWxfaWQ6IjI2NTU5MCIsYWRfdW5pdDoiaW5zdHJlYW0iLHNlY3VyZTohMCxtaW1lczpyLGhpZGVfc2tpbjohMH19LHtiaWRkZXI6Iml4IixwYXJhbXM6e3NpdGVJZDoiNDM2Mjg0IixzaXplOls2NDAsNDgwXSx2aWRlbzp7bWltZXM6cixwcm90b2NvbHM6WzIsMyw1LDYsNyw4XSxtaW5kdXJhdGlvbjowLG1heGR1cmF0aW9uOjE1LGFwaTpbMSwyXX19fSx7YmlkZGVyOiJyaWNoYXVkaWVuY2UiLHBhcmFtczp7cGlkOnhbb118fCIiLHN1cHBseVR5cGU6InNpdGUifX1dLG1lZGlhVHlwZXM6e3ZpZGVvOntjb250ZXh0OiJpbnN0cmVhbSIscGxheWVyU2l6ZTpbNjQwLDQ4MF0sbWltZXM6cixwcm90b2NvbHM6WzIsMyw1LDYsNyw4XSxtYXhkdXJhdGlvbjoxNSxza2lwOjEsbGluZWFyaXR5OjEsYXBpOlsyXX19fSksej1be2NvZGU6InZpZGVvIixtZWRpYVR5cGVzOnIubWVkaWFUeXBlcyxiaWRzOmkoci5iaWRzLFt7YmlkZGVyOiJydWJpY29uIixwYXJhbXM6e2FjY291bnRJZDoiMTg2MDgiLHNpdGVJZDoiMjY2OTE0Iix6b25lSWQ6IjEzMjIwMzQiLHZpZGVvOntzaXplX2lkOjIwNH19fV0pfSx7Y29kZToicmV3YXJkZWQiLG1lZGlhVHlwZXM6ci5tZWRpYVR5cGVzLGJpZHM6aShyLmJpZHMsW3tiaWRkZXI6InJ1Ymljb24iLHBhcmFtczp7YWNjb3VudElkOiIxODYwOCIsc2l0ZUlkOiIyNjY5MTYiLHpvbmVJZDoiMTMyMjA0OCIsdmlkZW86e3NpemVfaWQ6MjAyfX19XSl9XSxyPXtFVVI6e0VVUjoxLEdCUDouODU4NTk1LFVTRDoxLjEzMTUxfSxHQlA6e0VVUjoxLjE2NDY5MzQ4MTc5MjkyOSxHQlA6MSxVU0Q6MS4zMTc4NjIzMjE1ODM1MTcyfSxVU0Q6e0VVUjouODgzNzc0Nzc4ODM1MzYxNixHQlA6Ljc1ODgwNDYwNjIzNDE0NzIsVVNEOjF9fSxDPXtkZWJ1ZzohMSxlbmFibGVTZW5kQWxsQmlkczohMCx1c2VQcmViaWRDYWNoZTohMCxiaWRkZXJUaW1lb3V0OjE1MDAscHJpY2VHcmFudWxhcml0eTp7YnVja2V0czpbe3ByZWNpc2lvbjoyLG1pbjouMDEsbWF4OjMsaW5jcmVtZW50Oi4wMX0se3ByZWNpc2lvbjoyLG1pbjozLG1heDo4LGluY3JlbWVudDouMDV9LHtwcmVjaXNpb246MixtaW46OCxtYXg6MjAsaW5jcmVtZW50Oi41fSx7cHJlY2lzaW9uOjIsbWluOjIwLG1heDo0NSxpbmNyZW1lbnQ6MX1dfSxjdXJyZW5jeTp7YWRTZXJ2ZXJDdXJyZW5jeToiRVVSIixyYXRlczpyLGRlZmF1bHRSYXRlczpyLGJpZGRlckN1cnJlbmN5RGVmYXVsdDp7b3Blbng6IkVVUiJ9fSxjYWNoZTp7dXJsOiJodHRwczovL3ByZWJpZC5hZG54cy5jb20vcGJjL3YxL2NhY2hlIn0sdXNlclN5bmM6e2ZpbHRlclNldHRpbmdzOnthbGw6e2JpZGRlcnM6IioiLGZpbHRlcjoiaW5jbHVkZSJ9fSxzeW5jc1BlckJpZGRlcjoxZTMsc3luY0RlbGF5OjEwMCx1c2VySWRzOlt7bmFtZToicHViQ29tbW9uSWQiLHN0b3JhZ2U6e3R5cGU6ImNvb2tpZSIsbmFtZToicG9raV9wdWJjaWQiLGV4cGlyZXM6MzY1fX1dfX0sST0hMTtmdW5jdGlvbiBfKHQpe3ZvaWQgMD09PXQmJih0PXt9KSx0aGlzLnNldFRpbWluZ3ModCksdGhpcy50aW1pbmdJZHg9e3RpbWVQZXJUcnk6MH0sdGhpcy50aW1lcnM9e3RpbWVQZXJUcnk6dm9pZCAwLHRpbWVCZXR3ZWVuQWRzOnZvaWQgMCxzdGFydEFkc0FmdGVyOnZvaWQgMH0sYi5hZGRFdmVudExpc3RlbmVyKHkuYWRzLnJlcXVlc3RlZCx0aGlzLnN0YXJ0VGltZUJldHdlZW5BZHNUaW1lci5iaW5kKHRoaXMpKSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMuY29tcGxldGVkLHRoaXMuc3RhcnRUaW1lQmV0d2VlbkFkc1RpbWVyLmJpbmQodGhpcykpLGIuYWRkRXZlbnRMaXN0ZW5lcih5LmFkcy5zdG9wcGVkLHRoaXMuc3RhcnRUaW1lQmV0d2VlbkFkc1RpbWVyLmJpbmQodGhpcykpfWZ1bmN0aW9uIEIoKXt9ZnVuY3Rpb24gUCgpe31mdW5jdGlvbiBEKCl7fXZhciBMPShHLnByb3RvdHlwZS5tb3ZlVGhyb3VnaFdhdGVyZmFsbD1mdW5jdGlvbigpe2lmKCExIT09dGhpcy5ydW5uaW5nKXtpZih0aGlzLnRpbWluZy5zdG9wV2F0ZXJmYWxsVGltZXIoKSx0aGlzLnJldHJpZXM8dGhpcy50b3RhbFJldHJpZXMpcmV0dXJuIHRoaXMudGltaW5nLm5leHRXYXRlcmZhbGxUaW1lcigpLHZvaWQgdGhpcy5yZXF1ZXN0QWQoKTt0aGlzLnJ1bm5pbmc9ITEsdGhpcy50aW1pbmcucmVzZXRXYXRlcmZhbGxUaW1lcklkeCgpLGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5lcnJvcix7bWVzc2FnZToiTm8gYWRzIn0pfX0sRy5wcm90b3R5cGUuY3V0T2ZmV2F0ZXJmYWxsPWZ1bmN0aW9uKCl7dGhpcy5pbWEudGVhckRvd24oKSx0aGlzLm1vdmVUaHJvdWdoV2F0ZXJmYWxsKCl9LEcucHJvdG90eXBlLmJ1aWxkQWRUYWdVcmxzPWZ1bmN0aW9uKHQpe3ZhciBuPSImY2l1X3N6cyZpbXBsPXMmZ2RmcF9yZXE9MSZlbnY9dnAmb3V0cHV0PXZhc3QmdW52aWV3ZWRfcG9zaXRpb25fc3RhcnQ9MSZ1cmw9e3VybH0mZGVzY3JpcHRpb25fdXJsPXtkZXNjcmlwdGlvblVybH0mY29ycmVsYXRvcj17dGltZXN0YW1wfSI7aWYodGhpcy5kZWJ1Zyl7dmFyIGU9Imh0dHBzOi8vc2VjdXJlcHViYWRzLmcuZG91YmxlY2xpY2submV0L2dhbXBhZC9hZHM/c3o9NjQweDM2MHw2NDB4NDgwJml1PS8yMTY4MjE5ODYwNy9kZWJ1Zy12aWRlby8iO3JldHVybiB0PT09eS5hZHMucG9zaXRpb24ucmV3YXJkZWQ/W2UrImRlYnVnLXZpZGVvLXJld2FyZGVkIituXTp0PT09eS5hZHMucG9zaXRpb24ucHJlcm9sbD9bZSsiZGVidWctdmlkZW8tcHJlcm9sbCIrbl06W2UrImRlYnVnLXZpZGVvLW1pZHJvbGwiK25dfWlmKDA8dGhpcy5vdmVyd3JpdGVBZFRhZ1VybHMubGVuZ3RoJiZsdC5HZXRJc1Bva2lQbGF0Zm9ybSgpKXJldHVybiB0aGlzLm92ZXJ3cml0ZUFkVGFnVXJsczt2YXIgaT0iZGVza3RvcCIsZT0ibWlkcm9sbCI7ZygpP2k9Im1vYmlsZSI6aCgpJiYoaT0idGFibGV0IiksdD09PXkuYWRzLnBvc2l0aW9uLnJld2FyZGVkJiYoZT0icmV3YXJkZWQiKTt0PSJodHRwczovL3NlY3VyZXB1YmFkcy5nLmRvdWJsZWNsaWNrLm5ldC9nYW1wYWQvYWRzP3N6PTY0MHgzNjB8NjQweDQ4MCZpdT0vMjE2ODIxOTg2MDcvIjtyZXR1cm4gbHQuR2V0SXNQb2tpSUZyYW1lKCk/W3QraSsiX2luZ2FtZV8iK2UrIl8xLyIrdGhpcy5zaXRlSUQrIl8iK2krIl9pbmdhbWVfIitlKyJfMSIrbix0K2krIl9pbmdhbWVfIitlKyJfMi8iK3RoaXMuc2l0ZUlEKyJfIitpKyJfaW5nYW1lXyIrZSsiXzIiK25dOlt0KyJleHRlcm5hbF8iK2krIl92aWRlb18xL2V4dGVybmFsXyIraSsiX2luZ2FtZV8iK2UrIl8xIituLHQrImV4dGVybmFsXyIraSsiX3ZpZGVvXzIvZXh0ZXJuYWxfIitpKyJfaW5nYW1lXyIrZSsiXzIiK25dfSxHLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbih0LG4pe3ZvaWQgMD09PXQmJih0PXt9KSx0aGlzLnJ1bm5pbmc9ITAsdGhpcy5yZXRyaWVzPTAsdGhpcy5jcml0ZXJpYT10LHRoaXMudGltaW5nLnJlc2V0V2F0ZXJmYWxsVGltZXJJZHgoKSx0aGlzLnJld2FyZGVkPW49PT15LmFkcy5wb3NpdGlvbi5yZXdhcmRlZCx0aGlzLmFkVGFnVXJscz10aGlzLmJ1aWxkQWRUYWdVcmxzKG4pLHRoaXMucmVxdWVzdEFkKCl9LEcucHJvdG90eXBlLnJlcXVlc3RBZD1mdW5jdGlvbigpe3RoaXMudGltaW5nLnN0YXJ0V2F0ZXJmYWxsVGltZXIodGhpcy5jdXRPZmZXYXRlcmZhbGwuYmluZCh0aGlzKSksdGhpcy5yZXRyaWVzKyssbHQuR2V0SXNQb2tpUGxhdGZvcm0oKXx8KHRoaXMuY3JpdGVyaWEud2F0ZXJmYWxsPXRoaXMucmV0cmllcyk7dmFyIHQ9KHRoaXMucmV0cmllcy0xKSV0aGlzLmFkVGFnVXJscy5sZW5ndGgsbj10aGlzLmFkVGFnVXJsc1t0XTtsdC5jb25zZW50U3RyaW5nJiYwPGx0LmNvbnNlbnRTdHJpbmcubGVuZ3RoJiYodGhpcy5jcml0ZXJpYS5jb25zZW50X3N0cmluZz1sdC5jb25zZW50U3RyaW5nKTt2YXIgZSxpLHIsbyxhLHMsZCxjLHUsbCxuPSh0PW4sbj1BKCkuc3BsaXQoIj8iKSxuPWVuY29kZVVSSUNvbXBvbmVudChuWzBdKSwodD10LnNwbGl0KCJ7ZGVzY3JpcHRpb25Vcmx9Iikuam9pbihuKSkuc3BsaXQoInt0aW1lc3RhbXB9Iikuam9pbigobmV3IERhdGUpLmdldFRpbWUoKS50b1N0cmluZygpKSsoZT10aGlzLmNyaXRlcmlhLGk9IiIsT2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgbjtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSYmKG49ZVt0XSxBcnJheS5pc0FycmF5KG4pJiYobj1uLmpvaW4oKSksaSs9dCsiPSIrbisiJiIpfSksIiZjdXN0X3BhcmFtcz0iKyhpPWVuY29kZVVSSUNvbXBvbmVudChpKSkrIiYiKSk7bHQuY2hpbGREaXJlY3RlZCYmKG4rPSImdGZjZD0xIiksbHQubm9uUGVyc29uYWxpemVkJiYobis9IiZucGE9MSIpLGIuc2V0RGF0YUFubm90YXRpb25zKHthZFRhZ1VybDpuLHdhdGVyZmFsbDp0aGlzLnJldHJpZXN9KSxiLmRpc3BhdGNoRXZlbnQoeS5hZHMucmVxdWVzdGVkKSwxIT09dGhpcy5yZXRyaWVzfHxnKCl8fGgoKT8oY29uc29sZS5kZWJ1ZygiYWRSZXF1ZXN0IHN0YXJ0ZWQgaW4gcGxhaW4gbW9kZSIpLHRoaXMuaW1hLnJlcXVlc3RBZChuKSk6KGNvbnNvbGUuZGVidWcoImFkUmVxdWVzdCBzdGFydGVkIHdpdGggUHJlYmlkIFZpZGVvIGVuYWJsZWQiKSxyPXRoaXMuaW1hLG89bixhPXRoaXMuY3JpdGVyaWEsdD10aGlzLnJld2FyZGVkLHdpbmRvdy5wYmpzJiZ3aW5kb3cucGJqcy5xdWUmJndpbmRvdy5wYmpzLmdldENvbmZpZz8obj1BKCkuc3BsaXQoIj8iKSxkPWVuY29kZVVSSUNvbXBvbmVudChuWzBdKSxjPXQ/InJld2FyZGVkIjoidmlkZW8iLHU9MSxsPWZ1bmN0aW9uKCl7aWYoISgwPC0tdSkpdHJ5e2IuZGlzcGF0Y2hFdmVudCh5LmFkcy5wcmViaWRSZXF1ZXN0ZWQpO3ZhciB0PXdpbmRvdy5wYmpzLmFkVW5pdHMuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvZGU9PT1jfSlbMF07aWYoInVuZGVmaW5lZCI9PT10KXJldHVybiBjb25zb2xlLmVycm9yKCJWaWRlby1hZC11bml0IG5vdCBmb3VuZCwgZGlkIHlvdSBnaXZlIGl0IHRoZSBhZHVuaXQuY29kZT0ndmlkZW8nIHZhbHVlPyIpLHZvaWQgci5yZXF1ZXN0QWQobyk7dD13aW5kb3cucGJqcy5hZFNlcnZlcnMuZGZwLmJ1aWxkVmlkZW9Vcmwoe2FkVW5pdDp0LHBhcmFtczp7aXU6RSgiaXUiLG8pLHN6OiI2NDB4MzYwfDY0MHg0ODAiLG91dHB1dDoidmFzdCIsY3VzdF9wYXJhbXM6YSxkZXNjcmlwdGlvbl91cmw6ZH19KTt3aW5kb3cucGJqcy5tYXJrV2lubmluZ0JpZEFzVXNlZCh7YWRVbml0Q29kZTpjfSkscyYmKHQ9dC5yZXBsYWNlKCJjdXN0X3BhcmFtcz0iLCJjdXN0X3BhcmFtcz0iK3MrIiUyNiIpKSxyLnJlcXVlc3RBZCh0KX1jYXRjaCh0KXtyLnJlcXVlc3RBZChvKX19LEkmJih1Kyssd2luZG93LmFwc3RhZy5mZXRjaEJpZHMoe3Nsb3RzOlt7c2xvdElEOnQ/IlJld2FyZGVkIjoiTWlkcm9sbCIsbWVkaWFUeXBlOiJ2aWRlbyJ9XSx0aW1lb3V0OkMuYmlkZGVyVGltZW91dH0sZnVuY3Rpb24odCl7MDx0Lmxlbmd0aCYmKHM9dFswXS5lbmNvZGVkUXNQYXJhbXMpLGwoKX0pKSx3aW5kb3cucGJqcy5xdWUucHVzaChmdW5jdGlvbigpe3dpbmRvdy5wYmpzLnJlcXVlc3RCaWRzKHthZFVuaXRDb2RlczpbY10sYmlkc0JhY2tIYW5kbGVyOmZ1bmN0aW9uKCl7bCgpfX0pfSkpOnIucmVxdWVzdEFkKG8pKX0sRy5wcm90b3R5cGUuaXNSdW5uaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucnVubmluZ30sRy5wcm90b3R5cGUuc3RvcFdhdGVyZmFsbD1mdW5jdGlvbigpe3RoaXMucnVubmluZz0hMSx0aGlzLnRpbWluZy5zdG9wV2F0ZXJmYWxsVGltZXIoKSx0aGlzLnRpbWluZy5yZXNldFdhdGVyZmFsbFRpbWVySWR4KCl9LEcucHJvdG90eXBlLnNldERlYnVnPWZ1bmN0aW9uKHQpe3RoaXMuZGVidWc9dH0sRyksTz0icG9raVNka1Zpc2libGUiLGo9KFoucHJvdG90eXBlLnNldHVwRXZlbnRzPWZ1bmN0aW9uKHQpe3RoaXMuaW50ZXJuYWxTREs9dH0sWi5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbigpe3RoaXMuaGlkZUVsZW1lbnQodGhpcy5jb250YWluZXJEaXYpLHRoaXMuaGlkZUVsZW1lbnQodGhpcy5wcm9ncmVzc0NvbnRhaW5lciksdGhpcy5oaWRlUGF1c2VCdXR0b24oKSx0aGlzLmhpZGVFbGVtZW50KHRoaXMuc3RhcnRBZEJ1dHRvbiksdGhpcy5jb250YWluZXJEaXYuY2xhc3NMaXN0LnJlbW92ZSgicG9raVNka092ZXJsYXkiKSx0aGlzLnByb2dyZXNzQmFyLnN0eWxlLndpZHRoPSIwJSJ9LFoucHJvdG90eXBlLmhpZGVTcGlubmVyPWZ1bmN0aW9uKCl7dGhpcy5oaWRlRWxlbWVudCh0aGlzLnNwaW5uZXJDb250YWluZXIpfSxaLnByb3RvdHlwZS5zaG93V2l0aE9wYWNpdHk9ZnVuY3Rpb24oKXt0aGlzLnNob3dFbGVtZW50KHRoaXMuc3Bpbm5lckNvbnRhaW5lciksdGhpcy5zaG93RWxlbWVudCh0aGlzLmNvbnRhaW5lckRpdiksdGhpcy5zaG93RWxlbWVudCh0aGlzLnByb2dyZXNzQ29udGFpbmVyKX0sWi5wcm90b3R5cGUuc2hvdz1mdW5jdGlvbigpe3RoaXMuY29udGFpbmVyRGl2LmNsYXNzTGlzdC5hZGQoInBva2lTZGtPdmVybGF5IiksdGhpcy5zaG93RWxlbWVudCh0aGlzLmNvbnRhaW5lckRpdiksdGhpcy5zaG93RWxlbWVudCh0aGlzLnByb2dyZXNzQ29udGFpbmVyKX0sWi5wcm90b3R5cGUuZ2V0VmlkZW9Cb3VuZHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hZENvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX0sWi5wcm90b3R5cGUuZ2V0QWRDb250YWluZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hZENvbnRhaW5lcn0sWi5wcm90b3R5cGUuZ2V0VmlkZW9Db250YWluZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52aWRlb0NvbnRhaW5lcn0sWi5wcm90b3R5cGUuc2hvd1BhdXNlQnV0dG9uPWZ1bmN0aW9uKCl7dGhpcy5zaG93RWxlbWVudCh0aGlzLnBhdXNlQnV0dG9uKSx0aGlzLmludGVybmFsU0RLJiZ0aGlzLnBhdXNlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLmludGVybmFsU0RLLnJlc3VtZUFkLmJpbmQodGhpcy5pbnRlcm5hbFNESykpfSxaLnByb3RvdHlwZS5oaWRlUGF1c2VCdXR0b249ZnVuY3Rpb24oKXt0aGlzLmhpZGVFbGVtZW50KHRoaXMucGF1c2VCdXR0b24pLHRoaXMuaW50ZXJuYWxTREsmJnRoaXMucGF1c2VCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcigiY2xpY2siLHRoaXMuaW50ZXJuYWxTREsucmVzdW1lQWQuYmluZCh0aGlzLmludGVybmFsU0RLKSl9LFoucHJvdG90eXBlLnNob3dTdGFydEFkQnV0dG9uPWZ1bmN0aW9uKCl7dGhpcy5zaG93RWxlbWVudCh0aGlzLnN0YXJ0QWRCdXR0b24pLHRoaXMuaW50ZXJuYWxTREsmJnRoaXMuc3RhcnRBZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsdGhpcy5pbnRlcm5hbFNESy5zdGFydEFkQ2xpY2tlZC5iaW5kKHRoaXMuaW50ZXJuYWxTREspKX0sWi5wcm90b3R5cGUuaGlkZVN0YXJ0QWRCdXR0b249ZnVuY3Rpb24oKXt0aGlzLmhpZGVFbGVtZW50KHRoaXMuc3RhcnRBZEJ1dHRvbiksdGhpcy5pbnRlcm5hbFNESyYmdGhpcy5zdGFydEFkQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoImNsaWNrIix0aGlzLmludGVybmFsU0RLLnN0YXJ0QWRDbGlja2VkLmJpbmQodGhpcy5pbnRlcm5hbFNESykpfSxaLnByb3RvdHlwZS5jcmVhdGVFbGVtZW50cz1mdW5jdGlvbigpe3ZhciB0O3RoaXMuY29udGFpbmVyRGl2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMuaW5zaWRlQ29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMucGF1c2VCdXR0b249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksdGhpcy5zdGFydEFkQnV0dG9uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLHRoaXMucHJvZ3Jlc3NCYXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksdGhpcy5wcm9ncmVzc0NvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSx0aGlzLnNwaW5uZXJDb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksdGhpcy5hZENvbnRhaW5lcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSx0aGlzLnZpZGVvQ29udGFpbmVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInZpZGVvIiksdGhpcy5hZENvbnRhaW5lci5pZD0icG9raVNES0FkQ29udGFpbmVyIix0aGlzLnZpZGVvQ29udGFpbmVyLmlkPSJwb2tpU0RLVmlkZW9Db250YWluZXIiLHRoaXMuY29udGFpbmVyRGl2LmNsYXNzTmFtZT0icG9raVNka0NvbnRhaW5lciIsdGhpcy5pbnNpZGVDb250YWluZXIuY2xhc3NOYW1lPSJwb2tpU2RrSW5zaWRlQ29udGFpbmVyIix0aGlzLnBhdXNlQnV0dG9uLmNsYXNzTmFtZT0icG9raVNka1BhdXNlQnV0dG9uIix0aGlzLnBhdXNlQnV0dG9uLmlubmVySFRNTD0iVGFwIGFueXdoZXJlIHRvIOKWtu+4jyIsdGhpcy5zdGFydEFkQnV0dG9uLmNsYXNzTmFtZT0icG9raVNka1N0YXJ0QWRCdXR0b24iLHRoaXMuc3RhcnRBZEJ1dHRvbi5pbm5lckhUTUw9IlRhcCBhbnl3aGVyZSB0byBwbGF5IGFkIix0aGlzLnByb2dyZXNzQmFyLmNsYXNzTmFtZT0icG9raVNka1Byb2dyZXNzQmFyIix0aGlzLnByb2dyZXNzQ29udGFpbmVyLmNsYXNzTmFtZT0icG9raVNka1Byb2dyZXNzQ29udGFpbmVyIix0aGlzLnNwaW5uZXJDb250YWluZXIuY2xhc3NOYW1lPSJwb2tpU2RrU3Bpbm5lckNvbnRhaW5lciIsdGhpcy5hZENvbnRhaW5lci5jbGFzc05hbWU9InBva2lTREtBZENvbnRhaW5lciIsdGhpcy52aWRlb0NvbnRhaW5lci5jbGFzc05hbWU9InBva2lTZGtWaWRlb0NvbnRhaW5lciIsdGhpcy5zcGlubmVyQ29udGFpbmVyLmlubmVySFRNTD0nXG5cdFx0XHQ8ZGl2IGlkPSJuZXctcHJvZ3Jlc3Mtc3Bpbm5lciIgc3R5bGU9InotaW5kZXg6MTA7cG9zaXRpb246IGFic29sdXRlOyB0b3A6IDUwJTsgbGVmdDogNTAlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZTNkKDAuNSwgMC41LCAwLjUpOyI+XG5cdFx0XHRcdDxkaXYgY2xhc3M9Imd3ZC1kaXYtMXYxcyIgZGF0YS1nd2QtZ3JvdXA9IlNwaW5uZXJHcm91cCI+XG5cdFx0XHRcdFx0PGltZyBzcmM9Imh0dHBzOi8vZ2FtZS1jZG4ucG9raS5jb20vbG9hZGVycy92Mi9zdGF0aWMvc3Bpbm5lci9TcGFya2xlXzEuc3ZnIiBjbGFzcz0iZ3dkLWltZy0xNjUzIGd3ZC1nZW4tbm8wMmd3ZGFuaW1hdGlvbiBnd2QtZ3JwLTEzdGQiIGRhdGEtZ3dkLWdycC1pZD0iU3BhcmtsZV8xIj5cblx0XHRcdFx0XHQ8aW1nIHNyYz0iaHR0cHM6Ly9nYW1lLWNkbi5wb2tpLmNvbS9sb2FkZXJzL3YyL3N0YXRpYy9zcGlubmVyL1NwYXJrbGVfMi5zdmciIGNsYXNzPSJnd2QtaW1nLWFsc20gZ3dkLWdlbi00cHZyZ3dkYW5pbWF0aW9uIGd3ZC1ncnAtMTN0ZCIgZGF0YS1nd2QtZ3JwLWlkPSJTcGFya2xlXzIiPlxuXHRcdFx0XHRcdDxpbWcgc3JjPSJodHRwczovL2dhbWUtY2RuLnBva2kuY29tL2xvYWRlcnMvdjIvc3RhdGljL3NwaW5uZXIvU3BhcmtsZV8zLnN2ZyIgY2xhc3M9Imd3ZC1pbWctZjBtdSBnd2QtZ2VuLWt3NDBnd2RhbmltYXRpb24gZ3dkLWdycC0xM3RkIiBkYXRhLWd3ZC1ncnAtaWQ9IlNwYXJrbGVfMyI+XG5cdFx0XHRcdFx0PGltZyBzcmM9Imh0dHBzOi8vZ2FtZS1jZG4ucG9raS5jb20vbG9hZGVycy92Mi9zdGF0aWMvc3Bpbm5lci9TcGFya2xlXzQuc3ZnIiBjbGFzcz0iZ3dkLWltZy0xc3IzIGd3ZC1nZW4tMnV2OGd3ZGFuaW1hdGlvbiBnd2QtZ3JwLTEzdGQiIGRhdGEtZ3dkLWdycC1pZD0iU3BhcmtsZV80Ij5cblx0XHRcdFx0XHQ8aW1nIHNyYz0iaHR0cHM6Ly9nYW1lLWNkbi5wb2tpLmNvbS9sb2FkZXJzL3YyL3N0YXRpYy9zcGlubmVyL1NwYXJrbGVfNS5zdmciIGNsYXNzPSJnd2QtaW1nLTFmZm4gZ3dkLWdlbi0xeDk3Z3dkYW5pbWF0aW9uIGd3ZC1ncnAtMTN0ZCIgZGF0YS1nd2QtZ3JwLWlkPSJTcGFya2xlXzUiPlxuXHRcdFx0XHRcdDxpbWcgc3JjPSJodHRwczovL2dhbWUtY2RuLnBva2kuY29tL2xvYWRlcnMvdjIvc3RhdGljL3NwaW5uZXIvU3BhcmtsZV82LnN2ZyIgY2xhc3M9Imd3ZC1pbWctMTZmMyBnd2QtZ2VuLTFpMWVnd2RhbmltYXRpb24gZ3dkLWdycC0xM3RkIiBkYXRhLWd3ZC1ncnAtaWQ9IlNwYXJrbGVfNiI+XG5cdFx0XHRcdFx0PGltZyBzcmM9Imh0dHBzOi8vZ2FtZS1jZG4ucG9raS5jb20vbG9hZGVycy92Mi9zdGF0aWMvc3Bpbm5lci9TcGFya2xlXzcuc3ZnIiBjbGFzcz0iZ3dkLWltZy0xcnJzIGd3ZC1nZW4tMXNhcGd3ZGFuaW1hdGlvbiBnd2QtZ3JwLTEzdGQiIGRhdGEtZ3dkLWdycC1pZD0iU3BhcmtsZV83Ij5cblx0XHRcdFx0XHQ8aW1nIHNyYz0iaHR0cHM6Ly9nYW1lLWNkbi5wb2tpLmNvbS9sb2FkZXJzL3YyLjAvc3RhdGljL2hhbmRfZmluZ2Vyc19pc29sYXRlZC5zdmciIGNsYXNzPSJnd2QtaW1nLTFkaGkgZ3dkLWdlbi01cW90Z3dkYW5pbWF0aW9uIGd3ZC1ncnAtMTN0ZCIgZGF0YS1nd2QtZ3JwLWlkPSJoZWFydCI+XG5cdFx0XHRcdFx0PGltZyBzcmM9Imh0dHBzOi8vZ2FtZS1jZG4ucG9raS5jb20vbG9hZGVycy92Mi9zdGF0aWMvc3Bpbm5lci9zaGFkb3dfbmV3XzMuc3ZnIiBjbGFzcz0iZ3dkLWltZy0xaXpnIGd3ZC1nZW4tZmFhZGd3ZGFuaW1hdGlvbiBnd2QtZ3JwLTEzdGQiIGRhdGEtZ3dkLWdycC1pZD0ic2hhZG93X25ld18zIj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQnLHRoaXMuaGlkZSgpLHRoaXMudmlkZW9Db250YWluZXIuc2V0QXR0cmlidXRlKCJwbGF5c2lubGluZSIsInBsYXlzaW5saW5lIiksdGhpcy52aWRlb0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoIm11dGVkIiwibXV0ZWQiKSx0aGlzLmNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZCh0aGlzLmluc2lkZUNvbnRhaW5lciksdGhpcy5jb250YWluZXJEaXYuYXBwZW5kQ2hpbGQodGhpcy5zcGlubmVyQ29udGFpbmVyKSx0aGlzLmluc2lkZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLnByb2dyZXNzQ29udGFpbmVyKSx0aGlzLmluc2lkZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLnZpZGVvQ29udGFpbmVyKSx0aGlzLmluc2lkZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmFkQ29udGFpbmVyKSx0aGlzLmNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZCh0aGlzLnBhdXNlQnV0dG9uKSx0aGlzLmNvbnRhaW5lckRpdi5hcHBlbmRDaGlsZCh0aGlzLnN0YXJ0QWRCdXR0b24pLHRoaXMucHJvZ3Jlc3NDb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5wcm9ncmVzc0JhciksdGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKHRoaXMuY29udGFpbmVyRGl2KSx0aGlzLndyYXBwZXI9PT1kb2N1bWVudC5ib2R5P3RoaXMuY29udGFpbmVyRGl2LmNsYXNzTGlzdC5hZGQoInBva2lTZGtGaXhlZCIpOih0PXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMud3JhcHBlcikucG9zaXRpb24pJiYtMSE9PVsiYWJzb2x1dGUiLCJmaXhlZCIsInJlbGF0aXZlIl0uaW5kZXhPZih0KXx8KHRoaXMud3JhcHBlci5zdHlsZS5wb3NpdGlvbj0icmVsYXRpdmUiKX0sWiksUj0hMCxNPXt9O2Z1bmN0aW9uIFoodCl7dmFyIG49dGhpczt0aGlzLmhpZGVFbGVtZW50PWZ1bmN0aW9uKHQpe3QuY2xhc3NMaXN0LmFkZCgicG9raVNka0hpZGRlbiIpLHQuY2xhc3NMaXN0LnJlbW92ZShPKX0sdGhpcy5zaG93RWxlbWVudD1mdW5jdGlvbih0KXt0LmNsYXNzTGlzdC5hZGQoTyksdC5jbGFzc0xpc3QucmVtb3ZlKCJwb2tpU2RrSGlkZGVuIil9LHRoaXMud3JhcHBlcj10LndyYXBwZXIsYi5hZGRFdmVudExpc3RlbmVyKHkuYWRzLnZpZGVvLnByb2dyZXNzLGZ1bmN0aW9uKHQpe3Q9dC5jdXJyZW50VGltZS90LmR1cmF0aW9uKjEwMDt0PDEwMCYmKG4ucHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGg9dCsiJSIpfSksdGhpcy53cmFwcGVyIGluc3RhbmNlb2YgSFRNTEVsZW1lbnR8fChjb25zb2xlLmVycm9yKCJQT0tJLVNESzogd3JhcHBlciBpcyBub3QgYSBIVE1MRWxlbWVudCwgZmFsbGluZyBiYWNrIHRvIGRvY3VtZW50LmJvZHkiKSx0aGlzLndyYXBwZXI9ZG9jdW1lbnQuYm9keSksdGhpcy5jcmVhdGVFbGVtZW50cygpLCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZkb2N1bWVudCYmKCh0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIikpLmlubmVySFRNTD0iXG5AZm9udC1mYWNlIHtcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xuXHRmb250LWZhbWlseTogJ1Byb3hpbWEgTm92YSc7XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdHNyYzogdXJsKGh0dHBzOi8vYS5wb2tpLmNvbS9mb250cy9wcm94aW1hLW5vdmEtYm9sZC1sYXRpbi53b2ZmMikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoaHR0cHM6Ly9hLnBva2kuY29tL2ZvbnRzL3Byb3hpbWEtbm92YS1ib2xkLWxhdGluLndvZmYpIGZvcm1hdCgnd29mZicpO1xuXHR1bmljb2RlLXJhbmdlOiBVKzAwMjAtMDA3RiwgVSswMEEwLTAwRkZcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZGlzcGxheTogc3dhcDtcblx0Zm9udC1mYW1pbHk6ICdQcm94aW1hIE5vdmEnO1xuXHRmb250LXdlaWdodDogNzAwO1xuXHRzcmM6IHVybChodHRwczovL2EucG9raS5jb20vZm9udHMvcHJveGltYS1ub3ZhLWJvbGQtbGF0aW4tZXh0LWEud29mZjIpIGZvcm1hdCgnd29mZjInKSwgdXJsKGh0dHBzOi8vYS5wb2tpLmNvbS9mb250cy9wcm94aW1hLW5vdmEtYm9sZC1sYXRpbi1leHQtYS53b2ZmKSBmb3JtYXQoJ3dvZmYnKTtcblx0dW5pY29kZS1yYW5nZTogVSswMTAwLTAxN0Zcbn1cblxuQGZvbnQtZmFjZSB7XG5cdGZvbnQtZGlzcGxheTogc3dhcDtcblx0Zm9udC1mYW1pbHk6ICdQcm94aW1hIE5vdmEnO1xuXHRmb250LXdlaWdodDogNzAwO1xuXHRzcmM6IHVybChodHRwczovL2EucG9raS5jb20vZm9udHMvcHJveGltYS1ub3ZhLWJvbGQtbGF0aW4tZXh0LWIud29mZjIpIGZvcm1hdCgnd29mZjInKSwgdXJsKGh0dHBzOi8vYS5wb2tpLmNvbS9mb250cy9wcm94aW1hLW5vdmEtYm9sZC1sYXRpbi1leHQtYi53b2ZmKSBmb3JtYXQoJ3dvZmYnKTtcblx0dW5pY29kZS1yYW5nZTogVSswMTgwLTAyNEZcbn1cblxuLnBva2lTZGtDb250YWluZXIge1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGxlZnQ6IDA7XG5cdHRvcDogMDtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcblx0ei1pbmRleDogMTAwMDtcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5wb2tpU2RrQ29udGFpbmVyLnBva2lTZGtGaXhlZCB7XG5cdHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuLnBva2lTZGtDb250YWluZXIucG9raVNka1Zpc2libGUge1xuXHRkaXNwbGF5OiBibG9jaztcbn1cblxuLnBva2lTZGtDb250YWluZXIucG9raVNka0hpZGRlbiwgLnBva2lTZGtTcGlubmVyQ29udGFpbmVyLnBva2lTZGtIaWRkZW4ge1xuXHRkaXNwbGF5OiBub25lO1xufVxuXG4ucG9raVNka0NvbnRhaW5lci5wb2tpU2RrSGlkZGVuLCAucG9raVNka1NwaW5uZXJDb250YWluZXIsIC5wb2tpU2RrU3Bpbm5lckNvbnRhaW5lciBkaXYsIC5wb2tpU2RrU3Bpbm5lckNvbnRhaW5lciBpbWcge1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLnBva2lTZGtJbnNpZGVDb250YWluZXIge1xuXHRiYWNrZ3JvdW5kOiAjMDAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHotaW5kZXg6IDE7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblx0b3BhY2l0eTogMDtcblx0LXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQ7XG5cdC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2UtaW4tb3V0O1xuXHQtbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjVzIGVhc2UtaW4tb3V0O1xuXHQtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQ7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlLWluLW91dDtcbn1cblxuLnBva2lTZGtDb250YWluZXIucG9raVNka1Zpc2libGUgLnBva2lTZGtJbnNpZGVDb250YWluZXIge1xuXHRvcGFjaXR5OiAxO1xufVxuXG4ucG9raVNES0FkQ29udGFpbmVyLCAucG9raVNka1ZpZGVvQ29udGFpbmVyIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xufVxuXG4ucG9raVNka1N0YXJ0QWRCdXR0b24sIC5wb2tpU2RrUGF1c2VCdXR0b24ge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHotaW5kZXg6IDk5OTk7XG5cdHRvcDogMDtcblxuXHRwYWRkaW5nLXRvcDogMTAlO1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdGNvbG9yOiAjRkZGO1xuXG5cdGZvbnQ6IDcwMCAxNnB0ICdQcm94aW1hIE5vdmEnLCBzYW5zLXNlcmlmO1xuXHRmb250LXdlaWdodDogYm9sZDtcblx0bGV0dGVyLXNwYWNpbmc6IDFweDtcblx0dHJhbnNpdGlvbjogMC4xcyBlYXNlLWluLW91dDtcblx0bGluZS1oZWlnaHQ6IDFlbTtcbn1cblxuLnBva2lTZGtQcm9ncmVzc0NvbnRhaW5lciB7XG5cdGJhY2tncm91bmQ6ICMwMDJCNTA7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDVweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRib3R0b206IDA7XG5cdHotaW5kZXg6IDk5OTk7XG59XG5cbi5wb2tpU2RrUHJvZ3Jlc3NCYXIge1xuXHRwb3NpdGlvbjpyZWxhdGl2ZTtcblx0Ym90dG9tOjBweDtcblx0YmFja2dyb3VuZDogIzAwOUNGRjtcblx0aGVpZ2h0OiAxMDAlO1xuXHR3aWR0aDogMCU7XG5cdHRyYW5zaXRpb246IHdpZHRoIDAuNXM7XG5cdHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG59XG5cbi5wb2tpU2RrUHJvZ3Jlc3NCYXIucG9raVNka1Zpc2libGUsIC5wb2tpU2RrUGF1c2VCdXR0b24ucG9raVNka1Zpc2libGUsIC5wb2tpU2RrU3RhcnRBZEJ1dHRvbi5wb2tpU2RrVmlzaWJsZSB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLnBva2lTZGtQcm9ncmVzc0Jhci5wb2tpU2RrSGlkZGVuLCAucG9raVNka1BhdXNlQnV0dG9uLnBva2lTZGtIaWRkZW4sIC5wb2tpU2RrU3RhcnRBZEJ1dHRvbi5wb2tpU2RrSGlkZGVuIHtcblx0ZGlzcGxheTogbm9uZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cblxuQGtleWZyYW1lcyBnd2QtZ2VuLW5vMDJnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0zNSV7b3BhY2l0eToxO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NDAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtd2Via2l0LWtleWZyYW1lcyBnd2QtZ2VuLW5vMDJnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0zNSV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC1tb3ota2V5ZnJhbWVzIGd3ZC1nZW4tbm8wMmd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTM1JXtvcGFjaXR5OjE7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH00MCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdlbi1ubzAyZ3dkYW5pbWF0aW9ue2FuaW1hdGlvbjpnd2QtZ2VuLW5vMDJnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uOmd3ZC1nZW4tbm8wMmd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LW1vei1hbmltYXRpb246Z3dkLWdlbi1ubzAyZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkc31Aa2V5ZnJhbWVzIGd3ZC1nZW4tNHB2cmd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTQwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH00NSV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC13ZWJraXQta2V5ZnJhbWVzIGd3ZC1nZW4tNHB2cmd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTQwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH00NSV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1ALW1vei1rZXlmcmFtZXMgZ3dkLWdlbi00cHZyZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUley1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NDAle29wYWNpdHk6MTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTQ1JXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fVtkYXRhLWd3ZC1ncm91cD1TcGlubmVyR3JvdXBdIC5nd2QtZ2VuLTRwdnJnd2RhbmltYXRpb257YW5pbWF0aW9uOmd3ZC1nZW4tNHB2cmd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LXdlYmtpdC1hbmltYXRpb246Z3dkLWdlbi00cHZyZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkczstbW96LWFuaW1hdGlvbjpnd2QtZ2VuLTRwdnJnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzfUBrZXlmcmFtZXMgZ3dkLWdlbi1rdzQwZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NDUle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTUwJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1ALXdlYmtpdC1rZXlmcmFtZXMgZ3dkLWdlbi1rdzQwZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NDUle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTUwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtbW96LWtleWZyYW1lcyBnd2QtZ2VuLWt3NDBnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH00NSV7b3BhY2l0eToxOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NTAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1nZW4ta3c0MGd3ZGFuaW1hdGlvbnthbmltYXRpb246Z3dkLWdlbi1rdzQwZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkczstd2Via2l0LWFuaW1hdGlvbjpnd2QtZ2VuLWt3NDBnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy1tb3otYW5pbWF0aW9uOmd3ZC1nZW4ta3c0MGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHN9QGtleWZyYW1lcyBnd2QtZ2VuLTJ1djhnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH01MCV7b3BhY2l0eToxO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NTUle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtd2Via2l0LWtleWZyYW1lcyBnd2QtZ2VuLTJ1djhnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH01MCV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NTUle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC1tb3ota2V5ZnJhbWVzIGd3ZC1nZW4tMnV2OGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTUwJXtvcGFjaXR5OjE7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH01NSV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdlbi0ydXY4Z3dkYW5pbWF0aW9ue2FuaW1hdGlvbjpnd2QtZ2VuLTJ1djhnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uOmd3ZC1nZW4tMnV2OGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LW1vei1hbmltYXRpb246Z3dkLWdlbi0ydXY4Z3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkc31Aa2V5ZnJhbWVzIGd3ZC1nZW4tMXg5N2d3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTU1JXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH02MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC13ZWJraXQta2V5ZnJhbWVzIGd3ZC1nZW4tMXg5N2d3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTU1JXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH02MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1ALW1vei1rZXlmcmFtZXMgZ3dkLWdlbi0xeDk3Z3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUley1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NTUle29wYWNpdHk6MTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTYwJXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fVtkYXRhLWd3ZC1ncm91cD1TcGlubmVyR3JvdXBdIC5nd2QtZ2VuLTF4OTdnd2RhbmltYXRpb257YW5pbWF0aW9uOmd3ZC1nZW4tMXg5N2d3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LXdlYmtpdC1hbmltYXRpb246Z3dkLWdlbi0xeDk3Z3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkczstbW96LWFuaW1hdGlvbjpnd2QtZ2VuLTF4OTdnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzfUBrZXlmcmFtZXMgZ3dkLWdlbi0xaTFlZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NjAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTY1JXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1ALXdlYmtpdC1rZXlmcmFtZXMgZ3dkLWdlbi0xaTFlZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTowOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9MjUley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NjAle29wYWNpdHk6MTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTY1JXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9MTAwJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtbW96LWtleWZyYW1lcyBnd2QtZ2VuLTFpMWVnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH02MCV7b3BhY2l0eToxOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NjUle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1nZW4tMWkxZWd3ZGFuaW1hdGlvbnthbmltYXRpb246Z3dkLWdlbi0xaTFlZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkczstd2Via2l0LWFuaW1hdGlvbjpnd2QtZ2VuLTFpMWVnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy1tb3otYW5pbWF0aW9uOmd3ZC1nZW4tMWkxZWd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHN9QGtleWZyYW1lcyBnd2QtZ2VuLTFzYXBnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmQ7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH02NSV7b3BhY2l0eToxO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZDstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NzAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtd2Via2l0LWtleWZyYW1lcyBnd2QtZ2VuLTFzYXBnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5OjA7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH0yNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH02NSV7b3BhY2l0eToxOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246c3RlcC1lbmR9NzAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn0xMDAle29wYWNpdHk6MDstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC1tb3ota2V5ZnJhbWVzIGd3ZC1nZW4tMXNhcGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6MDstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTI1JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOnN0ZXAtZW5kfTY1JXtvcGFjaXR5OjE7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpzdGVwLWVuZH03MCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfTEwMCV7b3BhY2l0eTowOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdlbi0xc2FwZ3dkYW5pbWF0aW9ue2FuaW1hdGlvbjpnd2QtZ2VuLTFzYXBnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAycyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uOmd3ZC1nZW4tMXNhcGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDJzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LW1vei1hbmltYXRpb246Z3dkLWdlbi0xc2FwZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMnMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkc31Aa2V5ZnJhbWVzIGd3ZC1nZW4tNXFvdGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSl9MTIuNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKX0yNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX0zNy41JXt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTUwJXt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpfTYyLjUle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSl9NzUle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSl9ODcuNSV7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKX0xMDAle3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigzNjBkZWcpIHNjYWxlM2QoMSwxLDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDM2MGRlZykgc2NhbGUzZCgxLDEsMSk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMzYwZGVnKSBzY2FsZTNkKDEsMSwxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtd2Via2l0LWtleWZyYW1lcyBnd2QtZ2VuLTVxb3Rnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSl9MTIuNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKX0yNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpfTM3LjUley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSl9NTAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX02Mi41JXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTc1JXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSl9ODcuNSV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDM2MGRlZykgc2NhbGUzZCgxLDEsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19QC1tb3ota2V5ZnJhbWVzIGd3ZC1nZW4tNXFvdGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAley1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX0xMi41JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTI1JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEsMSwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSl9MzcuNSV7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwyMDBweCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMS4yLC44LDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKX01MCV7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLDEsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpfTYyLjUley1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMjAwcHgsMCkgcm90YXRlWigwKSBzY2FsZTNkKDEuMiwuOCwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSl9NzUley1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX04Ny41JXstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDIwMHB4LDApIHJvdGF0ZVooMCkgc2NhbGUzZCgxLjIsLjgsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTEwMCV7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHJvdGF0ZVooMzYwZGVnKSBzY2FsZTNkKDEsMSwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdlbi01cW90Z3dkYW5pbWF0aW9ue2FuaW1hdGlvbjpnd2QtZ2VuLTVxb3Rnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyA0cyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uOmd3ZC1nZW4tNXFvdGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDRzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHM7LW1vei1hbmltYXRpb246Z3dkLWdlbi01cW90Z3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgNHMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkc31Aa2V5ZnJhbWVzIGd3ZC1nZW4tZmFhZGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzezAle29wYWNpdHk6LjI7dHJhbnNmb3JtOnNjYWxlM2QoLjUsLjgsMSk7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUzZCguNSwuOCwxKTstbW96LXRyYW5zZm9ybTpzY2FsZTNkKC41LC44LDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDEsMCwuNTgsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpOy1tb3otYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX01MCV7b3BhY2l0eTouNTt0cmFuc2Zvcm06c2NhbGUzZCgxLC44LDEpOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlM2QoMSwuOCwxKTstbW96LXRyYW5zZm9ybTpzY2FsZTNkKDEsLjgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoLjQyLDAsMCwxKTstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTEwMCV7b3BhY2l0eTouMjt0cmFuc2Zvcm06c2NhbGUzZCguNSwuOCwxKTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKC41LC44LDEpOy1tb3otdHJhbnNmb3JtOnNjYWxlM2QoLjUsLjgsMSk7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyfX1ALXdlYmtpdC1rZXlmcmFtZXMgZ3dkLWdlbi1mYWFkZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXN7MCV7b3BhY2l0eTouMjstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKC41LC44LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMSwwLC41OCwxKX01MCV7b3BhY2l0eTouNTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKDEsLjgsMSk7LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllciguNDIsMCwwLDEpfTEwMCV7b3BhY2l0eTouMjstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKC41LC44LDEpOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXJ9fUAtbW96LWtleWZyYW1lcyBnd2QtZ2VuLWZhYWRnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lc3swJXtvcGFjaXR5Oi4yOy1tb3otdHJhbnNmb3JtOnNjYWxlM2QoLjUsLjgsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigxLDAsLjU4LDEpfTUwJXtvcGFjaXR5Oi41Oy1tb3otdHJhbnNmb3JtOnNjYWxlM2QoMSwuOCwxKTstbW96LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKC40MiwwLDAsMSl9MTAwJXtvcGFjaXR5Oi4yOy1tb3otdHJhbnNmb3JtOnNjYWxlM2QoLjUsLjgsMSk7LW1vei1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcn19W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1nZW4tZmFhZGd3ZGFuaW1hdGlvbnthbmltYXRpb246Z3dkLWdlbi1mYWFkZ3dkYW5pbWF0aW9uX2d3ZC1rZXlmcmFtZXMgMXMgbGluZWFyIDBzIGluZmluaXRlIG5vcm1hbCBmb3J3YXJkczstd2Via2l0LWFuaW1hdGlvbjpnd2QtZ2VuLWZhYWRnd2RhbmltYXRpb25fZ3dkLWtleWZyYW1lcyAxcyBsaW5lYXIgMHMgaW5maW5pdGUgbm9ybWFsIGZvcndhcmRzOy1tb3otYW5pbWF0aW9uOmd3ZC1nZW4tZmFhZGd3ZGFuaW1hdGlvbl9nd2Qta2V5ZnJhbWVzIDFzIGxpbmVhciAwcyBpbmZpbml0ZSBub3JtYWwgZm9yd2FyZHN9W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1ncnAtMTN0ZC5nd2QtaW1nLTE2NTN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7d2lkdGg6NjEycHg7aGVpZ2h0OjU2OHB4O29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7bGVmdDowfVtkYXRhLWd3ZC1ncm91cD1TcGlubmVyR3JvdXBdIC5nd2QtZ3JwLTEzdGQuZ3dkLWltZy1hbHNte3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjYxMnB4O2hlaWdodDo1NjhweDtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2xlZnQ6MH1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdycC0xM3RkLmd3ZC1pbWctZjBtdXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDt3aWR0aDo2MTJweDtoZWlnaHQ6NTY4cHg7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtsZWZ0OjB9W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1ncnAtMTN0ZC5nd2QtaW1nLTFzcjN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7d2lkdGg6NjEycHg7aGVpZ2h0OjU2OHB4O29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7bGVmdDowfVtkYXRhLWd3ZC1ncm91cD1TcGlubmVyR3JvdXBdIC5nd2QtZ3JwLTEzdGQuZ3dkLWltZy0xZmZue3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjYxMnB4O2hlaWdodDo1NjhweDtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApO2xlZnQ6MH1bZGF0YS1nd2QtZ3JvdXA9U3Bpbm5lckdyb3VwXSAuZ3dkLWdycC0xM3RkLmd3ZC1pbWctMTZmM3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDt3aWR0aDo2MTJweDtoZWlnaHQ6NTY4cHg7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTtsZWZ0OjB9W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1ncnAtMTN0ZC5nd2QtaW1nLTFycnN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7d2lkdGg6NjEycHg7aGVpZ2h0OjU2OHB4O29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTstbW96LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCk7bGVmdDowfVtkYXRhLWd3ZC1ncm91cD1TcGlubmVyR3JvdXBdIC5nd2QtZ3JwLTEzdGQuZ3dkLWltZy0xZGhpe3Bvc2l0aW9uOmFic29sdXRlO3RyYW5zZm9ybS1vcmlnaW46MjgzLjcxMXB4IDI4My41MTZweCAwOy13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjoyODMuNzExcHggMjgzLjUxNnB4IDA7LW1vei10cmFuc2Zvcm0tb3JpZ2luOjI4My43MTFweCAyODMuNTE2cHggMDtoZWlnaHQ6NTY4cHg7d2lkdGg6NTY4cHg7dG9wOjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpOy1tb3otdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSByb3RhdGVaKDApIHNjYWxlM2QoMSwxLDEpO3RyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDstd2Via2l0LXRyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDstbW96LXRyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZDtsZWZ0OjB9W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF0gLmd3ZC1ncnAtMTN0ZC5nd2QtaW1nLTFpemd7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6NTY4cHg7aGVpZ2h0OjYwNC4wMnB4O29wYWNpdHk6LjI7dHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkOy13ZWJraXQtdHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkOy1tb3otdHJhbnNmb3JtLXN0eWxlOnByZXNlcnZlLTNkO3RyYW5zZm9ybTpzY2FsZTNkKC41LC44LDEpOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlM2QoLjUsLjgsMSk7LW1vei10cmFuc2Zvcm06c2NhbGUzZCguNSwuOCwxKTt0b3A6NTVweDtsZWZ0OjB9W2RhdGEtZ3dkLWdyb3VwPVNwaW5uZXJHcm91cF17d2lkdGg6NjExLjk3OXB4O2hlaWdodDo1OTguNjA1cHh9Lmd3ZC1kaXYtMXYxc3t0cmFuc2Zvcm06c2NhbGUoLjUsLjUpfVxuIixkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHQpKX1mdW5jdGlvbiBHKHQsbil7dm9pZCAwPT09biYmKG49e30pLHRoaXMucmV0cmllcz0wLHRoaXMucnVubmluZz0hMSx0aGlzLmltYT10LHRoaXMuc2l0ZUlEPW4uc2l0ZUlEfHwzLDA9PT1uLnNpdGVJRCYmKG4uc2l0ZUlEPTMpLHRoaXMudG90YWxSZXRyaWVzPW4udG90YWxSZXRyaWVzfHx2LndhdGVyZmFsbFJldHJpZXN8fDEsdGhpcy50aW1pbmc9bi50aW1pbmd8fG5ldyBTKHYuYWRUaW1pbmcpLHRoaXMub3ZlcndyaXRlQWRUYWdVcmxzPW4uYWRUYWdVcmw/YShuLmFkVGFnVXJsKTpbXSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMudmlkZW8uZXJyb3IsdGhpcy5tb3ZlVGhyb3VnaFdhdGVyZmFsbC5iaW5kKHRoaXMpKSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMudmlkZW8ubG9hZGVyRXJyb3IsdGhpcy5tb3ZlVGhyb3VnaFdhdGVyZmFsbC5iaW5kKHRoaXMpKSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMucmVhZHksdGhpcy50aW1pbmcuc3RvcFdhdGVyZmFsbFRpbWVyLmJpbmQodGhpcy50aW1pbmcpKSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMuc3RhcnRlZCx0aGlzLnN0b3BXYXRlcmZhbGwuYmluZCh0aGlzKSl9dmFyIE49WyJBVCIsIkJFIiwiQkciLCJIUiIsIkNZIiwiQ1oiLCJESyIsIkVFIiwiRkkiLCJGUiIsIkRFIiwiR1IiLCJIVSIsIklFIiwiSVQiLCJMViIsIkxUIiwiTFUiLCJNVCIsIk5MIiwiUEwiLCJQVCIsIlJPIiwiU0siLCJTSSIsIkVTIiwiU0UiLCJHQiIsIklTIiwiTEkiLCJOTyJdLEY9WyJVUyJdLFg9WyJaWiJdO2Z1bmN0aW9uIFUodCl7cmV0dXJuIE4uaW5jbHVkZXModCl9ZnVuY3Rpb24gUSh0KXtyZXR1cm4gWC5pbmNsdWRlcyh0KX1mdW5jdGlvbiBIKHQsYSxzLGQpe3JldHVybiBuZXcocz1zfHxQcm9taXNlKShmdW5jdGlvbihlLG4pe2Z1bmN0aW9uIGkodCl7dHJ5e28oZC5uZXh0KHQpKX1jYXRjaCh0KXtuKHQpfX1mdW5jdGlvbiByKHQpe3RyeXtvKGQudGhyb3codCkpfWNhdGNoKHQpe24odCl9fWZ1bmN0aW9uIG8odCl7dmFyIG47dC5kb25lP2UodC52YWx1ZSk6KChuPXQudmFsdWUpaW5zdGFuY2VvZiBzP246bmV3IHMoZnVuY3Rpb24odCl7dChuKX0pKS50aGVuKGkscil9bygoZD1kLmFwcGx5KHQsYXx8W10pKS5uZXh0KCkpfSl9ZnVuY3Rpb24gVyhlLGkpe3ZhciByLG8sYSxzPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJmFbMF0pdGhyb3cgYVsxXTtyZXR1cm4gYVsxXX0sdHJ5czpbXSxvcHM6W119LHQ9e25leHQ6bigwKSx0aHJvdzpuKDEpLHJldHVybjpuKDIpfTtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYodFtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0O2Z1bmN0aW9uIG4obil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy4iKTtmb3IoO3M7KXRyeXtpZihyPTEsbyYmKGE9MiZuWzBdP28ucmV0dXJuOm5bMF0/by50aHJvd3x8KChhPW8ucmV0dXJuKSYmYS5jYWxsKG8pLDApOm8ubmV4dCkmJiEoYT1hLmNhbGwobyxuWzFdKSkuZG9uZSlyZXR1cm4gYTtzd2l0Y2gobz0wLGEmJihuPVsyJm5bMF0sYS52YWx1ZV0pLG5bMF0pe2Nhc2UgMDpjYXNlIDE6YT1uO2JyZWFrO2Nhc2UgNDpyZXR1cm4gcy5sYWJlbCsrLHt2YWx1ZTpuWzFdLGRvbmU6ITF9O2Nhc2UgNTpzLmxhYmVsKyssbz1uWzFdLG49WzBdO2NvbnRpbnVlO2Nhc2UgNzpuPXMub3BzLnBvcCgpLHMudHJ5cy5wb3AoKTtjb250aW51ZTtkZWZhdWx0OmlmKCEoKGE9MDwoYT1zLnRyeXMpLmxlbmd0aCYmYVthLmxlbmd0aC0xXSl8fDYhPT1uWzBdJiYyIT09blswXSkpe3M9MDtjb250aW51ZX1pZigzPT09blswXSYmKCFhfHxuWzFdPmFbMF0mJm5bMV08YVszXSkpe3MubGFiZWw9blsxXTticmVha31pZig2PT09blswXSYmcy5sYWJlbDxhWzFdKXtzLmxhYmVsPWFbMV0sYT1uO2JyZWFrfWlmKGEmJnMubGFiZWw8YVsyXSl7cy5sYWJlbD1hWzJdLHMub3BzLnB1c2gobik7YnJlYWt9YVsyXSYmcy5vcHMucG9wKCkscy50cnlzLnBvcCgpO2NvbnRpbnVlfW49aS5jYWxsKGUscyl9Y2F0Y2godCl7bj1bNix0XSxvPTB9ZmluYWxseXtyPWE9MH1pZig1Jm5bMF0pdGhyb3cgblsxXTtyZXR1cm57dmFsdWU6blswXT9uWzFdOnZvaWQgMCxkb25lOiEwfX0oW24sdF0pfX19ZnVuY3Rpb24gVihyKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxuKXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtlLnR5cGU9InRleHQvamF2YXNjcmlwdCIsZS5hc3luYz0hMCxlLnNyYz1yO2Z1bmN0aW9uIGkoKXtlLnJlYWR5U3RhdGUmJiJsb2FkZWQiIT09ZS5yZWFkeVN0YXRlJiYiY29tcGxldGUiIT09ZS5yZWFkeVN0YXRlfHwodCgpLGUub25sb2FkPW51bGwsZS5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCl9ZS5vbmxvYWQ9aSxlLm9ucmVhZHlzdGF0ZWNoYW5nZT1pLGUub25lcnJvcj1uLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZSl9KX1mdW5jdGlvbiBxKHQsYSxzLGQpe3JldHVybiBuZXcocz1zfHxQcm9taXNlKShmdW5jdGlvbihlLG4pe2Z1bmN0aW9uIGkodCl7dHJ5e28oZC5uZXh0KHQpKX1jYXRjaCh0KXtuKHQpfX1mdW5jdGlvbiByKHQpe3RyeXtvKGQudGhyb3codCkpfWNhdGNoKHQpe24odCl9fWZ1bmN0aW9uIG8odCl7dmFyIG47dC5kb25lP2UodC52YWx1ZSk6KChuPXQudmFsdWUpaW5zdGFuY2VvZiBzP246bmV3IHMoZnVuY3Rpb24odCl7dChuKX0pKS50aGVuKGkscil9bygoZD1kLmFwcGx5KHQsYXx8W10pKS5uZXh0KCkpfSl9ZnVuY3Rpb24gSyhlLGkpe3ZhciByLG8sYSxzPXtsYWJlbDowLHNlbnQ6ZnVuY3Rpb24oKXtpZigxJmFbMF0pdGhyb3cgYVsxXTtyZXR1cm4gYVsxXX0sdHJ5czpbXSxvcHM6W119LHQ9e25leHQ6bigwKSx0aHJvdzpuKDEpLHJldHVybjpuKDIpfTtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYodFtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0O2Z1bmN0aW9uIG4obil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXtpZihyKXRocm93IG5ldyBUeXBlRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy4iKTtmb3IoO3M7KXRyeXtpZihyPTEsbyYmKGE9MiZuWzBdP28ucmV0dXJuOm5bMF0/by50aHJvd3x8KChhPW8ucmV0dXJuKSYmYS5jYWxsKG8pLDApOm8ubmV4dCkmJiEoYT1hLmNhbGwobyxuWzFdKSkuZG9uZSlyZXR1cm4gYTtzd2l0Y2gobz0wLGEmJihuPVsyJm5bMF0sYS52YWx1ZV0pLG5bMF0pe2Nhc2UgMDpjYXNlIDE6YT1uO2JyZWFrO2Nhc2UgNDpyZXR1cm4gcy5sYWJlbCsrLHt2YWx1ZTpuWzFdLGRvbmU6ITF9O2Nhc2UgNTpzLmxhYmVsKyssbz1uWzFdLG49WzBdO2NvbnRpbnVlO2Nhc2UgNzpuPXMub3BzLnBvcCgpLHMudHJ5cy5wb3AoKTtjb250aW51ZTtkZWZhdWx0OmlmKCEoKGE9MDwoYT1zLnRyeXMpLmxlbmd0aCYmYVthLmxlbmd0aC0xXSl8fDYhPT1uWzBdJiYyIT09blswXSkpe3M9MDtjb250aW51ZX1pZigzPT09blswXSYmKCFhfHxuWzFdPmFbMF0mJm5bMV08YVszXSkpe3MubGFiZWw9blsxXTticmVha31pZig2PT09blswXSYmcy5sYWJlbDxhWzFdKXtzLmxhYmVsPWFbMV0sYT1uO2JyZWFrfWlmKGEmJnMubGFiZWw8YVsyXSl7cy5sYWJlbD1hWzJdLHMub3BzLnB1c2gobik7YnJlYWt9YVsyXSYmcy5vcHMucG9wKCkscy50cnlzLnBvcCgpO2NvbnRpbnVlfW49aS5jYWxsKGUscyl9Y2F0Y2godCl7bj1bNix0XSxvPTB9ZmluYWxseXtyPWE9MH1pZig1Jm5bMF0pdGhyb3cgblsxXTtyZXR1cm57dmFsdWU6blswXT9uWzFdOnZvaWQgMCxkb25lOiEwfX0oW24sdF0pfX19dmFyIEo9KFkucHJvdG90eXBlLmluaXRBZERpc3BsYXlDb250YWluZXI9ZnVuY3Rpb24oKXt0aGlzLmFkRGlzcGxheUNvbnRhaW5lcnx8KHRoaXMuYWREaXNwbGF5Q29udGFpbmVyPW5ldyBnb29nbGUuaW1hLkFkRGlzcGxheUNvbnRhaW5lcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicG9raVNES0FkQ29udGFpbmVyIiksdGhpcy52aWRlb0VsZW1lbnQpKX0sWS5wcm90b3R5cGUuaW5pdEJsYW5rVmlkZW89ZnVuY3Rpb24oKXt0aGlzLmJsYW5rVmlkZW89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidmlkZW8iKSx0aGlzLmJsYW5rVmlkZW8uc2V0QXR0cmlidXRlKCJwbGF5c2lubGluZSIsInBsYXlzaW5saW5lIik7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic291cmNlIik7dC5zcmM9ImRhdGE6dmlkZW8vbXA0O2Jhc2U2NCwgQUFBQUhHWjBlWEJOTkZZZ0FBQUNBR2x6YjIxcGMyOHlZWFpqTVFBQUFBaG1jbVZsQUFBR0YyMWtZWFRlQkFBQWJHbGlabUZoWXlBeExqSTRBQUJDQUpNZ0JESUFSd0FBQXJFR0JmLy9yZHhGNmIzbTJVaTNsaXpZSU5rajd1OTRNalkwSUMwZ1kyOXlaU0F4TkRJZ2NqSWdPVFUyWXpoa09DQXRJRWd1TWpZMEwwMVFSVWN0TkNCQlZrTWdZMjlrWldNZ0xTQkRiM0I1YkdWbWRDQXlNREF6TFRJd01UUWdMU0JvZEhSd09pOHZkM2QzTG5acFpHVnZiR0Z1TG05eVp5OTRNalkwTG1oMGJXd2dMU0J2Y0hScGIyNXpPaUJqWVdKaFl6MHdJSEpsWmoweklHUmxZbXh2WTJzOU1Ub3dPakFnWVc1aGJIbHpaVDB3ZURFNk1IZ3hNVEVnYldVOWFHVjRJSE4xWW0xbFBUY2djSE41UFRFZ2NITjVYM0prUFRFdU1EQTZNQzR3TUNCdGFYaGxaRjl5WldZOU1TQnRaVjl5WVc1blpUMHhOaUJqYUhKdmJXRmZiV1U5TVNCMGNtVnNiR2x6UFRFZ09IZzRaR04wUFRBZ1kzRnRQVEFnWkdWaFpIcHZibVU5TWpFc01URWdabUZ6ZEY5d2MydHBjRDB4SUdOb2NtOXRZVjl4Y0Y5dlptWnpaWFE5TFRJZ2RHaHlaV0ZrY3owMklHeHZiMnRoYUdWaFpGOTBhSEpsWVdSelBURWdjMnhwWTJWa1gzUm9jbVZoWkhNOU1DQnVjajB3SUdSbFkybHRZWFJsUFRFZ2FXNTBaWEpzWVdObFpEMHdJR0pzZFhKaGVWOWpiMjF3WVhROU1DQmpiMjV6ZEhKaGFXNWxaRjlwYm5SeVlUMHdJR0ptY21GdFpYTTlNQ0IzWldsbmFIUndQVEFnYTJWNWFXNTBQVEkxTUNCclpYbHBiblJmYldsdVBUSTFJSE5qWlc1bFkzVjBQVFF3SUdsdWRISmhYM0psWm5KbGMyZzlNQ0J5WTE5c2IyOXJZV2hsWVdROU5EQWdjbU05WTNKbUlHMWlkSEpsWlQweElHTnlaajB5TXk0d0lIRmpiMjF3UFRBdU5qQWdjWEJ0YVc0OU1DQnhjRzFoZUQwMk9TQnhjSE4wWlhBOU5DQjJZblpmYldGNGNtRjBaVDAzTmpnZ2RtSjJYMkoxWm5OcGVtVTlNekF3TUNCamNtWmZiV0Y0UFRBdU1DQnVZV3hmYUhKa1BXNXZibVVnWm1sc2JHVnlQVEFnYVhCZmNtRjBhVzg5TVM0ME1DQmhjVDB4T2pFdU1EQUFnQUFBQUZabGlJUUw4bUtBQUt2TW5KeWNuSnljbkp5Y25YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYaUVBU1pBQ0dRQWpnQ0VBU1pBQ0dRQWpnQUFBQUFkQm1qZ1g0R1NBSVFCSmtBSVpBQ09BQUFBQUIwR2FWQVg0R1NBaEFFbVFBaGtBSTRBaEFFbVFBaGtBSTRBQUFBQUdRWnBnTDhESklRQkprQUlaQUNPQUlRQkprQUlaQUNPQUFBQUFCa0dhZ0MvQXlTRUFTWkFDR1FBamdBQUFBQVpCbXFBdndNa2hBRW1RQWhrQUk0QWhBRW1RQWhrQUk0QUFBQUFHUVpyQUw4REpJUUJKa0FJWkFDT0FBQUFBQmtHYTRDL0F5U0VBU1pBQ0dRQWpnQ0VBU1pBQ0dRQWpnQUFBQUFaQm13QXZ3TWtoQUVtUUFoa0FJNEFBQUFBR1Fac2dMOERKSVFCSmtBSVpBQ09BSVFCSmtBSVpBQ09BQUFBQUJrR2JRQy9BeVNFQVNaQUNHUUFqZ0NFQVNaQUNHUUFqZ0FBQUFBWkJtMkF2d01raEFFbVFBaGtBSTRBQUFBQUdRWnVBTDhESklRQkprQUlaQUNPQUlRQkprQUlaQUNPQUFBQUFCa0dib0MvQXlTRUFTWkFDR1FBamdBQUFBQVpCbThBdndNa2hBRW1RQWhrQUk0QWhBRW1RQWhrQUk0QUFBQUFHUVp2Z0w4REpJUUJKa0FJWkFDT0FBQUFBQmtHYUFDL0F5U0VBU1pBQ0dRQWpnQ0VBU1pBQ0dRQWpnQUFBQUFaQm1pQXZ3TWtoQUVtUUFoa0FJNEFoQUVtUUFoa0FJNEFBQUFBR1FacEFMOERKSVFCSmtBSVpBQ09BQUFBQUJrR2FZQy9BeVNFQVNaQUNHUUFqZ0NFQVNaQUNHUUFqZ0FBQUFBWkJtb0F2d01raEFFbVFBaGtBSTRBQUFBQUdRWnFnTDhESklRQkprQUlaQUNPQUlRQkprQUlaQUNPQUFBQUFCa0dhd0MvQXlTRUFTWkFDR1FBamdBQUFBQVpCbXVBdndNa2hBRW1RQWhrQUk0QWhBRW1RQWhrQUk0QUFBQUFHUVpzQUw4REpJUUJKa0FJWkFDT0FBQUFBQmtHYklDL0F5U0VBU1pBQ0dRQWpnQ0VBU1pBQ0dRQWpnQUFBQUFaQm0wQXZ3TWtoQUVtUUFoa0FJNEFoQUVtUUFoa0FJNEFBQUFBR1FadGdMOERKSVFCSmtBSVpBQ09BQUFBQUJrR2JnQ3ZBeVNFQVNaQUNHUUFqZ0NFQVNaQUNHUUFqZ0FBQUFBWkJtNkFud01raEFFbVFBaGtBSTRBaEFFbVFBaGtBSTRBaEFFbVFBaGtBSTRBaEFFbVFBaGtBSTRBQUFBaHViVzl2ZGdBQUFHeHRkbWhrQUFBQUFBQUFBQUFBQUFBQUFBQUQ2QUFBQkRjQUFRQUFBUUFBQUFBQUFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBQUF6QjBjbUZyQUFBQVhIUnJhR1FBQUFBREFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUEra0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFMQUFBQUNRQUFBQUFBQWtaV1IwY3dBQUFCeGxiSE4wQUFBQUFBQUFBQUVBQUFQcEFBQUFBQUFCQUFBQUFBS29iV1JwWVFBQUFDQnRaR2hrQUFBQUFBQUFBQUFBQUFBQUFBQjFNQUFBZFU1VnhBQUFBQUFBTFdoa2JISUFBQUFBQUFBQUFIWnBaR1VBQUFBQUFBQUFBQUFBQUFCV2FXUmxiMGhoYm1Sc1pYSUFBQUFDVTIxcGJtWUFBQUFVZG0xb1pBQUFBQUVBQUFBQUFBQUFBQUFBQUNSa2FXNW1BQUFBSEdSeVpXWUFBQUFBQUFBQUFRQUFBQXgxY213Z0FBQUFBUUFBQWhOemRHSnNBQUFBcjNOMGMyUUFBQUFBQUFBQUFRQUFBSjloZG1NeEFBQUFBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUxBQWtBQklBQUFBU0FBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHUC8vQUFBQUxXRjJZME1CUXNBTi8rRUFGV2RDd0EzWkFzVHNCRUFBQVBwQUFEcVlBOFVLa2dFQUJXakxnOHNnQUFBQUhIVjFhV1JyYUVEeVh5UlB4Ym81cFJ2UEF5UHpBQUFBQUFBQUFCaHpkSFJ6QUFBQUFBQUFBQUVBQUFBZUFBQUQ2UUFBQUJSemRITnpBQUFBQUFBQUFBRUFBQUFCQUFBQUhITjBjMk1BQUFBQUFBQUFBUUFBQUFFQUFBQUJBQUFBQVFBQUFJeHpkSE42QUFBQUFBQUFBQUFBQUFBZUFBQUREd0FBQUFzQUFBQUxBQUFBQ2dBQUFBb0FBQUFLQUFBQUNnQUFBQW9BQUFBS0FBQUFDZ0FBQUFvQUFBQUtBQUFBQ2dBQUFBb0FBQUFLQUFBQUNnQUFBQW9BQUFBS0FBQUFDZ0FBQUFvQUFBQUtBQUFBQ2dBQUFBb0FBQUFLQUFBQUNnQUFBQW9BQUFBS0FBQUFDZ0FBQUFvQUFBQUtBQUFBaUhOMFkyOEFBQUFBQUFBQUhnQUFBRVlBQUFObkFBQURld0FBQTVnQUFBTzBBQUFEeHdBQUErTUFBQVAyQUFBRUVnQUFCQ1VBQUFSQkFBQUVYUUFBQkhBQUFBU01BQUFFbndBQUJMc0FBQVRPQUFBRTZnQUFCUVlBQUFVWkFBQUZOUUFBQlVnQUFBVmtBQUFGZHdBQUJaTUFBQVdtQUFBRndnQUFCZDRBQUFYeEFBQUdEUUFBQkdoMGNtRnJBQUFBWEhScmFHUUFBQUFEQUFBQUFBQUFBQUFBQUFBQ0FBQUFBQUFBQkRjQUFBQUFBQUFBQUFBQUFBRUJBQUFBQUFFQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBa1pXUjBjd0FBQUJ4bGJITjBBQUFBQUFBQUFBRUFBQVFrQUFBRGNBQUJBQUFBQUFQZ2JXUnBZUUFBQUNCdFpHaGtBQUFBQUFBQUFBQUFBQUFBQUFDN2dBQUF5a0JWeEFBQUFBQUFMV2hrYkhJQUFBQUFBQUFBQUhOdmRXNEFBQUFBQUFBQUFBQUFBQUJUYjNWdVpFaGhibVJzWlhJQUFBQURpMjFwYm1ZQUFBQVFjMjFvWkFBQUFBQUFBQUFBQUFBQUpHUnBibVlBQUFBY1pISmxaZ0FBQUFBQUFBQUJBQUFBREhWeWJDQUFBQUFCQUFBRFQzTjBZbXdBQUFCbmMzUnpaQUFBQUFBQUFBQUJBQUFBVjIxd05HRUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBSUFFQUFBQUFDN2dBQUFBQUFBTTJWelpITUFBQUFBQTRDQWdDSUFBZ0FFZ0lDQUZFQVZCYmpZQUF1NEFBQUFEY29GZ0lDQUFoR1FCb0NBZ0FFQ0FBQUFJSE4wZEhNQUFBQUFBQUFBQWdBQUFESUFBQVFBQUFBQUFRQUFBa0FBQUFGVWMzUnpZd0FBQUFBQUFBQWJBQUFBQVFBQUFBRUFBQUFCQUFBQUFnQUFBQUlBQUFBQkFBQUFBd0FBQUFFQUFBQUJBQUFBQkFBQUFBSUFBQUFCQUFBQUJnQUFBQUVBQUFBQkFBQUFCd0FBQUFJQUFBQUJBQUFBQ0FBQUFBRUFBQUFCQUFBQUNRQUFBQUlBQUFBQkFBQUFDZ0FBQUFFQUFBQUJBQUFBQ3dBQUFBSUFBQUFCQUFBQURRQUFBQUVBQUFBQkFBQUFEZ0FBQUFJQUFBQUJBQUFBRHdBQUFBRUFBQUFCQUFBQUVBQUFBQUlBQUFBQkFBQUFFUUFBQUFFQUFBQUJBQUFBRWdBQUFBSUFBQUFCQUFBQUZBQUFBQUVBQUFBQkFBQUFGUUFBQUFJQUFBQUJBQUFBRmdBQUFBRUFBQUFCQUFBQUZ3QUFBQUlBQUFBQkFBQUFHQUFBQUFFQUFBQUJBQUFBR1FBQUFBSUFBQUFCQUFBQUdnQUFBQUVBQUFBQkFBQUFHd0FBQUFJQUFBQUJBQUFBSFFBQUFBRUFBQUFCQUFBQUhnQUFBQUlBQUFBQkFBQUFId0FBQUFRQUFBQUJBQUFBNEhOMGMzb0FBQUFBQUFBQUFBQUFBRE1BQUFBYUFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUFKQUFBQUNRQUFBQWtBQUFBSkFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUFKQUFBQUNRQUFBQWtBQUFBSkFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUFKQUFBQUNRQUFBQWtBQUFBSkFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUFKQUFBQUNRQUFBQWtBQUFBSkFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUFKQUFBQUNRQUFBQWtBQUFBSkFBQUFDUUFBQUFrQUFBQUpBQUFBQ1FBQUFBa0FBQUNNYzNSamJ3QUFBQUFBQUFBZkFBQUFMQUFBQTFVQUFBTnlBQUFEaGdBQUE2SUFBQU8rQUFBRDBRQUFBKzBBQUFRQUFBQUVIQUFBQkM4QUFBUkxBQUFFWndBQUJIb0FBQVNXQUFBRXFRQUFCTVVBQUFUWUFBQUU5QUFBQlJBQUFBVWpBQUFGUHdBQUJWSUFBQVZ1QUFBRmdRQUFCWjBBQUFXd0FBQUZ6QUFBQmVnQUFBWDdBQUFHRndBQUFHSjFaSFJoQUFBQVdtMWxkR0VBQUFBQUFBQUFJV2hrYkhJQUFBQUFBQUFBQUcxa2FYSmhjSEJzQUFBQUFBQUFBQUFBQUFBQUxXbHNjM1FBQUFBbHFYUnZid0FBQUIxa1lYUmhBQUFBQVFBQUFBQk1ZWFptTlRVdU16TXVNVEF3Iix0aGlzLmJsYW5rVmlkZW8uYXBwZW5kQ2hpbGQodCl9LFkucHJvdG90eXBlLmluaXRBZHNMb2FkZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYWRzTG9hZGVyfHwodGhpcy5hZHNMb2FkZXI9bmV3IGdvb2dsZS5pbWEuQWRzTG9hZGVyKHRoaXMuYWREaXNwbGF5Q29udGFpbmVyKSx0aGlzLmFkc0xvYWRlci5nZXRTZXR0aW5ncygpLnNldFZwYWlkTW9kZShnb29nbGUuaW1hLkltYVNka1NldHRpbmdzLlZwYWlkTW9kZS5JTlNFQ1VSRSksdGhpcy5hZHNMb2FkZXIuZ2V0U2V0dGluZ3MoKS5zZXREaXNhYmxlQ3VzdG9tUGxheWJhY2tGb3JJT1MxMFBsdXMoITApLHRoaXMuYWRzTG9hZGVyLmFkZEV2ZW50TGlzdGVuZXIoZ29vZ2xlLmltYS5BZHNNYW5hZ2VyTG9hZGVkRXZlbnQuVHlwZS5BRFNfTUFOQUdFUl9MT0FERUQsdGhpcy5vbkFkc01hbmFnZXJMb2FkZWQsITEsdGhpcyksdGhpcy5hZHNMb2FkZXIuYWRkRXZlbnRMaXN0ZW5lcihnb29nbGUuaW1hLkFkRXJyb3JFdmVudC5UeXBlLkFEX0VSUk9SLHRoaXMub25BZExvYWRlckVycm9yLCExLHRoaXMpLHRoaXMudmlkZW9FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm9uZW5kZWQiLGZ1bmN0aW9uKCl7cmV0dXJuIHQuYWRzTG9hZGVyLmNvbnRlbnRDb21wbGV0ZSgpfSkpfSxZLnByb3RvdHlwZS5yZXF1ZXN0QWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEgodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG47cmV0dXJuIFcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLnJ1bm5pbmdBZD9bMl06KHRoaXMucnVubmluZ0FkPSEwLHRoaXMuYWREaXNwbGF5Q29udGFpbmVyLmluaXRpYWxpemUoKSx0aGlzLnZpZGVvRWxlbWVudC5zcmM9IiIsKG49bmV3IGdvb2dsZS5pbWEuQWRzUmVxdWVzdCkuYWRUYWdVcmw9ZSxuLmxpbmVhckFkU2xvdFdpZHRoPXRoaXMuY3VycmVudFdpZHRoLG4ubGluZWFyQWRTbG90SGVpZ2h0PXRoaXMuY3VycmVudEhlaWdodCxuLm5vbkxpbmVhckFkU2xvdFdpZHRoPXRoaXMuY3VycmVudFdpZHRoLG4ubm9uTGluZWFyQWRTbG90SGVpZ2h0PXRoaXMuY3VycmVudEhlaWdodCxuLmZvcmNlTm9uTGluZWFyRnVsbFNsb3Q9ITAsWzQsdGhpcy5jYW5XZUF1dG9QbGF5V2l0aFNvdW5kKCldKTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpPyhuLnNldEFkV2lsbFBsYXlNdXRlZCghMSksdGhpcy5jdXJyZW50UmVxdWVzdElzTXV0ZWQ9ITEpOihuLnNldEFkV2lsbFBsYXlNdXRlZCghMCksdGhpcy5jdXJyZW50UmVxdWVzdElzTXV0ZWQ9ITApLHRoaXMuYWxsb3dlZFRvUGxheUFkPSEwLHRoaXMuYWRzTG9hZGVyLnJlcXVlc3RBZHMobiksWzJdfX0pfSl9LFkucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbih0LG4sZSl7dm9pZCAwPT09ZSYmKGU9Z29vZ2xlLmltYS5WaWV3TW9kZS5OT1JNQUwpLHRoaXMuY3VycmVudFdpZHRoPXQsdGhpcy5jdXJyZW50SGVpZ2h0PW4sdGhpcy5hZHNNYW5hZ2VyJiZ0aGlzLmFkc01hbmFnZXIucmVzaXplKHQsbixlKX0sWS5wcm90b3R5cGUub25BZHNNYW5hZ2VyTG9hZGVkPWZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBnb29nbGUuaW1hLkFkc1JlbmRlcmluZ1NldHRpbmdzO24uZW5hYmxlUHJlbG9hZGluZz0hMCxuLnJlc3RvcmVDdXN0b21QbGF5YmFja1N0YXRlT25BZEJyZWFrQ29tcGxldGU9ITAsbi5taW1lVHlwZXM9ZCgpfHxnKCl8fGgoKT9bInZpZGVvL21wNCJdOlsidmlkZW8vbXA0IiwidmlkZW8vd2VibSIsInZpZGVvL29nZyJdLHRoaXMuYWRzTWFuYWdlcj10LmdldEFkc01hbmFnZXIodGhpcy52aWRlb0VsZW1lbnQsbiksdGhpcy5hZHNNYW5hZ2VyLnNldFZvbHVtZShNYXRoLm1heCgwLE1hdGgubWluKDEsdGhpcy52b2x1bWUpKSksdGhpcy5jdXJyZW50UmVxdWVzdElzTXV0ZWQmJnRoaXMuYWRzTWFuYWdlci5zZXRWb2x1bWUoMCksdGhpcy5hbGxvd2VkVG9QbGF5QWQ/KHRoaXMuYXR0YWNoQWRFdmVudHMoKSxiLmRpc3BhdGNoRXZlbnQoeS5hZHMucmVhZHkpKTp0aGlzLnRlYXJEb3duKCl9LFkucHJvdG90eXBlLnNldFZvbHVtZT1mdW5jdGlvbih0KXt0aGlzLnZvbHVtZT10LHRoaXMuYWRzTWFuYWdlciYmdGhpcy5hZHNNYW5hZ2VyLnNldFZvbHVtZShNYXRoLm1heCgwLE1hdGgubWluKDEsdGhpcy52b2x1bWUpKSl9LFkucHJvdG90eXBlLnN0YXJ0UGxheWJhY2s9ZnVuY3Rpb24oKXt0cnl7dGhpcy5hZHNNYW5hZ2VyLmluaXQodGhpcy5jdXJyZW50V2lkdGgsdGhpcy5jdXJyZW50SGVpZ2h0LGdvb2dsZS5pbWEuVmlld01vZGUuTk9STUFMKSx0aGlzLmFkc01hbmFnZXIuc3RhcnQoKX1jYXRjaCh0KXt0aGlzLnZpZGVvRWxlbWVudC5wbGF5KCl9fSxZLnByb3RvdHlwZS5zdGFydElPU1BsYXliYWNrPWZ1bmN0aW9uKCl7dGhpcy5hZHNNYW5hZ2VyLnN0YXJ0KCl9LFkucHJvdG90eXBlLnN0b3BQbGF5YmFjaz1mdW5jdGlvbigpe2IuZGlzcGF0Y2hFdmVudCh5LmFkcy5zdG9wcGVkKSx0aGlzLnRlYXJEb3duKCl9LFkucHJvdG90eXBlLnJlc3VtZUFkPWZ1bmN0aW9uKCl7Yi5kaXNwYXRjaEV2ZW50KHkuYWRzLnZpZGVvLnJlc3VtZWQpLHRoaXMuYWRzTWFuYWdlciYmdGhpcy5hZHNNYW5hZ2VyLnJlc3VtZSgpfSxZLnByb3RvdHlwZS50ZWFyRG93bj1mdW5jdGlvbigpe3RoaXMuYWRzTWFuYWdlciYmKHRoaXMuYWRzTWFuYWdlci5zdG9wKCksdGhpcy5hZHNNYW5hZ2VyLmRlc3Ryb3koKSx0aGlzLmFkc01hbmFnZXI9bnVsbCksbnVsbCE9PXRoaXMuYmFubmVyVGltZW91dCYmKGNsZWFyVGltZW91dCh0aGlzLmJhbm5lclRpbWVvdXQpLHRoaXMuYmFubmVyVGltZW91dD1udWxsKSx0aGlzLmFkc0xvYWRlciYmKHRoaXMuYWRzTG9hZGVyLmNvbnRlbnRDb21wbGV0ZSgpLHRoaXMuYWRzTG9hZGVyLmRlc3Ryb3koKSx0aGlzLmFkc0xvYWRlcj1udWxsLHRoaXMuaW5pdEFkc0xvYWRlcigpKSx0aGlzLnJ1bm5pbmdBZD0hMX0sWS5wcm90b3R5cGUuYXR0YWNoQWRFdmVudHM9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLHQ9Z29vZ2xlLmltYS5BZEV2ZW50LlR5cGU7dGhpcy5hZHNNYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIoZ29vZ2xlLmltYS5BZEVycm9yRXZlbnQuVHlwZS5BRF9FUlJPUix0aGlzLm9uQWRFcnJvciwhMSx0aGlzKSxbdC5BRF9QUk9HUkVTUyx0LkFMTF9BRFNfQ09NUExFVEVELHQuQ0xJQ0ssdC5DT01QTEVURSx0LklNUFJFU1NJT04sdC5QQVVTRUQsdC5TS0lQUEVELHQuU1RBUlRFRCx0LlVTRVJfQ0xPU0UsdC5BRF9CVUZGRVJJTkddLmZvckVhY2goZnVuY3Rpb24odCl7bi5hZHNNYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIodCxuLm9uQWRFdmVudCwhMSxuKX0pfSxZLnByb3RvdHlwZS5vbkFkRXZlbnQ9ZnVuY3Rpb24odCl7dmFyIG49dGhpcyxlPXQuZ2V0QWQoKTtzd2l0Y2godC50eXBlKXtjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLkFEX1BST0dSRVNTOmIuZGlzcGF0Y2hFdmVudCh5LmFkcy52aWRlby5wcm9ncmVzcyx0LmdldEFkRGF0YSgpKTticmVhaztjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLlNUQVJURUQ6dC5yZW1haW5pbmdUaW1lPXRoaXMuYWRzTWFuYWdlci5nZXRSZW1haW5pbmdUaW1lKCksdC5yZW1haW5pbmdUaW1lPD0wJiYodC5yZW1haW5pbmdUaW1lPTE1KSxlLmlzTGluZWFyKCl8fCh0aGlzLmJhbm5lclRpbWVvdXQ9d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmRpc3BhdGNoRXZlbnQoeS5hZHMuY29tcGxldGVkLHtyZXdhcmRBbGxvd2VkOiEhdC5yZXdhcmRBbGxvd2VkfSksbi50ZWFyRG93bigpfSwxZTMqKHQucmVtYWluaW5nVGltZSsxKSkpLGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5zdGFydGVkLHtjcmVhdGl2ZUlkOmUuZ2V0Q3JlYXRpdmVJZCgpLGFkSWQ6ZS5nZXRBZElkKCksZHVyYXRpb246ZS5nZXREdXJhdGlvbigpfSk7YnJlYWs7Y2FzZSBnb29nbGUuaW1hLkFkRXZlbnQuVHlwZS5DT01QTEVURTpiLmRpc3BhdGNoRXZlbnQoeS5hZHMuY29tcGxldGVkLHtyZXdhcmRBbGxvd2VkOiEwfSksdGhpcy50ZWFyRG93bigpO2JyZWFrO2Nhc2UgZ29vZ2xlLmltYS5BZEV2ZW50LlR5cGUuQUxMX0FEU19DT01QTEVURUQ6Y2FzZSBnb29nbGUuaW1hLkFkRXZlbnQuVHlwZS5VU0VSX0NMT1NFOnRoaXMudGVhckRvd24oKTticmVhaztjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLlBBVVNFRDp0aGlzLmFkc01hbmFnZXIucGF1c2UoKSxiLmRpc3BhdGNoRXZlbnQoeS5hZHMudmlkZW8ucGF1c2VkKTticmVhaztjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLkFEX0JVRkZFUklORzpiLmRpc3BhdGNoRXZlbnQoeS5hZHMudmlkZW8uYnVmZmVyaW5nKTticmVhaztjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLkNMSUNLOmIuZGlzcGF0Y2hFdmVudCh5LmFkcy52aWRlby5jbGlja2VkKTticmVhaztjYXNlIGdvb2dsZS5pbWEuQWRFdmVudC5UeXBlLlNLSVBQRUQ6Yi5kaXNwYXRjaEV2ZW50KHkuYWRzLnNraXBwZWQpLGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5jb21wbGV0ZWQpLGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJmRvY3VtZW50LmFjdGl2ZUVsZW1lbnQuYmx1cigpO2JyZWFrO2Nhc2UgZ29vZ2xlLmltYS5BZEV2ZW50LlR5cGUuSU1QUkVTU0lPTjpiLmRpc3BhdGNoRXZlbnQoeS5hZHMuaW1wcmVzc2lvbix7dXNlclZhbHVlSW5kaWNhdG9yOmZ1bmN0aW9uKHQpe3RyeXt2YXIgbj13aW5kb3cucGJqcy5nZXRCaWRSZXNwb25zZXNGb3JBZFVuaXRDb2RlKHQpLmJpZHM7d2luZG93LnBva2lBdWN0aW9uc1NlZW58fCh3aW5kb3cucG9raUF1Y3Rpb25zU2Vlbj17fSksd2luZG93LnBva2lBdWN0aW9uc1NlZW5bdF18fCh3aW5kb3cucG9raUF1Y3Rpb25zU2Vlblt0XT17fSk7dmFyIGU9MDtpZihuKXtmb3IodmFyIGkscj0wO3I8bi5sZW5ndGg7cisrKXdpbmRvdy5wb2tpQXVjdGlvbnNTZWVuW3RdW25bcl0uYXVjdGlvbklkXXx8KGk9bltyXS5jcG0pJiZlPGkmJihlPWkpO2ZvcihyPTA7cjxuLmxlbmd0aDtyKyspd2luZG93LnBva2lBdWN0aW9uc1NlZW5bdF1bbltyXS5hdWN0aW9uSWRdPSEwfXJldHVybiBlfWNhdGNoKHQpe2NvbnNvbGUuZXJyb3IodCl9cmV0dXJuIDB9KGIuZ2V0RGF0YUFubm90YXRpb25zKCkucG9zaXRpb249PT15LmFkcy5wb3NpdGlvbi5yZXdhcmRlZD8icmV3YXJkZWQiOiJ2aWRlbyIpfSl9fSxZLnByb3RvdHlwZS5vbkFkTG9hZGVyRXJyb3I9ZnVuY3Rpb24odCl7dGhpcy50ZWFyRG93bigpO3Q9dC5nZXRFcnJvciYmdC5nZXRFcnJvcigpLnRvU3RyaW5nKCl8fCJVbmtub3duIjtiLmRpc3BhdGNoRXZlbnQoeS5hZHMudmlkZW8ubG9hZGVyRXJyb3Ise21lc3NhZ2U6dH0pfSxZLnByb3RvdHlwZS5vbkFkRXJyb3I9ZnVuY3Rpb24odCl7dGhpcy50ZWFyRG93bigpO3Q9dC5nZXRFcnJvciYmdC5nZXRFcnJvcigpLnRvU3RyaW5nKCl8fCJVbmtub3duIjtiLmRpc3BhdGNoRXZlbnQoeS5hZHMudmlkZW8uZXJyb3Ise21lc3NhZ2U6dH0pfSxZLnByb3RvdHlwZS5tdXRlQWQ9ZnVuY3Rpb24oKXt2b2lkIDAhPT10aGlzLmFkc01hbmFnZXImJm51bGwhPXRoaXMuYWRzTWFuYWdlciYmdGhpcy5hZHNNYW5hZ2VyLnNldFZvbHVtZSgwKX0sWS5wcm90b3R5cGUuaXNBZFJ1bm5pbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ydW5uaW5nQWR9LFkpO2Z1bmN0aW9uIFkodCl7dmFyIG49dGhpczt0aGlzLmJhbm5lclRpbWVvdXQ9bnVsbCx0aGlzLmFsbG93ZWRUb1BsYXlBZD0hMSx0aGlzLnJ1bm5pbmdBZD0hMSx0aGlzLmN1cnJlbnRXaWR0aD02NDAsdGhpcy5jdXJyZW50SGVpZ2h0PTQ4MCx0aGlzLmN1cnJlbnRSZXF1ZXN0SXNNdXRlZD0hMSx0aGlzLnZvbHVtZT0xLHRoaXMuY2FuV2VBdXRvUGxheVdpdGhTb3VuZD1mdW5jdGlvbigpe3JldHVybiBIKG4sdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBXKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDppZighdGhpcy5ibGFua1ZpZGVvKXJldHVyblsyLCExXTt0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiB0LnRyeXMucHVzaChbMSwzLCw0XSksWzQsdGhpcy5ibGFua1ZpZGVvLnBsYXkoKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbMiwhMF07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxbMiwhMV07Y2FzZSA0OnJldHVyblsyXX19KX0pfSx0aGlzLnZpZGVvRWxlbWVudD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicG9raVNES1ZpZGVvQ29udGFpbmVyIiksdGhpcy5hZHNNYW5hZ2VyPW51bGwsdGhpcy52b2x1bWU9dCx0aGlzLmluaXRBZERpc3BsYXlDb250YWluZXIoKSx0aGlzLmluaXRCbGFua1ZpZGVvKCksdGhpcy5pbml0QWRzTG9hZGVyKCl9CmZ1bmN0aW9uICQoKXtyZXR1cm47fWZ1bmN0aW9uIHR0KCl7cmV0dXJuIHQ9dGhpcyxhPXZvaWQgMCxzPVByb21pc2UsZD1mdW5jdGlvbigpe3ZhciBlLGkscixvLGEscyx0O3JldHVybiBlPXRoaXMsaT1mdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAxOnJldHVybls0LHQuc2VudCgpLmpzb24oKV07Y2FzZSAyOnJldHVyblsyLHQuc2VudCgpLklTT107Y2FzZSAzOnJldHVyblsyXX19LHM9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmYVswXSl0aHJvdyBhWzFdO3JldHVybiBhWzFdfSx0cnlzOltdLG9wczpbXX0sdD17bmV4dDpuKDApLHRocm93Om4oMSkscmV0dXJuOm4oMil9LCJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJih0W1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQ7ZnVuY3Rpb24gbihuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKG4pe2lmKHIpdGhyb3cgbmV3IFR5cGVFcnJvcigiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLiIpO2Zvcig7czspdHJ5e2lmKHI9MSxvJiYoYT0yJm5bMF0/by5yZXR1cm46blswXT9vLnRocm93fHwoKGE9by5yZXR1cm4pJiZhLmNhbGwobyksMCk6by5uZXh0KSYmIShhPWEuY2FsbChvLG5bMV0pKS5kb25lKXJldHVybiBhO3N3aXRjaChvPTAsYSYmKG49WzImblswXSxhLnZhbHVlXSksblswXSl7Y2FzZSAwOmNhc2UgMTphPW47YnJlYWs7Y2FzZSA0OnJldHVybiBzLmxhYmVsKysse3ZhbHVlOm5bMV0sZG9uZTohMX07Y2FzZSA1OnMubGFiZWwrKyxvPW5bMV0sbj1bMF07Y29udGludWU7Y2FzZSA3Om49cy5vcHMucG9wKCkscy50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgoYT0wPChhPXMudHJ5cykubGVuZ3RoJiZhW2EubGVuZ3RoLTFdKXx8NiE9PW5bMF0mJjIhPT1uWzBdKSl7cz0wO2NvbnRpbnVlfWlmKDM9PT1uWzBdJiYoIWF8fG5bMV0+YVswXSYmblsxXTxhWzNdKSl7cy5sYWJlbD1uWzFdO2JyZWFrfWlmKDY9PT1uWzBdJiZzLmxhYmVsPGFbMV0pe3MubGFiZWw9YVsxXSxhPW47YnJlYWt9aWYoYSYmcy5sYWJlbDxhWzJdKXtzLmxhYmVsPWFbMl0scy5vcHMucHVzaChuKTticmVha31hWzJdJiZzLm9wcy5wb3AoKSxzLnRyeXMucG9wKCk7Y29udGludWV9bj1pLmNhbGwoZSxzKX1jYXRjaCh0KXtuPVs2LHRdLG89MH1maW5hbGx5e3I9YT0wfWlmKDUmblswXSl0aHJvdyBuWzFdO3JldHVybnt2YWx1ZTpuWzBdP25bMV06dm9pZCAwLGRvbmU6ITB9fShbbix0XSl9fX0sbmV3KHM9c3x8UHJvbWlzZSkoZnVuY3Rpb24oZSxuKXtmdW5jdGlvbiBpKHQpe3RyeXtvKGQubmV4dCh0KSl9Y2F0Y2godCl7bih0KX19ZnVuY3Rpb24gcih0KXt0cnl7byhkLnRocm93KHQpKX1jYXRjaCh0KXtuKHQpfX1mdW5jdGlvbiBvKHQpe3ZhciBuO3QuZG9uZT9lKHQudmFsdWUpOigobj10LnZhbHVlKWluc3RhbmNlb2Ygcz9uOm5ldyBzKGZ1bmN0aW9uKHQpe3Qobil9KSkudGhlbihpLHIpfW8oKGQ9ZC5hcHBseSh0LGF8fFtdKSkubmV4dCgpKX0pO3ZhciB0LGEscyxkfWZ1bmN0aW9uIG50KCl7cmV0dXJuIGQ9ZnVuY3Rpb24oKXt2YXIgbixlLGkscixvLGEscyxkLHQ7cmV0dXJuIGk9dGhpcyxyPWZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6aWYob3QpcmV0dXJuWzJdO3QubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQudHJ5cy5wdXNoKFsxLDQsLDVdKSxbNCxmZXRjaCgiLi90b3VjaENvbnRyb2xsZXJDb25maWcuanNvbiIpXTtjYXNlIDI6cmV0dXJuWzQsdC5zZW50KCkuanNvbigpXTtjYXNlIDM6cmV0dXJuKG49dC5zZW50KCkpJiYoKGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0IikpLnNyYz0iLy9nYW1lLWNkbi5wb2tpLmNvbS9zY3JpcHRzL3RvdWNoT3ZlcmxheUNvbnRyb2xsZXIuanMiLGUub25sb2FkPWZ1bmN0aW9uKCl7bmV3IHdpbmRvdy5PdmVybGF5Q29udHJvbGxlcihkb2N1bWVudC5ib2R5LG4pfSxkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGUpLG90PSEwKSxbMyw1XTtjYXNlIDQ6cmV0dXJuIGU9dC5zZW50KCksY29uc29sZS5sb2coZSksWzMsNV07Y2FzZSA1OnJldHVyblsyXX19LGQ9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmc1swXSl0aHJvdyBzWzFdO3JldHVybiBzWzFdfSx0cnlzOltdLG9wczpbXX0sdD17bmV4dDpjKDApLHRocm93OmMoMSkscmV0dXJuOmMoMil9LCJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJih0W1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLHQ7ZnVuY3Rpb24gYyhuKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKG4pe2lmKG8pdGhyb3cgbmV3IFR5cGVFcnJvcigiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLiIpO2Zvcig7ZDspdHJ5e2lmKG89MSxhJiYocz0yJm5bMF0/YS5yZXR1cm46blswXT9hLnRocm93fHwoKHM9YS5yZXR1cm4pJiZzLmNhbGwoYSksMCk6YS5uZXh0KSYmIShzPXMuY2FsbChhLG5bMV0pKS5kb25lKXJldHVybiBzO3N3aXRjaChhPTAscyYmKG49WzImblswXSxzLnZhbHVlXSksblswXSl7Y2FzZSAwOmNhc2UgMTpzPW47YnJlYWs7Y2FzZSA0OnJldHVybiBkLmxhYmVsKysse3ZhbHVlOm5bMV0sZG9uZTohMX07Y2FzZSA1OmQubGFiZWwrKyxhPW5bMV0sbj1bMF07Y29udGludWU7Y2FzZSA3Om49ZC5vcHMucG9wKCksZC50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoISgocz0wPChzPWQudHJ5cykubGVuZ3RoJiZzW3MubGVuZ3RoLTFdKXx8NiE9PW5bMF0mJjIhPT1uWzBdKSl7ZD0wO2NvbnRpbnVlfWlmKDM9PT1uWzBdJiYoIXN8fG5bMV0+c1swXSYmblsxXTxzWzNdKSl7ZC5sYWJlbD1uWzFdO2JyZWFrfWlmKDY9PT1uWzBdJiZkLmxhYmVsPHNbMV0pe2QubGFiZWw9c1sxXSxzPW47YnJlYWt9aWYocyYmZC5sYWJlbDxzWzJdKXtkLmxhYmVsPXNbMl0sZC5vcHMucHVzaChuKTticmVha31zWzJdJiZkLm9wcy5wb3AoKSxkLnRyeXMucG9wKCk7Y29udGludWV9bj1yLmNhbGwoaSxkKX1jYXRjaCh0KXtuPVs2LHRdLGE9MH1maW5hbGx5e289cz0wfWlmKDUmblswXSl0aHJvdyBuWzFdO3JldHVybnt2YWx1ZTpuWzBdP25bMV06dm9pZCAwLGRvbmU6ITB9fShbbix0XSl9fX0sbmV3KHM9KHM9YT10PXZvaWQgMCl8fFByb21pc2UpKGZ1bmN0aW9uKGUsbil7ZnVuY3Rpb24gaSh0KXt0cnl7byhkLm5leHQodCkpfWNhdGNoKHQpe24odCl9fWZ1bmN0aW9uIHIodCl7dHJ5e28oZC50aHJvdyh0KSl9Y2F0Y2godCl7bih0KX19ZnVuY3Rpb24gbyh0KXt2YXIgbjt0LmRvbmU/ZSh0LnZhbHVlKTooKG49dC52YWx1ZSlpbnN0YW5jZW9mIHM/bjpuZXcgcyhmdW5jdGlvbih0KXt0KG4pfSkpLnRoZW4oaSxyKX1vKChkPWQuYXBwbHkodCxhfHxbXSkpLm5leHQoKSl9KTt2YXIgdCxhLHMsZH1mdW5jdGlvbiBldCgpe2Zvcih2YXIgdD1NYXRoLmZsb29yKERhdGUubm93KCkvMWUzKSxuPSIiLGU9MDtlPDQ7ZSsrKW49U3RyaW5nLmZyb21DaGFyQ29kZSgyNTUmdCkrbix0Pj49ODtpZih3aW5kb3cuY3J5cHRvJiZjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzJiZVaW50MzJBcnJheSl7dmFyIGk9bmV3IFVpbnQzMkFycmF5KDEyKTtmb3IoY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhpKSxlPTA7ZTwxMjtlKyspbis9U3RyaW5nLmZyb21DaGFyQ29kZSgyNTUmaVtlXSl9ZWxzZSBmb3IoZT0wO2U8MTI7ZSsrKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUoTWF0aC5mbG9vcigyNTYqTWF0aC5yYW5kb20oKSkpO3JldHVybiBidG9hKG4pLnJlcGxhY2UoL1wrL2csIi0iKS5yZXBsYWNlKC9cLy9nLCJfIikucmVwbGFjZSgvPS9nLCIiKX1mdW5jdGlvbiBpdCh0KXtpZighdClyZXR1cm4gbnVsbDtmb3IodmFyIG49MCxlPUFycmF5LmZyb20odC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJwb2tpLWFkLXNsb3QiKSk7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl0saT1zdC5nZXQoaS5pZCk7aWYoaSlyZXR1cm4gaS5pZH1yZXR1cm4gbnVsbH12YXIgcnQ9ZSg2Nyksb3Q9ITEsYXQ9ITEsc3Q9bmV3IE1hcCxkdD1mdW5jdGlvbihlKXtnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKXt2YXIgdD1pdChlKSxuPXN0LmdldCh0fHwiIil8fG51bGw7biYmbi5ncHRTbG90JiYoay50cmFjayh5LnRyYWNraW5nLnNjcmVlbi5kZXN0cm95QWQse29wcG9ydHVuaXR5SWQ6bi5vcHBvcnR1bml0eUlkfSksZ29vZ2xldGFnLmRlc3Ryb3lTbG90cyhbbi5ncHRTbG90XSksbnVsbD09PSh0PWUucXVlcnlTZWxlY3RvcigiZGl2IyIrbi5pZCkpfHx2b2lkIDA9PT10fHx0LnJlbW92ZSgpLGUucmVtb3ZlQXR0cmlidXRlKCJkYXRhLXBva2ktYWQtaWQiKSxzdC5kZWxldGUobi5pZCkpfSl9LGN0PWZ1bmN0aW9uKCl7cmV0dXJuKGN0PU9iamVjdC5hc3NpZ258fGZ1bmN0aW9uKHQpe2Zvcih2YXIgbixlPTEsaT1hcmd1bWVudHMubGVuZ3RoO2U8aTtlKyspZm9yKHZhciByIGluIG49YXJndW1lbnRzW2VdKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYodFtyXT1uW3JdKTtyZXR1cm4gdH0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdXQ9e2dhbWVJZDpFKCJnYW1lX2lkIiksdmVyc2lvbklkOkUoImdhbWVfdmVyc2lvbl9pZCIpfSxsdD0oQXQucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dCYmKHQ9e30pLCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93KXt2YXIgbj10Lm9uUmVhZHksZT12b2lkIDA9PT1uP251bGw6bixuPXQub25BZGJsb2NrZWQsbj12b2lkIDA9PT1uP251bGw6bjtyZXR1cm4gdGhpcy5pbml0T3B0aW9ucz10LGUmJnRoaXMucmVnaXN0ZXJIYW5kbGVyKCJvblJlYWR5IixlKSxuJiZ0aGlzLnJlZ2lzdGVySGFuZGxlcigib25BZGJsb2NrZWQiLG4pLHRoaXMuaXNJbml0aWFsaXplZD9jb25zb2xlLmVycm9yKCJQb2tpIFNESyBoYXMgYWxyZWFkeSBiZWVuIGluaXRpYWxpemVkIik6KHRoaXMuaW5pdGlhbGl6aW5nUHJvbWlzZXx8KHRoaXMuaW5pdGlhbGl6aW5nUHJvbWlzZT10aGlzLmxhenlMb2FkSW5pdCgpKSx0aGlzLmluaXRpYWxpemluZ1Byb21pc2UpfX0sQXQucHJvdG90eXBlLmxhenlMb2FkSW5pdD1mdW5jdGlvbigpe3ZhciB0LGk9dGhpcyxuPXRoaXMuaW5pdE9wdGlvbnMsZT1uLmFkVGFnVXJsLHI9bi5hZFRpbWluZyxvPXZvaWQgMD09PXI/e306cixhPW4uY3VzdG9tQ3JpdGVyaWEscz12b2lkIDA9PT1hP3t9OmEsZD1uLmRlYnVnLHI9dm9pZCAwIT09ZCYmZCxhPW4ucHJlYmlkLGQ9dm9pZCAwPT09YT97fTphLGE9bi5hOSxjPXZvaWQgMD09PWE/e306YSxhPW4udm9sdW1lLHU9dm9pZCAwPT09YT8xOmEsbD1uLndhdGVyZmFsbFJldHJpZXMsbj1uLndyYXBwZXIsQT12b2lkIDA9PT1uP2RvY3VtZW50LmJvZHk6bixtPXBhcnNlSW50KEUoInNpdGVfaWQiKSwxMCl8fDA7d2luZG93Lmdvb2dsZXRhZz13aW5kb3cuZ29vZ2xldGFnfHx7Y21kOltdfSx0aGlzLnNldHVwRGVmYXVsdEV2ZW50cygpLGsuc2V0dXBEZWZhdWx0RXZlbnRzKCksdD1kLHdpbmRvdy5wYmpzPXdpbmRvdy5wYmpzfHx7fSx3aW5kb3cucGJqcy5xdWU9d2luZG93LnBianMucXVlfHxbXSx3aW5kb3cucGJqcy5xdWUucHVzaChmdW5jdGlvbigpe3dpbmRvdy5wYmpzLmFkZEFkVW5pdHModC5hZFVuaXRzfHx6KSx3aW5kb3cucGJqcy5zZXRDb25maWcoVChUKHt9LEMpLHQuY29uZmlnKSksd2luZG93LnBianMuYmlkZGVyU2V0dGluZ3M9e2Rpc3RyaWN0bTp7YmlkQ3BtQWRqdXN0bWVudDpmdW5jdGlvbih0KXtyZXR1cm4uODUqdH19LHJpY2hhdWRpZW5jZTp7YmlkQ3BtQWRqdXN0bWVudDpmdW5jdGlvbih0KXtyZXR1cm4uOSp0fX19fSk7dmFyIHA9Y3Qoe30sdik7ZT8oQXQuaXNQb2tpUGxhdGZvcm09ITAscD1jdChjdCh7fSxwKSx7YWRUYWdVcmw6ZSxjdXN0b21Dcml0ZXJpYTpzLGFkVGltaW5nOm99KSk6QXQuaXNQb2tpUGxhdGZvcm09ITE7cz0kOyhBdC5pc1Bva2lQbGF0Zm9ybXx8dGhpcy5kZWJ1ZykmJihzPWZ1bmN0aW9uKCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpfSk7dmFyIG89dHQsZj10aGlzLmluaXRPcHRpb25zLmNvdW50cnl8fEUoImNvdW50cnkiKTtyZXR1cm4gZiYmKG89ZnVuY3Rpb24oKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGYpfSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsdGhpcy5yZXNpemUuYmluZCh0aGlzKSwhMSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHRoaXMub25NZXNzYWdlLmJpbmQodGhpcyksITEpLHRoaXMuZGVidWdJc092ZXJ3cml0dGVufHx0aGlzLnNldERlYnVnKHRoaXMuZGVidWd8fHIpLHRoaXMuZGVidWdUb3VjaE92ZXJsYXlDb250cm9sbGVyJiYoZygpfHxoKCkpJiZudCgpLFByb21pc2UuYWxsKFtzKCksbygpLFYoIiIpLFYoIiIpLFYocnQuYSksVigiIildKS5jYXRjaChmdW5jdGlvbigpe2IuZGlzcGF0Y2hFdmVudCh5LmFkYmxvY2tlZCl9KS50aGVuKGZ1bmN0aW9uKHQpe3ZhciBuLGU7dm9pZCAwIT09dCYmKG49dFswXSx0PXRbMV0sdD1jdChjdCh7fSxwKSx7Y291bnRyeTp0fSksbiYmKHV0LmdhbWVJZHx8KHV0LmdhbWVJZD1uLmdhbWVJZCksWyI3ZmIxZmQ0NS0yNGNlLTRhZGUtYjVjNC05ZWU1NWVjOTk1MjYiXS5pbmNsdWRlcyh1dC5nYW1lSWQpJiYoZygpfHxoKCkpJiZudCgpLHQuYWRUaW1pbmc9bi5hZFRpbWluZyx0LmN1c3RvbUNyaXRlcmlhPWN0KGN0KHt9LHQuY3VzdG9tQ3JpdGVyaWEpLHtwNGRfZ2FtZV9pZDp1dC5nYW1lSWR9KSksaS5kZWJ1ZyYmKHQuYWRUaW1pbmcuc3RhcnRBZHNBZnRlcj0wKSxpLmVuYWJsZVNldHRpbmdzKHQpLChuPVUoaS5jb3VudHJ5KSkmJihBdC5HZXRJc1Bva2lQbGF0Zm9ybSgpfHxBdC5HZXRJc1Bva2lJRnJhbWUoKSkmJncoKSxpLnBsYXllclNraW49bmV3IGooe3dyYXBwZXI6QX0pLGkuaW1hPW5ldyBKKHUpLGkucGxheWVyU2tpbi5zZXR1cEV2ZW50cyhpKSxpLnN0YXJ0U3RhcnRBZHNBZnRlclRpbWVyT25Jbml0JiZpLmFkVGltaW5ncy5zdGFydFN0YXJ0QWRzQWZ0ZXJUaW1lcigpLGkud2F0ZXJmYWxsPW5ldyBMKGkuaW1hLHt0aW1pbmc6aS5hZFRpbWluZ3MsdG90YWxSZXRyaWVzOmwsYWRUYWdVcmw6dC5hZFRhZ1VybCxzaXRlSUQ6bX0pLHdpbmRvdy5nb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKXt3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmFkZEV2ZW50TGlzdGVuZXIoInNsb3RSZW5kZXJFbmRlZCIsZnVuY3Rpb24odCl7dD10LnNsb3QuZ2V0U2xvdEVsZW1lbnRJZCgpLHQ9c3QuZ2V0KHQpO3QmJnQuZ3B0U2xvdCYmay50cmFjayh5LnRyYWNraW5nLmFkcy5kaXNwbGF5LmltcHJlc3Npb24se3NpemU6dC5zaXplLG9wcG9ydHVuaXR5SWQ6dC5vcHBvcnR1bml0eUlkLGFkVW5pdFBhdGg6dC5hZFVuaXRQYXRofSl9KSx3aW5kb3cuZ29vZ2xldGFnLnB1YmFkcygpLmFkZEV2ZW50TGlzdGVuZXIoImltcHJlc3Npb25WaWV3YWJsZSIsZnVuY3Rpb24odCl7dD10LnNsb3QuZ2V0U2xvdEVsZW1lbnRJZCgpLHQ9c3QuZ2V0KHQpO3QmJnQuZ3B0U2xvdCYmay50cmFjayh5LnRyYWNraW5nLmFkcy5kaXNwbGF5LnZpZXdhYmxlLHtzaXplOnQuc2l6ZSxvcHBvcnR1bml0eUlkOnQub3Bwb3J0dW5pdHlJZCxhZFVuaXRQYXRoOnQuYWRVbml0UGF0aH0pfSl9KSxlPWMsd2luZG93LmFwc3RhZyYmd2luZG93LmFwc3RhZy5pbml0KGUuc2V0dGluZ3N8fFQoe3B1YklEOiJlMzJmMTQyMy0yOGJjLTQzZWQtOGFiMC01YWU2YjQ0NDljZjgiLGFkU2VydmVyOiJnb29nbGV0YWciLHZpZGVvQWRTZXJ2ZXI6IkRGUCJ9LG4/e2dkcHI6e2NtcFRpbWVvdXQ6MWU0fX06e30pLGZ1bmN0aW9uKCl7ST0hMCxlLmNhbGxiYWNrJiZlLmNhbGxiYWNrKCl9KSxpLmlzSW5pdGlhbGl6ZWQ9ITAsYi5kaXNwYXRjaEV2ZW50KHkucmVhZHkpKX0pfSxBdC5wcm90b3R5cGUucmVxdWVzdEFkPWZ1bmN0aW9uKG8pe3ZhciBhPXRoaXM7dm9pZCAwPT09byYmKG89e30pO2Z1bmN0aW9uIHQoKXt2YXIgdD12b2lkIDA9PT0oZT1vLmF1dG9TdGFydCl8fGUsbj12b2lkIDA9PT0ocj1vLmN1c3RvbUNyaXRlcmlhKT97fTpyLGU9dm9pZCAwPT09KGk9by5vbkZpbmlzaCk/bnVsbDppLGk9dm9pZCAwPT09KHI9by5vblN0YXJ0KT9udWxsOnIscj12b2lkIDA9PT0ocj1vLnBvc2l0aW9uKT9udWxsOnI7aWYoYS5hdXRvU3RhcnRPblJlYWR5PSExIT09dCxlJiZhLnJlZ2lzdGVySGFuZGxlcigib25GaW5pc2giLGUpLGkmJmEucmVnaXN0ZXJIYW5kbGVyKCJvblN0YXJ0IixpKSxhLmZvcmNlRGlzYWJsZUNvbW1lcmNpYWxCcmVhayYmW3kuYWRzLnBvc2l0aW9uLm1pZHJvbGwseS5hZHMucG9zaXRpb24ucHJlcm9sbF0uaW5jbHVkZXMocikpZSYmZSgpO2Vsc2V7aWYoIWEuc2RrQm9vdGVkKXJldHVybiBiLmRpc3BhdGNoRXZlbnQoeS5hZHMuZXJyb3Ise21lc3NhZ2U6IlJlcXVlc3RpbmcgYWQgb24gdW5ib290ZWQgU0RLIn0pLHZvaWQgYS5zZGtOb3RCb290ZWRCdXRDYWxsZWQoKTthLnNka0ltYUVycm9yP2IuZGlzcGF0Y2hFdmVudCh5LmFkcy5lcnJvcix7bWVzc2FnZToiQWRibG9ja2VyIGhhcyBiZWVuIGRldGVjdGVkIn0pOiFnKCkmJiFoKCl8fHI9PT15LmFkcy5wb3NpdGlvbi5yZXdhcmRlZD9udWxsIT09ciYmcyhyLHkuYWRzLnBvc2l0aW9uKT9hLmltYS5pc0FkUnVubmluZygpfHxhLndhdGVyZmFsbC5pc1J1bm5pbmcoKT9iLmRpc3BhdGNoRXZlbnQoeS5hZHMuYnVzeSk6YS5hZFJlYWR5P2IuZGlzcGF0Y2hFdmVudCh5LmFkcy5yZWFkeSk6ciE9PXkuYWRzLnBvc2l0aW9uLnByZXJvbGx8fGEuYWRUaW1pbmdzLnByZXJvbGxQb3NzaWJsZSgpP3I9PT15LmFkcy5wb3NpdGlvbi5yZXdhcmRlZHx8YS5hZFRpbWluZ3MucmVxdWVzdFBvc3NpYmxlKCk/KGU9Y3QoY3QoY3Qoe30sYS5nZW5lcmljQ3JpdGVyaWEoKSksYS5jcml0ZXJpYSkse3Bvc2l0aW9uOnJ9KSwhQXQuaXNQb2tpUGxhdGZvcm0mJnIhPT15LmFkcy5wb3NpdGlvbi5yZXdhcmRlZHx8KGU9Y3QoY3Qoe30sZSksbikpLGEucGxheWVyU2tpbi5zaG93V2l0aE9wYWNpdHkoKSxhLnJlc2l6ZSgpLGEud2F0ZXJmYWxsLnN0YXJ0KGUscikpOmIuZGlzcGF0Y2hFdmVudCh5LmFkcy5saW1pdCx7cmVhc29uOnkuaW5mby5tZXNzYWdlcy50aW1lTGltaXR9KTpiLmRpc3BhdGNoRXZlbnQoeS5hZHMubGltaXQse3JlYXNvbjp5LmluZm8ubWVzc2FnZXMucHJlcm9sbExpbWl0fSk6Y29uc29sZS5lcnJvcigiUE9LSS1TREs6IEludmFsaWQgcG9zaXRpb24iKTpiLmRpc3BhdGNoRXZlbnQoeS5hZHMuZXJyb3Ise3JlYXNvbjoiSW50ZXJzdGl0aWFscyBhcmUgZGlzYWJsZWQgb24gbW9iaWxlIn0pfX10aGlzLmlzSW5pdGlhbGl6ZWQ/dCgpOnRoaXMubGF6eUxvYWRJbml0KCkudGhlbih0KX0sQXQucHJvdG90eXBlLmRpc3BsYXlBZD1mdW5jdGlvbihkLGMpe2Z1bmN0aW9uIHQoKXtiLmNsZWFyQW5ub3RhdGlvbnMoKTt2YXIgbixlLGkscix0PWV0KCksbz15LmFkcy5wb3NpdGlvbi5kaXNwbGF5O2lmKGMpe2lmKCF1LnNka0Jvb3RlZClyZXR1cm4gYi5kaXNwYXRjaEV2ZW50KHkuYWRzLmVycm9yLHttZXNzYWdlOiJSZXF1ZXN0aW5nIGFkIG9uIHVuYm9vdGVkIFNESyIscG9zaXRpb246b30pLHZvaWQgdS5zZGtOb3RCb290ZWRCdXRDYWxsZWQoKTtpZihkKWlmKHUuc2RrSW1hRXJyb3IpYi5kaXNwYXRjaEV2ZW50KHkuYWRzLmVycm9yLHttZXNzYWdlOiJBZGJsb2NrZXIgaGFzIGJlZW4gZGV0ZWN0ZWQiLHBvc2l0aW9uOm99KTtlbHNle2lmKHM9YywhKGcoKXx8aCgpfHxbIjk3MHgyNTAiLCIzMDB4MjUwIiwiNzI4eDkwIiwiMTYweDYwMCIsIjMyMHg1MCJdLmluY2x1ZGVzKHMpKXx8KGcoKXx8aCgpKSYmIVsiMzIweDUwIl0uaW5jbHVkZXMocykpcmV0dXJuIGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5lcnJvcix7cmVhc29uOiJEaXNwbGF5IHNpemUgIitjKyIgaXMgbm90IHN1cHBvcnRlZCBvbiB0aGlzIGRldmljZSIscG9zaXRpb246b30pO3ZhciBhPWN0KGN0KHt9LHUuZ2VuZXJpY0NyaXRlcmlhKCkpLHUuY3JpdGVyaWEpLHM9ZnVuY3Rpb24obix0KXt2YXIgZT1pdChuKSxpPXN0LmdldChlfHwiIil8fG51bGw7aWYoaSl7ZT10LnNwbGl0KCJ4IikubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBwYXJzZUludCh0LDEwKX0pfHxbMCwwXTtpZihpLndpZHRoPT09ZVswXSYmaS5oZWlnaHQ9PT1lWzFdKXJldHVybiBpLmlkO2R0KG4pfXZhciByPWZ1bmN0aW9uKHQpe3ZhciBuPXQuc3BsaXQoIngiKS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfSksZT0iLzIxNjgyMTk4NjA3L2RlYnVnLWRpc3BsYXkvZGVidWctZGlzcGxheS0iK3QsaT0iZGVza3RvcCI7ZygpJiYoaT0ibW9iaWxlIiksaCgpJiYoaT0idGFibGV0Iik7dmFyIHI9cGFyc2VJbnQoRSgic2l0ZV9pZCIpLDEwKXx8MDtyZXR1cm4gYXR8fChlPWx0LkdldElzUG9raUlGcmFtZSgpPyIvMjE2ODIxOTg2MDcvIitpKyJfaW5nYW1lXyIrdCsiLyIrcisiXyIraSsiX2luZ2FtZV8iK3Q6Ii8yMTY4MjE5ODYwNy9leHRlcm5hbF8iK2krIl9kaXNwbGF5X2luZ2FtZS9leHRlcm5hbF8iK2krIl9pbmdhbWVfIit0KSx7aWQ6InBva2ktIitldCgpLGFkVW5pdFBhdGg6ZSxzaXplOnQsd2lkdGg6blswXSxoZWlnaHQ6blsxXSxyZWZyZXNoOiExfX0odCk7cmV0dXJuIHN0LnNldChyLmlkLHIpLGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9ci5pZCx0LmNsYXNzTmFtZT0icG9raS1hZC1zbG90Iix0LnN0eWxlLndpZHRoPXIud2lkdGgrInB4Iix0LnN0eWxlLmhlaWdodD1yLmhlaWdodCsicHgiLHQuc2V0QXR0cmlidXRlKCJkYXRhLXBva2ktYWQtc2l6ZSIsci5zaXplKSxuLmFwcGVuZENoaWxkKHQpLG4uc2V0QXR0cmlidXRlKCJkYXRhLXBva2ktYWQtaWQiLHIuaWQpLHIuZ3B0U2xvdD1nb29nbGV0YWcuZGVmaW5lU2xvdChyLmFkVW5pdFBhdGgsW3Iud2lkdGgsci5oZWlnaHRdLHIuaWQpLmFkZFNlcnZpY2UoZ29vZ2xldGFnLnB1YmFkcygpKSxnb29nbGV0YWcuZW5hYmxlU2VydmljZXMoKSxzdC5zZXQoci5pZCxyKX0pLHIuaWR9KGQsYyk7aT1zLHI9YSxnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKXt2YXIgdCxlPXN0LmdldChpKTtlJiZlLmdwdFNsb3QmJihudWxsPT09KHQ9ZS5ncHRTbG90KXx8dm9pZCAwPT09dHx8dC5jbGVhclRhcmdldGluZygpLE9iamVjdC5rZXlzKHIpLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG47bnVsbD09PShuPWUuZ3B0U2xvdCl8fHZvaWQgMD09PW58fG4uc2V0VGFyZ2V0aW5nKHQsclt0XSl9KSl9KSxuPXMsZT10LGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpe3ZhciB0PXN0LmdldChuKTt0JiZ0LmdwdFNsb3QmJih0Lm9wcG9ydHVuaXR5SWQ9ZSxrLnRyYWNrKHkudHJhY2tpbmcuYWRzLmRpc3BsYXkucmVxdWVzdGVkLHtzaXplOnQuc2l6ZSxvcHBvcnR1bml0eUlkOnQub3Bwb3J0dW5pdHlJZCxhZFVuaXRQYXRoOnQuYWRVbml0UGF0aH0pLHQucmVmcmVzaCYmdC5ncHRTbG90P2dvb2dsZXRhZy5wdWJhZHMoKS5yZWZyZXNoKFt0LmdwdFNsb3RdKTooZ29vZ2xldGFnLmRpc3BsYXkodC5pZCksdC5yZWZyZXNoPSEwLHN0LnNldCh0LmlkLHQpKSl9KX1lbHNlIGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5lcnJvcix7bWVzc2FnZToiUHJvdmlkZWQgY29udGFpbmVyIGRvZXMgbm90IGV4aXN0Iixwb3NpdGlvbjpvfSl9ZWxzZSBiLmRpc3BhdGNoRXZlbnQoeS5hZHMuZXJyb3Ise21lc3NhZ2U6Ik5vIGFkIHNpemUgZ2l2ZW4sIHVzYWdlOiBkaXNwbGF5QWQoPGNvbnRhaW5lcj4sIDxzaXplPikiLHBvc2l0aW9uOm99KX12YXIgdT10aGlzO3RoaXMuaXNJbml0aWFsaXplZD90KCk6dGhpcy5sYXp5TG9hZEluaXQoKS50aGVuKHQpfSxBdC5wcm90b3R5cGUuZGVzdHJveUFkPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtpZighZS5zZGtCb290ZWQpcmV0dXJuIGIuZGlzcGF0Y2hFdmVudCh5LmFkcy5kaXNwbGF5RXJyb3Ise21lc3NhZ2U6IkF0dGVtcHRpbmcgZGVzdHJveUFkIG9uIHVuYm9vdGVkIFNESyJ9KSx2b2lkIGUuc2RrTm90Qm9vdGVkQnV0Q2FsbGVkKCk7ZS5zZGtJbWFFcnJvcj9iLmRpc3BhdGNoRXZlbnQoeS5hZHMuZGlzcGxheUVycm9yLHttZXNzYWdlOiJBZGJsb2NrZXIgaGFzIGJlZW4gZGV0ZWN0ZWQifSk6KHQ9dHx8ZG9jdW1lbnQuYm9keSxkdCh0KSl9dmFyIGU9dGhpczt0aGlzLmlzSW5pdGlhbGl6ZWQ/bigpOnRoaXMubGF6eUxvYWRJbml0KCkudGhlbihuKX0sQXQucHJvdG90eXBlLnN0YXJ0U3RhcnRBZHNBZnRlclRpbWVyPWZ1bmN0aW9uKCl7dGhpcy5zZGtCb290ZWQmJiF0aGlzLnNka0ltYUVycm9yP3RoaXMuYWRUaW1pbmdzLnN0YXJ0U3RhcnRBZHNBZnRlclRpbWVyKCk6dGhpcy5zdGFydFN0YXJ0QWRzQWZ0ZXJUaW1lck9uSW5pdD0hMH0sQXQucHJvdG90eXBlLmVuYWJsZVNldHRpbmdzPWZ1bmN0aW9uKHQpe3RoaXMuY3JpdGVyaWE9Y3Qoe30sdC5jdXN0b21Dcml0ZXJpYSksdGhpcy5hZFRpbWluZ3M9bmV3IFModC5hZFRpbWluZyksdGhpcy5jb3VudHJ5PXQuY291bnRyeX0sQXQucHJvdG90eXBlLnRvZ2dsZVBsYXllckFkdmVydGlzaW5nQ29uc2VudD1mdW5jdGlvbih0KXt2YXIgbixlLGk7dD8obj1wYXJzZUludChmdW5jdGlvbihuKXtpZighUilyZXR1cm4gTVtuXTt0cnl7cmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKG4pfWNhdGNoKHQpe3JldHVybiBNW25dfX0oInBsYXllckFnZSIpLDEwKXx8MCxlPVUoaT10aGlzLmNvdW50cnkpLHQ9Ri5pbmNsdWRlcyhpKSxpPVEoaSksKGV8fHR8fFEpJiYoZSYmbjw9MTJ8fHQmJm48PTE2fHxpJiZuPD0xNik/dGhpcy5kaXNhYmxlUHJvZ3JhbW1hdGljKCk6dGhpcy5lbmFibGVQcm9ncmFtbWF0aWMoKSk6dGhpcy5kaXNhYmxlUHJvZ3JhbW1hdGljKCl9LEF0LnByb3RvdHlwZS5kaXNhYmxlUHJvZ3JhbW1hdGljPWZ1bmN0aW9uKCl7QXQuY2hpbGREaXJlY3RlZD0hMCx0aGlzLnByb2dyYW1tYXRpY0Fkc0VuYWJsZWQ9ITF9LEF0LnByb3RvdHlwZS5lbmFibGVQcm9ncmFtbWF0aWM9ZnVuY3Rpb24oKXtBdC5jaGlsZERpcmVjdGVkPSExLHRoaXMucHJvZ3JhbW1hdGljQWRzRW5hYmxlZD0hMH0sQXQucHJvdG90eXBlLmdldFByb2dyYW1tYXRpY0Fkc0VuYWJsZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9ncmFtbWF0aWNBZHNFbmFibGVkfSxBdC5wcm90b3R5cGUuc2V0RGVidWc9ZnVuY3Rpb24odCl7dmFyIG49dGhpczt0aGlzLmRlYnVnSXNPdmVyd3JpdHRlbj90JiZrLnRyYWNrKHkudHJhY2tpbmcuZGVidWdUcnVlSW5Qcm9kdWN0aW9uKTooay5zZXREZWJ1Zyh0KSxiLnNldERlYnVnKHQpLHRoaXMud2F0ZXJmYWxsP3RoaXMud2F0ZXJmYWxsLnNldERlYnVnKHQpOmIuYWRkRXZlbnRMaXN0ZW5lcih5LnJlYWR5LGZ1bmN0aW9uKCl7bi53YXRlcmZhbGwmJm4ud2F0ZXJmYWxsLnNldERlYnVnKHQpfSksYXQ9dCx0aGlzLmRlYnVnPXQpfSxBdC5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKCl7dmFyIHQsbj10aGlzO2lmKCF0aGlzLnNka0Jvb3RlZClyZXR1cm4gdGhpcy5zZGtOb3RCb290ZWRCdXRDYWxsZWQoKTt0aGlzLnNka0ltYUVycm9yfHwoMCE9PSh0PXRoaXMucGxheWVyU2tpbi5nZXRWaWRlb0JvdW5kcygpKS53aWR0aCYmMCE9PXQuaGVpZ2h0P3RoaXMuaW1hLnJlc2l6ZSh0LndpZHRoLHQuaGVpZ2h0KTpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5yZXNpemUoKX0sMTAwKSl9LEF0LnByb3RvdHlwZS5vbk1lc3NhZ2U9ZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0LmRhdGEudHlwZSlzd2l0Y2godC5kYXRhLnR5cGUpe2Nhc2UidG9nZ2xlTm9uUGVyc29uYWxpemVkIjp0aGlzLnRvZ2dsZU5vblBlcnNvbmFsaXplZCghKCF0LmRhdGEuY29udGVudHx8IXQuZGF0YS5jb250ZW50Lm5vblBlcnNvbmFsaXplZCkpO2JyZWFrO2Nhc2Uic2V0UGVyc29uYWxpemVkQURDb25zZW50Ijp0aGlzLnRvZ2dsZU5vblBlcnNvbmFsaXplZCghKHQuZGF0YS5jb250ZW50JiZ0LmRhdGEuY29udGVudC5jb25zZW50KSksdGhpcy5zZXRDb25zZW50U3RyaW5nKHQuZGF0YS5jb250ZW50P3QuZGF0YS5jb250ZW50LmNvbnNlbnRTdHJpbmc6IiIpO2JyZWFrO2Nhc2UiZm9yY2VEaXNhYmxlQ29tbWVyY2lhbEJyZWFrIjp0aGlzLmZvcmNlRGlzYWJsZUNvbW1lcmNpYWxCcmVhaz0hMH19LEF0LnByb3RvdHlwZS5zdGFydEFkPWZ1bmN0aW9uKCl7aWYoIXRoaXMuc2RrQm9vdGVkKXJldHVybiB0aGlzLnNka05vdEJvb3RlZEJ1dENhbGxlZCgpO3RoaXMuc2RrSW1hRXJyb3J8fCh0aGlzLmFkUmVhZHk/KHRoaXMucGxheWVyU2tpbi5zaG93KCksdGhpcy5yZXNpemUoKSx0aGlzLmltYS5zdGFydFBsYXliYWNrKCkpOmIuZGlzcGF0Y2hFdmVudCh5LmFkcy5lcnJvcix7bWVzc2FnZToiTm8gYWRzIHJlYWR5IHRvIHN0YXJ0In0pKX0sQXQucHJvdG90eXBlLnN0YXJ0QWRDbGlja2VkPWZ1bmN0aW9uKCl7InVuZGVmaW5lZCIhPXR5cGVvZiBuYXZpZ2F0b3ImJi8oaVBhZHxpUGhvbmV8aVBvZCkvZ2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSYmdGhpcy5zdGFydEFkRW5hYmxlZCYmKHRoaXMuc3RhcnRBZEVuYWJsZWQ9ITEsdGhpcy5wbGF5ZXJTa2luLmhpZGVTdGFydEFkQnV0dG9uKCksdGhpcy5pbWEuc3RhcnRJT1NQbGF5YmFjaygpKX0sQXQucHJvdG90eXBlLnN0b3BBZD1mdW5jdGlvbigpe2lmKCF0aGlzLnNka0Jvb3RlZClyZXR1cm4gdGhpcy5zZGtOb3RCb290ZWRCdXRDYWxsZWQoKTt0aGlzLnNka0ltYUVycm9yfHwodGhpcy53YXRlcmZhbGwuc3RvcFdhdGVyZmFsbCgpLHRoaXMuaW1hLnN0b3BQbGF5YmFjaygpLHRoaXMucGxheWVyU2tpbi5oaWRlKCkpfSxBdC5wcm90b3R5cGUucmVzdW1lQWQ9ZnVuY3Rpb24oKXtpZighdGhpcy5zZGtCb290ZWQpcmV0dXJuIHRoaXMuc2RrTm90Qm9vdGVkQnV0Q2FsbGVkKCk7dGhpcy5zZGtJbWFFcnJvcnx8KHRoaXMucGxheWVyU2tpbi5oaWRlUGF1c2VCdXR0b24oKSx0aGlzLmltYS5yZXN1bWVBZCgpKX0sQXQucHJvdG90eXBlLnNraXBBZD1mdW5jdGlvbigpe3RoaXMuc3RvcEFkKCksdGhpcy5jYWxsSGFuZGxlcigib25GaW5pc2giLHt0eXBlOnkuYWRzLmNvbXBsZXRlZCxyZXdhcmRBbGxvd2VkOiEwfSl9LEF0LnByb3RvdHlwZS5tdXRlQWQ9ZnVuY3Rpb24oKXtpZighdGhpcy5zZGtCb290ZWQpcmV0dXJuIHRoaXMuc2RrTm90Qm9vdGVkQnV0Q2FsbGVkKCk7dGhpcy5zZGtJbWFFcnJvcnx8dGhpcy5pbWEubXV0ZUFkKCl9LEF0LnByb3RvdHlwZS5yZWdpc3RlckhhbmRsZXI9ZnVuY3Rpb24odCxuKXt0aGlzLmhhbmRsZXJzW3RdPW59LEF0LnByb3RvdHlwZS5jYWxsSGFuZGxlcj1mdW5jdGlvbih0KXtmb3IodmFyIG49W10sZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspbltlLTFdPWFyZ3VtZW50c1tlXTsiZnVuY3Rpb24iPT10eXBlb2YgdGhpcy5oYW5kbGVyc1t0XSYmdGhpcy5oYW5kbGVyc1t0XShuKX0sQXQucHJvdG90eXBlLnNldHVwRGVmYXVsdEV2ZW50cz1mdW5jdGlvbigpe3ZhciBuPXRoaXM7Yi5hZGRFdmVudExpc3RlbmVyKHkucmVhZHksZnVuY3Rpb24oKXtuLnNka0Jvb3RlZD0hMCxuLmNhbGxIYW5kbGVyKCJvblJlYWR5Iil9KSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZGJsb2NrZWQsZnVuY3Rpb24oKXtuLnNka0Jvb3RlZD0hMCxuLnNka0ltYUVycm9yPSEwLG4uY2FsbEhhbmRsZXIoIm9uQWRibG9ja2VkIil9KSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMucmVhZHksZnVuY3Rpb24oKXtuLmFkUmVhZHk9ITAsbi5hdXRvU3RhcnRPblJlYWR5JiZuLnN0YXJ0QWQoKX0pLGIuYWRkRXZlbnRMaXN0ZW5lcih5LmFkcy5zdGFydGVkLGZ1bmN0aW9uKCl7bi5wbGF5ZXJTa2luLmhpZGVTcGlubmVyKCksbi5jYWxsSGFuZGxlcigib25TdGFydCIse3R5cGU6eS5hZHMubGltaXR9KX0pLGIuYWRkRXZlbnRMaXN0ZW5lcih5LmFkcy52aWRlby5wYXVzZWQsZnVuY3Rpb24oKXtuLnBsYXllclNraW4uc2hvd1BhdXNlQnV0dG9uKCl9KSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMubGltaXQsZnVuY3Rpb24oKXtuLmNhbGxIYW5kbGVyKCJvbkZpbmlzaCIse3R5cGU6eS5hZHMubGltaXQscmV3YXJkQWxsb3dlZDohMX0pfSksYi5hZGRFdmVudExpc3RlbmVyKHkuYWRzLnN0b3BwZWQsZnVuY3Rpb24oKXtuLmNhbGxIYW5kbGVyKCJvbkZpbmlzaCIse3R5cGU6eS5hZHMuc3RvcHBlZCxyZXdhcmRBbGxvd2VkOiExfSl9KSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMuZXJyb3IsZnVuY3Rpb24oKXtuLmNhbGxIYW5kbGVyKCJvbkZpbmlzaCIse3R5cGU6eS5hZHMuZXJyb3IscmV3YXJkQWxsb3dlZDohMX0pfSksYi5hZGRFdmVudExpc3RlbmVyKHkuYWRzLmJ1c3ksZnVuY3Rpb24oKXtuLmNhbGxIYW5kbGVyKCJvbkZpbmlzaCIse3R5cGU6eS5hZHMuYnVzeSxyZXdhcmRBbGxvd2VkOiExfSl9KSxiLmFkZEV2ZW50TGlzdGVuZXIoeS5hZHMuY29tcGxldGVkLGZ1bmN0aW9uKHQpe24uY2FsbEhhbmRsZXIoIm9uRmluaXNoIix7dHlwZTp5LmFkcy5jb21wbGV0ZWQscmV3YXJkQWxsb3dlZDohIXQucmV3YXJkQWxsb3dlZH0pfSksW3kuYWRzLmxpbWl0LHkuYWRzLnN0b3BwZWQseS5hZHMuZXJyb3IseS5hZHMuYnVzeSx5LmFkcy5jb21wbGV0ZWRdLmZvckVhY2goZnVuY3Rpb24odCl7Yi5hZGRFdmVudExpc3RlbmVyKHQsZnVuY3Rpb24oKXtuLnBsYXllclNraW4mJm4ucGxheWVyU2tpbi5oaWRlKCksbi5hZFJlYWR5PSExfSl9KX0sQXQucHJvdG90eXBlLmdlbmVyaWNDcml0ZXJpYT1mdW5jdGlvbigpe3ZhciB0PXt9LG49ZW5jb2RlVVJJQ29tcG9uZW50KEUoInRhZyIpfHwiIiksZT1lbmNvZGVVUklDb21wb25lbnQoRSgic2l0ZV9pZCIpfHwiIiksaT1lbmNvZGVVUklDb21wb25lbnQoRSgiZXhwZXJpbWVudCIpfHwiIikscj1lbmNvZGVVUklDb21wb25lbnQoRSgiY2F0ZWdvcmllcyIpfHwiIik7cmV0dXJuIHQudGFnPW4sdC50YWdfc2l0ZT1uKyJ8IitlLHQuc2l0ZV9pZD1lLHQuZXhwZXJpbWVudD1pLHQuY2F0ZWdvcmllcz1yLHRoaXMucHJvZ3JhbW1hdGljQWRzRW5hYmxlZHx8KHQuZGlzYWJsZV9wcm9ncmFtbWF0aWM9MSksdH0sQXQucHJvdG90eXBlLnNldFZvbHVtZT1mdW5jdGlvbih0KXt0aGlzLmltYSYmdGhpcy5pbWEuc2V0Vm9sdW1lKHQpfSxBdC5HZXRJc1Bva2lQbGF0Zm9ybT1mdW5jdGlvbigpe3JldHVybiBBdC5pc1Bva2lQbGF0Zm9ybX0sQXQuR2V0SXNQb2tpSUZyYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIDA8KHBhcnNlSW50KEUoInNpdGVfaWQiKSwxMCl8fDApfSxBdC5jaGlsZERpcmVjdGVkPSExLEF0LmlzUG9raVBsYXRmb3JtPSExLEF0Lm5vblBlcnNvbmFsaXplZD0hMSxBdC5jb25zZW50U3RyaW5nPSIiLEF0KTtmdW5jdGlvbiBBdCgpe3RoaXMuYXV0b1N0YXJ0T25SZWFkeT0hMSx0aGlzLmNyaXRlcmlhPXt9LHRoaXMuZGVidWdJc092ZXJ3cml0dGVuPSExLHRoaXMuaGFuZGxlcnM9e30sdGhpcy5pbml0aWFsaXppbmdQcm9taXNlPW51bGwsdGhpcy5pc0luaXRpYWxpemVkPSExLHRoaXMucHJvZ3JhbW1hdGljQWRzRW5hYmxlZD0hMCx0aGlzLnNka0Jvb3RlZD0hMSx0aGlzLnNka0ltYUVycm9yPSExLHRoaXMuc3RhcnRBZEVuYWJsZWQ9ITEsdGhpcy5zdGFydFN0YXJ0QWRzQWZ0ZXJUaW1lck9uSW5pdD0hMSx0aGlzLmluaXRPcHRpb25zPXt9LHRoaXMuZm9yY2VEaXNhYmxlQ29tbWVyY2lhbEJyZWFrPSExLHRoaXMuZGVidWc9ITEsdGhpcy5hZFJlYWR5PSExLHRoaXMuZGVidWdUb3VjaE92ZXJsYXlDb250cm9sbGVyPSExLHRoaXMuc2V0UGxheWVyQWdlPWZ1bmN0aW9uKHQpe3QmJmZ1bmN0aW9uKG4sZSl7aWYoUil0cnl7bG9jYWxTdG9yYWdlLnNldEl0ZW0obixlKX1jYXRjaCh0KXtSPSExLE1bbl09ZX1lbHNlIE1bbl09ZX0oInBsYXllckFnZSIsdCl9LHRoaXMudG9nZ2xlTm9uUGVyc29uYWxpemVkPWZ1bmN0aW9uKHQpe0F0Lm5vblBlcnNvbmFsaXplZD10fSx0aGlzLnNldENvbnNlbnRTdHJpbmc9ZnVuY3Rpb24odCl7QXQuY29uc2VudFN0cmluZz10fSx0aGlzLnNka05vdEJvb3RlZEJ1dENhbGxlZD1mdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IoIlRoZSBQb2tpIFNESyBoYXMgbm90IHlldCBiZWVuIGluaXRpYWxpemVkIil9O3ZhciB0PUUoInBva2lEZWJ1ZyIpOyIiIT09dCYmKHRoaXMuc2V0RGVidWcoInRydWUiPT09dCksdGhpcy5kZWJ1Z0lzT3ZlcndyaXR0ZW49ITApfWZ1bmN0aW9uIG10KHQpe3N3aXRjaChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkpe2Nhc2UiW29iamVjdCBFcnJvcl0iOmNhc2UiW29iamVjdCBFeGNlcHRpb25dIjpjYXNlIltvYmplY3QgRE9NRXhjZXB0aW9uXSI6cmV0dXJuIDE7ZGVmYXVsdDpyZXR1cm4gdCBpbnN0YW5jZW9mIEVycm9yfX12YXIgcHQ9ZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWU7cHQuZW5kc1dpdGgoInBva2ktZ2RuLmNvbSIpJiYocHQ9InBva2ktZ2RuLmNvbSIpO3ZhciBmdD1EYXRlLm5vdygpLGd0PShlPW5ldyBSZWdFeHAoInBva2lfZXJydWlkPShbXjtdKykoPzo7fCQpIikuZXhlYyhkb2N1bWVudC5jb29raWUpKT9lWzFdOiIiO2Z1bmN0aW9uIGh0KHQpe2lmKHV0LmdhbWVJZCYmdXQudmVyc2lvbklkKXtpZighKERhdGUubm93KCk8ZnQpKXtndHx8KHI9Z3Q9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsOSksZG9jdW1lbnQuY29va2llPSJwb2tpX2VycnVpZD0iK3IrIjsgcGF0aD0vOyBzYW1lc2l0ZT1sYXg7IG1heC1hZ2U9NjMwNzIwMDA7IGRvbWFpbj0iK3B0KTt0cnl7dmFyIG4sZT1KU09OLnN0cmluZ2lmeSh7Z2lkOnV0LmdhbWVJZCx2aWQ6dXQudmVyc2lvbklkLHZlOjcsbjp0Lm5hbWUsbTp0Lm1lc3NhZ2UsczpKU09OLnN0cmluZ2lmeSh0LnN0YWNrKSx1aTpndH0pLGk9Imh0dHBzOi8vdC5wb2tpLmlvL2dlIjtuYXZpZ2F0b3Iuc2VuZEJlYWNvbj9uYXZpZ2F0b3Iuc2VuZEJlYWNvbihpLGUpOigobj1uZXcgWE1MSHR0cFJlcXVlc3QpLm9wZW4oIlBPU1QiLGksITApLG4uc2VuZChlKSksZnQ9RGF0ZS5ub3coKSsxMDB9Y2F0Y2godCl7Y29uc29sZS5lcnJvcih0KX19fWVsc2UgY29uc29sZS5sb2codCk7dmFyIHJ9ZnVuY3Rpb24gd3QodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9ZnVuY3Rpb24geXQodCxuLGUpe3ZhciBpO251bGwhPXQmJigoaT10W25dKSYmaS5fX3Bva2lfX3x8KHRbbl09ZShpKSx0W25dLl9fcG9raV9fPSEwLHRbbl0uX19vcmlnX189aSkpfWZ1bmN0aW9uIGJ0KGkpe2lmKCF3dChpKSlyZXR1cm4gaTt0cnl7aWYoaS5fX3Bva2lfXylyZXR1cm4gaTtpZihpLl9fcG9raV93cmFwcGVyX18pcmV0dXJuIGkuX19wb2tpX3dyYXBwZXJfX31jYXRjaCh0KXtyZXR1cm4gaX1mdW5jdGlvbiB0KCl7Zm9yKHZhciB0PVtdLG49YXJndW1lbnRzLmxlbmd0aDtuLS07KXRbbl09YnQoYXJndW1lbnRzW25dKTt0cnl7dmFyIGU9aS5hcHBseSh0aGlzLHQpO3JldHVybiB3aW5kb3cucG9raUxhc3RDYXRjaD1udWxsLGV9Y2F0Y2godCl7dGhyb3cgd2luZG93LnBva2lMYXN0Q2F0Y2g9dH19Zm9yKHZhciBuIGluIGkpZT1pLHI9bixPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbbl09aVtuXSk7dmFyIGUscjtyZXR1cm4gdC5wcm90b3R5cGU9aS5wcm90b3R5cGUsKGkuX19wb2tpX3dyYXBwZXJfXz10KS5fX3Bva2lfXz0hMCx0Ll9fb3JpZ19fPWksdH1mdW5jdGlvbiBrdChvKXtyZXR1cm4gZnVuY3Rpb24odCxuKXtmb3IodmFyIGU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpLGk9MDtpPGUubGVuZ3RoOysraSllW2ldPWFyZ3VtZW50c1tpXTt2YXIgcj1lWzBdO3JldHVybiB3dChyKSYmKGVbMF09YnQocikpLG8uYXBwbHk/by5hcHBseSh0aGlzLGUpOm8oZVswXSxlWzFdKX19InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJih1LmEucmVtb3RlRmV0Y2hpbmc9ITEsdS5hLnJlcG9ydC5zdWJzY3JpYmUoZnVuY3Rpb24odCl7dmFyIG47IlNjcmlwdCBlcnJvci4iPT09dC5tZXNzYWdlJiZ3aW5kb3cucG9raUxhc3RDYXRjaD8obj13aW5kb3cucG9raUxhc3RDYXRjaCx3aW5kb3cucG9raUxhc3RDYXRjaD1udWxsLHUuYS5yZXBvcnQobikpOmh0KHQpfSksd2luZG93Lm9udW5oYW5kbGVkcmVqZWN0aW9uPWZ1bmN0aW9uKHQpe210KHQucmVhc29uKT91LmEucmVwb3J0KHQucmVhc29uKTpodCh7bmFtZToidW5oYW5kbGVkcmVqZWN0aW9uIixtZXNzYWdlOkpTT04uc3RyaW5naWZ5KHQucmVhc29uKX0pfSwiYmQ2YmRkOWUtMzNhOS0xMWVhLWEwOGEtYWNkZTQ4MDAxMTIyIj09PXV0LmdhbWVJZCYmKFsiRXZlbnRUYXJnZXQiLCJXaW5kb3ciLCJOb2RlIiwiQXBwbGljYXRpb25DYWNoZSIsIkF1ZGlvVHJhY2tMaXN0IiwiQ2hhbm5lbE1lcmdlck5vZGUiLCJDcnlwdG9PcGVyYXRpb24iLCJFdmVudFNvdXJjZSIsIkZpbGVSZWFkZXIiLCJIVE1MVW5rbm93bkVsZW1lbnQiLCJJREJEYXRhYmFzZSIsIklEQlJlcXVlc3QiLCJJREJUcmFuc2FjdGlvbiIsIktleU9wZXJhdGlvbiIsIk1lZGlhQ29udHJvbGxlciIsIk1lc3NhZ2VQb3J0IiwiTW9kYWxXaW5kb3ciLCJOb3RpZmljYXRpb24iLCJTVkdFbGVtZW50SW5zdGFuY2UiLCJTY3JlZW4iLCJUZXh0VHJhY2siLCJUZXh0VHJhY2tDdWUiLCJUZXh0VHJhY2tMaXN0IiwiV2ViU29ja2V0IiwiV2ViU29ja2V0V29ya2VyIiwiV29ya2VyIiwiWE1MSHR0cFJlcXVlc3QiLCJYTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0IiwiWE1MSHR0cFJlcXVlc3RVcGxvYWQiXS5mb3JFYWNoKGZ1bmN0aW9uKHQpeyh0PXdpbmRvd1t0XSYmd2luZG93W3RdLnByb3RvdHlwZSkmJnQuaGFzT3duUHJvcGVydHkmJnQuaGFzT3duUHJvcGVydHkoImFkZEV2ZW50TGlzdGVuZXIiKSYmKHl0KHQsImFkZEV2ZW50TGlzdGVuZXIiLGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbih0LG4sZSxpKXt0cnl7biYmbi5oYW5kbGVFdmVudCYmKG4uaGFuZGxlRXZlbnQ9YnQobi5oYW5kbGVFdmVudCkpfWNhdGNoKHQpe31yZXR1cm4gci5jYWxsKHRoaXMsdCxidChuKSxlLGkpfX0pLHl0KHQsInJlbW92ZUV2ZW50TGlzdGVuZXIiLGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbih0LG4sZSxpKXt0cnl7bj1uJiYobi5fX3Bva2lfd3JhcHBlcl9ffHxuKX1jYXRjaCh0KXt9cmV0dXJuIHIuY2FsbCh0aGlzLHQsbixlLGkpfX0pKX0pLHl0KHdpbmRvdywic2V0VGltZW91dCIsa3QpLHl0KHdpbmRvdywic2V0SW50ZXJ2YWwiLGt0KSx2b2lkIDAhPT13aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZ5dCh3aW5kb3csInJlcXVlc3RBbmltYXRpb25GcmFtZSIsZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuKGJ0KHQpKX19KSkpO3ZhciB2dCxTdD1mdW5jdGlvbigpe3JldHVybihTdD1PYmplY3QuYXNzaWdufHxmdW5jdGlvbih0KXtmb3IodmFyIG4sZT0xLGk9YXJndW1lbnRzLmxlbmd0aDtlPGk7ZSsrKWZvcih2YXIgciBpbiBuPWFyZ3VtZW50c1tlXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixyKSYmKHRbcl09bltyXSk7cmV0dXJuIHR9KS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LEV0PSh4dC5wcm90b3R5cGUuc2V0RGVidWc9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9ITApLHRoaXMuU0RLLnNldERlYnVnKHQpfSx4dC5wcm90b3R5cGUuZGlzYWJsZVByb2dyYW1tYXRpYz1mdW5jdGlvbigpe3RoaXMuU0RLLmRpc2FibGVQcm9ncmFtbWF0aWMoKX0seHQucHJvdG90eXBlLnRvZ2dsZU5vblBlcnNvbmFsaXplZD1mdW5jdGlvbih0KXt2b2lkIDA9PT10JiYodD0hMSksdGhpcy5TREsudG9nZ2xlTm9uUGVyc29uYWxpemVkKHQpfSx4dC5wcm90b3R5cGUuc2V0Q29uc2VudFN0cmluZz1mdW5jdGlvbih0KXt0aGlzLlNESy5zZXRDb25zZW50U3RyaW5nKHQpfSx4dC5wcm90b3R5cGUuZGlzcGxheUFkPWZ1bmN0aW9uKHQsbil7ay50cmFjayh5LnRyYWNraW5nLnNjcmVlbi5kaXNwbGF5QWQse3NpemU6bn0pLHRoaXMuU0RLLmRpc3BsYXlBZCh0LG4pfSx4dC5wcm90b3R5cGUuZGVzdHJveUFkPWZ1bmN0aW9uKHQpe3RoaXMuU0RLLmRlc3Ryb3lBZCh0KX0seHQucHJvdG90eXBlLnNldFZvbHVtZT1mdW5jdGlvbih0KXt0aGlzLlNESy5zZXRWb2x1bWUodCl9LG5ldyB4dCk7ZnVuY3Rpb24geHQoKXt2YXIgaT10aGlzO3RoaXMuZ2FtZVN0YXJ0ZWQ9ITEsdGhpcy5TREs9bmV3IGx0LHRoaXMuZ2FtZXBsYXlTdGFydENvdW50ZXI9MCx0aGlzLmdhbWVwbGF5U3RvcENvdW50ZXI9MCx0aGlzLmluaXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXt9KSxuZXcgUHJvbWlzZShmdW5jdGlvbih0LG4pe2UmJmUuYWRUYWdVcmwmJndpbmRvdyYmKHdpbmRvdy5fX0ludGVybmFsU0RLPWkuU0RLKSxpLlNESy5pbml0KFN0KHtvblJlYWR5OnQsb25BZGJsb2NrZWQ6bn0sZSkpLG0uc2VuZE1lc3NhZ2UoeS5tZXNzYWdlLnNka0RldGFpbHMse3ZlcnNpb246IjIuMTUwLjAifSl9KX0sdGhpcy5pbml0V2l0aFZpZGVvSEI9ZnVuY3Rpb24oKXtyZXR1cm4gaS5pbml0KCl9LHRoaXMuZ2FtZUxvYWRpbmdQcm9ncmVzcz1mdW5jdGlvbih0KXt2YXIgbj17fTt2b2lkIDAhPT10LnBlcmNlbnRhZ2VEb25lJiYobi5wZXJjZW50YWdlRG9uZT1OdW1iZXIodC5wZXJjZW50YWdlRG9uZSkpLHZvaWQgMCE9PXQua2JMb2FkZWQmJihuLmtiTG9hZGVkPU51bWJlcih0LmtiTG9hZGVkKSksdm9pZCAwIT09dC5rYlRvdGFsJiYobi5rYlRvdGFsPU51bWJlcih0LmtiVG90YWwpKSx2b2lkIDAhPT10LmZpbGVOYW1lTG9hZGVkJiYobi5maWxlTmFtZUxvYWRlZD1TdHJpbmcodC5maWxlTmFtZUxvYWRlZCkpLHZvaWQgMCE9PXQuZmlsZXNMb2FkZWQmJihuLmZpbGVzTG9hZGVkPU51bWJlcih0LmZpbGVzTG9hZGVkKSksdm9pZCAwIT09dC5maWxlc1RvdGFsJiYobi5maWxlc1RvdGFsPU51bWJlcih0LmZpbGVzVG90YWwpKSxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLmdhbWVMb2FkaW5nUHJvZ3Jlc3Msbil9LHRoaXMuZ2FtZUxvYWRpbmdTdGFydD1mdW5jdGlvbigpe2sudHJhY2soeS50cmFja2luZy5zY3JlZW4uZ2FtZUxvYWRpbmdTdGFydGVkKX0sdGhpcy5nYW1lTG9hZGluZ0ZpbmlzaGVkPWZ1bmN0aW9uKCl7ay50cmFjayh5LnRyYWNraW5nLnNjcmVlbi5nYW1lTG9hZGluZ0ZpbmlzaGVkKX0sdGhpcy5nYW1lcGxheVN0YXJ0PWZ1bmN0aW9uKHQpe2kuZ2FtZXBsYXlTdGFydENvdW50ZXIrKyxpLmdhbWVTdGFydGVkfHwoaS5nYW1lU3RhcnRlZD0hMCxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLmZpcnN0Um91bmQpLGkuU0RLLnN0YXJ0U3RhcnRBZHNBZnRlclRpbWVyKCkpLGsudHJhY2soeS50cmFja2luZy5zY3JlZW4uZ2FtZXBsYXlTdGFydCxTdChTdCh7fSx0KSx7cGxheUlkOmkuZ2FtZXBsYXlTdGFydENvdW50ZXJ9KSl9LHRoaXMuZ2FtZUludGVyYWN0aXZlPWZ1bmN0aW9uKCl7ay50cmFjayh5LnRyYWNraW5nLnNjcmVlbi5nYW1lSW50ZXJhY3RpdmUpfSx0aGlzLmdhbWVwbGF5U3RvcD1mdW5jdGlvbih0KXtpLmdhbWVwbGF5U3RvcENvdW50ZXIrKyxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLmdhbWVwbGF5U3RvcCxTdChTdCh7fSx0KSx7cGxheUlkOmkuZ2FtZXBsYXlTdGFydENvdW50ZXIsc3RvcElkOmkuZ2FtZXBsYXlTdG9wQ291bnRlcn0pKX0sdGhpcy5yb3VuZFN0YXJ0PWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSIiKSx0PVN0cmluZyh0KSxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLnJvdW5kU3RhcnQse2lkZW50aWZpZXI6dH0pfSx0aGlzLnJvdW5kRW5kPWZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQmJih0PSIiKSx0PVN0cmluZyh0KSxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLnJvdW5kRW5kLHtpZGVudGlmaWVyOnR9KX0sdGhpcy5jdXN0b21FdmVudD1mdW5jdGlvbih0LG4sZSl7dm9pZCAwPT09ZSYmKGU9e30pLHQmJm4/KHQ9U3RyaW5nKHQpLG49U3RyaW5nKG4pLGU9U3Qoe30sZSksay50cmFjayh5LnRyYWNraW5nLmN1c3RvbSx7ZXZlbnROb3VuOnQsZXZlbnRWZXJiOm4sZXZlbnREYXRhOmV9KSk6aS5lcnJvcigiY3VzdG9tRXZlbnQiLCJjdXN0b21FdmVudCBuZWVkcyBhdCBsZWFzdCBhIG5vdW4gYW5kIGEgdmVyYiIpfSx0aGlzLmNvbW1lcmNpYWxCcmVhaz1mdW5jdGlvbigpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0KXt2YXIgbj1pLmdhbWVTdGFydGVkP3kuYWRzLnBvc2l0aW9uLm1pZHJvbGw6eS5hZHMucG9zaXRpb24ucHJlcm9sbDtiLmNsZWFyQW5ub3RhdGlvbnMoKSxiLnNldERhdGFBbm5vdGF0aW9ucyh7b3Bwb3J0dW5pdHlJZDpldCgpLHBvc2l0aW9uOm59KSxrLnRyYWNrKHkudHJhY2tpbmcuc2NyZWVuLmNvbW1lcmNpYWxCcmVhayksaS5TREsucmVxdWVzdEFkKHtwb3NpdGlvbjpuLG9uRmluaXNoOnR9KX0pfSx0aGlzLnJld2FyZGVkQnJlYWs9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24obil7dmFyIHQ9eS5hZHMucG9zaXRpb24ucmV3YXJkZWQ7Yi5jbGVhckFubm90YXRpb25zKCksYi5zZXREYXRhQW5ub3RhdGlvbnMoe29wcG9ydHVuaXR5SWQ6ZXQoKSxwb3NpdGlvbjp0fSksay50cmFjayh5LnRyYWNraW5nLnNjcmVlbi5yZXdhcmRlZEJyZWFrKSxpLlNESy5yZXF1ZXN0QWQoe3Bvc2l0aW9uOnQsb25GaW5pc2g6ZnVuY3Rpb24odCl7MDx0Lmxlbmd0aD9uKHRbMF0ucmV3YXJkQWxsb3dlZCk6bighMSl9fSl9KX0sdGhpcy5oYXBweVRpbWU9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9MSksKCh0PU51bWJlcih0KSk8MHx8MTx0KSYmKHQ9TWF0aC5tYXgoMCxNYXRoLm1pbigxLHQpKSxpLndhcm5pbmcoImhhcHB5VGltZSIsIkludGVuc2l0eSBzaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEsIGFkanVzdGVkIHRvICIrdCkpLGsudHJhY2soeS50cmFja2luZy5zY3JlZW4uaGFwcHlUaW1lLHtpbnRlbnNpdHk6dH0pfSx0aGlzLm11dGVBZD1mdW5jdGlvbigpe2kuU0RLLm11dGVBZCgpfSx0aGlzLnNldFBsYXllckFnZT1mdW5jdGlvbih0KXtrLnRyYWNrKHkudHJhY2tpbmcuc2V0UGxheWVyQWdlLHthZ2U6dH0pLHQmJmkuU0RLLnNldFBsYXllckFnZSh0KX0sdGhpcy50b2dnbGVQbGF5ZXJBZHZlcnRpc2luZ0NvbnNlbnQ9ZnVuY3Rpb24odCl7ay50cmFjayh5LnRyYWNraW5nLnRvZ2dsZVBsYXllckFkdmVydGlzaW5nQ29uc2VudCx7ZGlkQ29uc2VudDp0fSksaS5TREsudG9nZ2xlUGxheWVyQWR2ZXJ0aXNpbmdDb25zZW50KHQpLG0uc2VuZE1lc3NhZ2UoeS5tZXNzYWdlLnRvZ2dsZVByb2dyYW1tYXRpY0Fkcyx7ZW5hYmxlZDppLlNESy5nZXRQcm9ncmFtbWF0aWNBZHNFbmFibGVkKCl9KX0sdGhpcy5sb2dFcnJvcj1mdW5jdGlvbih0KXttdCh0KT9jLnJlcG9ydCh0KTpodCh7bmFtZToibG9nRXJyb3IiLG1lc3NhZ2U6SlNPTi5zdHJpbmdpZnkodCl9KX0sdGhpcy5zZW5kSGlnaHNjb3JlPWZ1bmN0aW9uKCl7fSx0aGlzLnNldERlYnVnVG91Y2hPdmVybGF5Q29udHJvbGxlcj1mdW5jdGlvbih0KXtpLlNESy5kZWJ1Z1RvdWNoT3ZlcmxheUNvbnRyb2xsZXI9dH0sdGhpcy5nZXRMZWFkZXJib2FyZD1mdW5jdGlvbigpe3JldHVybiBQcm9taXNlLnJlc29sdmUoW10pfSx0aGlzLndhcm5pbmc9ZnVuY3Rpb24odCxuKXtjb25zb2xlLndhcm4oIlBva2lTREsuIit0KyI6ICIrbil9LHRoaXMuZXJyb3I9ZnVuY3Rpb24odCxuKXtjb25zb2xlLmVycm9yKCJQb2tpU0RLLiIrdCsiOiAiK24pfX1mb3IodnQgaW4gRXQpd2luZG93LlBva2lTREtbdnRdPUV0W3Z0XX1dKTs="
            }(),
            i = document.createElement("script");
        i.setAttribute("src", r), i.setAttribute("type", "text/javascript"), i.onload = function() {
            return o.dequeue()
        }, document.head.appendChild(i)
    }
});
